webpackJsonp([11],{

/***/ 1044:
/* no static exports found */
/* all exports used */
/*!*****************************************************!*\
  !*** ./src/components/message/messageqigheader.tsx ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar NotificationCount = __webpack_require__(/*! ./notificationcount */ 465);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar messageQIGHeader = function (props) {\r\n    return (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'msg-group-head', onClick: function () { props.headerClick(); }, title: localeStore.instance.TranslateText('messaging.message-lists.message-summaries.qig-group-tooltip') },\r\n        React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon', id: 'icon-' + props.id }),\r\n        React.createElement(\"span\", { className: 'msg-group-head-name', id: 'qig-header-text-' + props.id },\r\n            props.qigName,\r\n            React.createElement(NotificationCount, { unReadMessageCount: props.unReadMessages, id: 'qig-header-' + props.id, key: 'qig-header-' + props.id }))));\r\n};\r\nmodule.exports = messageQIGHeader;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0NC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZXFpZ2hlYWRlci50c3g/MmJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uQ291bnQgPSByZXF1aXJlKCcuL25vdGlmaWNhdGlvbmNvdW50Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlUUlHSGVhZGVyUHJvcHMgZXh0ZW5kcyBMb2NhbGVTZWxlY3Rpb25CYXNlLCBQcm9wc0Jhc2Uge1xyXG4gICAgcWlnTmFtZTogc3RyaW5nO1xyXG4gICAgdW5SZWFkTWVzc2FnZXM6IG51bWJlcjtcclxuICAgIGhlYWRlckNsaWNrOiBGdW5jdGlvbjtcclxufVxyXG5cclxuY29uc3QgbWVzc2FnZVFJR0hlYWRlcjogUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50PE1lc3NhZ2VRSUdIZWFkZXJQcm9wcz4gPSAocHJvcHM6IE1lc3NhZ2VRSUdIZWFkZXJQcm9wcykgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknIGNsYXNzTmFtZT0nbXNnLWdyb3VwLWhlYWQnIG9uQ2xpY2s9eygpID0+IHsgcHJvcHMuaGVhZGVyQ2xpY2soKTsgfX1cclxuICAgICAgICAgICAgdGl0bGU9e2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ21lc3NhZ2luZy5tZXNzYWdlLWxpc3RzLm1lc3NhZ2Utc3VtbWFyaWVzLnFpZy1ncm91cC10b29sdGlwJyl9PlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3Nwcml0ZS1pY29uIG1lbnUtYXJyb3ctaWNvbicgaWQ9eydpY29uLScgKyBwcm9wcy5pZH0+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdtc2ctZ3JvdXAtaGVhZC1uYW1lJyBpZD17J3FpZy1oZWFkZXItdGV4dC0nICsgcHJvcHMuaWR9ID5cclxuICAgICAgICAgICAgICAgICAgICB7IHByb3BzLnFpZ05hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkNvdW50XHJcbiAgICAgICAgICAgICAgICAgICAgdW5SZWFkTWVzc2FnZUNvdW50ID0geyBwcm9wcy51blJlYWRNZXNzYWdlcyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWQgPSB7J3FpZy1oZWFkZXItJyArIHByb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgICAgIGtleSA9IHsncWlnLWhlYWRlci0nICsgcHJvcHMuaWR9IC8+XHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9hPlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCA9IG1lc3NhZ2VRSUdIZWFkZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZXFpZ2hlYWRlci50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 1045:
/* no static exports found */
/* all exports used */
/*!*********************************************!*\
  !*** ./src/components/message/messages.tsx ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar MessageSummary = __webpack_require__(/*! ./messagesummary */ 1047);\r\nvar messages = function (props) {\r\n    var toRender = props.messages.map(function (message) {\r\n        var msgIndex = props.messages.indexOf(message) + 1;\r\n        return (React.createElement(MessageSummary, { message: message, selectedMsgId: props.selectedMsgId, id: 'msg-' + msgIndex + '-' + props.id, key: 'msg-' + msgIndex + '-' + props.id, selectedLanguage: props.selectedLanguage, unReadMessages: props.unReadMessages, onSelectedMessageChanged: props.onSelectedMessageChanged }));\r\n    });\r\n    return (React.createElement(\"ul\", { className: 'msg-listing' }, toRender));\r\n};\r\nmodule.exports = messages;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0NS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZXMudHN4P2EyNjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBNZXNzYWdlU3VtbWFyeSA9IHJlcXVpcmUoJy4vbWVzc2FnZXN1bW1hcnknKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlc0ZvclFJR1Byb3BzIGV4dGVuZHMgTG9jYWxlU2VsZWN0aW9uQmFzZSwgUHJvcHNCYXNlIHtcclxuICAgIG1lc3NhZ2VzOiBJbW11dGFibGUuTGlzdDxNZXNzYWdlPjtcclxuICAgIHNlbGVjdGVkTXNnSWQ6IG51bWJlcjtcclxuICAgIG9uU2VsZWN0ZWRNZXNzYWdlQ2hhbmdlZDogRnVuY3Rpb247XHJcbiAgICB1blJlYWRNZXNzYWdlczogbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBtZXNzYWdlczogUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50PE1lc3NhZ2VzRm9yUUlHUHJvcHM+ID0gKHByb3BzOiBNZXNzYWdlc0ZvclFJR1Byb3BzKSA9PiB7XHJcblxyXG4gICAgbGV0IHRvUmVuZGVyID0gcHJvcHMubWVzc2FnZXMubWFwKChtZXNzYWdlOiBNZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgbGV0IG1zZ0luZGV4ID0gcHJvcHMubWVzc2FnZXMuaW5kZXhPZihtZXNzYWdlKSArIDE7XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxNZXNzYWdlU3VtbWFyeVxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSB7IG1lc3NhZ2UgfVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkTXNnSWQgPSB7cHJvcHMuc2VsZWN0ZWRNc2dJZH1cclxuICAgICAgICAgICAgICAgICAgICBpZCA9IHsgJ21zZy0nICsgbXNnSW5kZXggKyAnLScgKyBwcm9wcy5pZCB9XHJcbiAgICAgICAgICAgICAgICAgICAga2V5ID0geyAnbXNnLScgKyBtc2dJbmRleCArICctJyArIHByb3BzLmlkIH1cclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlPXtwcm9wcy5zZWxlY3RlZExhbmd1YWdlfVxyXG4gICAgICAgICAgICAgICAgICAgIHVuUmVhZE1lc3NhZ2VzPXtwcm9wcy51blJlYWRNZXNzYWdlc31cclxuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdGVkTWVzc2FnZUNoYW5nZWQgPSB7IHByb3BzLm9uU2VsZWN0ZWRNZXNzYWdlQ2hhbmdlZCB9ID5cclxuICAgICAgICAgICAgICAgIDwvTWVzc2FnZVN1bW1hcnk+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9J21zZy1saXN0aW5nJz5cclxuICAgICAgICAgICAgICAgIHsgdG9SZW5kZXIgfVxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZXM7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZXMudHN4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFHQTtBQVNBO0FBRUE7QUFDQTtBQUVBO0FBV0E7QUFFQTtBQUtBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 1046:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/message/messagesforqig.tsx ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar Messages = __webpack_require__(/*! ./messages */ 1045);\r\nvar MessageQIGHeader = __webpack_require__(/*! ./messageqigheader */ 1044);\r\nvar MessagesForQig = /** @class */ (function (_super) {\r\n    __extends(MessagesForQig, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function MessagesForQig(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.onClick = _this.onClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render the Group Header and details.\r\n     */\r\n    MessagesForQig.prototype.render = function () {\r\n        return (React.createElement(\"li\", { className: classNames('msg-group msg-item', { 'open': this.props.isOpen }), id: 'grp-' + this.props.id },\r\n            React.createElement(MessageQIGHeader, { qigName: this.props.qigName, unReadMessages: this.props.unReadMessages, id: 'header-' + this.props.id, key: 'header-' + this.props.id, headerClick: this.onClick }),\r\n            React.createElement(\"div\", { id: 'grp-ul-' + this.props.id, className: 'msg-group-items' },\r\n                React.createElement(Messages, { messages: this.props.messages, selectedMsgId: this.props.selectedMsgId, id: this.props.id, key: this.props.id, selectedLanguage: this.props.selectedLanguage, unReadMessages: this.props.unReadMessages, onSelectedMessageChanged: this.props.onSelectedMessageChanged }))));\r\n    };\r\n    /**\r\n     * Handles the click event for expand or collapse\r\n     * @param evnt\r\n     */\r\n    MessagesForQig.prototype.onClick = function (evnt) {\r\n        this.props.onExpandOrCollapse(this.props.qigId, !this.props.isOpen);\r\n    };\r\n    return MessagesForQig;\r\n}(pureRenderComponent));\r\nmodule.exports = MessagesForQig;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0Ni5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZXNmb3JxaWcudHN4Pzg3OGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IHB1cmVSZW5kZXJDb21wb25lbnQgPSByZXF1aXJlKCcuLi9iYXNlL3B1cmVyZW5kZXJjb21wb25lbnQnKTtcclxuaW1wb3J0IEltbXV0YWJsZSA9IHJlcXVpcmUoJ2ltbXV0YWJsZScpO1xyXG5sZXQgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcclxuaW1wb3J0IE1lc3NhZ2VzID0gcmVxdWlyZSgnLi9tZXNzYWdlcycpO1xyXG5pbXBvcnQgTWVzc2FnZVFJR0hlYWRlciA9IHJlcXVpcmUoJy4vbWVzc2FnZXFpZ2hlYWRlcicpO1xyXG5cclxuLyoqXHJcbiAqIFByb3BlcnRpZXMgb2YgYSBjb21wb25lbnRcclxuICovXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBtZXNzYWdlczogSW1tdXRhYmxlLkxpc3Q8TWVzc2FnZT47XHJcbiAgICBxaWdOYW1lOiBzdHJpbmc7XHJcbiAgICB1blJlYWRNZXNzYWdlczogbnVtYmVyO1xyXG4gICAgc2VsZWN0ZWRNc2dJZDogbnVtYmVyO1xyXG4gICAgb25TZWxlY3RlZE1lc3NhZ2VDaGFuZ2VkOiBGdW5jdGlvbjtcclxuICAgIHFpZ0lkOiBudW1iZXI7XHJcbiAgICBpc09wZW46IGJvb2xlYW47XHJcbiAgICBvbkV4cGFuZE9yQ29sbGFwc2U6IEZ1bmN0aW9uO1xyXG59XHJcblxyXG5jbGFzcyBNZXNzYWdlc0ZvclFpZyBleHRlbmRzIHB1cmVSZW5kZXJDb21wb25lbnQ8UHJvcHMsIGFueT4ge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogY29uc3RydWN0b3JcclxuICAgICAqIEBwYXJhbSBwcm9wc1xyXG4gICAgICogQHBhcmFtIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBQcm9wcywgc3RhdGU6IGFueSkge1xyXG4gICAgICAgIHN1cGVyKHByb3BzLCBzdGF0ZSk7XHJcbiAgICAgICAgdGhpcy5vbkNsaWNrID0gdGhpcy5vbkNsaWNrLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgdGhlIEdyb3VwIEhlYWRlciBhbmQgZGV0YWlscy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXsgY2xhc3NOYW1lcygnbXNnLWdyb3VwIG1zZy1pdGVtJywgeyAnb3Blbic6IHRoaXMucHJvcHMuaXNPcGVuIH0pIH1cclxuICAgICAgICAgICAgICAgIGlkID0geydncnAtJyArIHRoaXMucHJvcHMuaWR9ID5cclxuICAgICAgICAgICAgICAgIDxNZXNzYWdlUUlHSGVhZGVyXHJcbiAgICAgICAgICAgICAgICAgICAgcWlnTmFtZSA9IHsgdGhpcy5wcm9wcy5xaWdOYW1lIH1cclxuICAgICAgICAgICAgICAgICAgICB1blJlYWRNZXNzYWdlcyA9IHt0aGlzLnByb3BzLnVuUmVhZE1lc3NhZ2VzfVxyXG4gICAgICAgICAgICAgICAgICAgIGlkID0geydoZWFkZXItJyArIHRoaXMucHJvcHMuaWR9XHJcbiAgICAgICAgICAgICAgICAgICAga2V5ID0geydoZWFkZXItJyArIHRoaXMucHJvcHMuaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xpY2sgPSB7dGhpcy5vbkNsaWNrfSA+XHJcbiAgICAgICAgICAgICAgICA8L01lc3NhZ2VRSUdIZWFkZXI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGlkID0geydncnAtdWwtJyArIHRoaXMucHJvcHMuaWR9IGNsYXNzTmFtZT0nbXNnLWdyb3VwLWl0ZW1zJz5cclxuICAgICAgICAgICAgICAgICAgICA8TWVzc2FnZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXM9IHsgdGhpcy5wcm9wcy5tZXNzYWdlcyB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkTXNnSWQgPSB7dGhpcy5wcm9wcy5zZWxlY3RlZE1zZ0lkfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZCA9IHt0aGlzLnByb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSB7dGhpcy5wcm9wcy5pZH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZT17dGhpcy5wcm9wcy5zZWxlY3RlZExhbmd1YWdlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB1blJlYWRNZXNzYWdlcyA9IHt0aGlzLnByb3BzLnVuUmVhZE1lc3NhZ2VzfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdGVkTWVzc2FnZUNoYW5nZWQgPSB7IHRoaXMucHJvcHMub25TZWxlY3RlZE1lc3NhZ2VDaGFuZ2VkIH0gPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvIE1lc3NhZ2VzPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZXMgdGhlIGNsaWNrIGV2ZW50IGZvciBleHBhbmQgb3IgY29sbGFwc2VcclxuICAgICAqIEBwYXJhbSBldm50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGljayhldm50OiBhbnkpIHtcclxuICAgICAgICB0aGlzLnByb3BzLm9uRXhwYW5kT3JDb2xsYXBzZSh0aGlzLnByb3BzLnFpZ0lkLCAhdGhpcy5wcm9wcy5pc09wZW4pO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgPSBNZXNzYWdlc0ZvclFpZztcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlc2ZvcnFpZy50c3giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQWdCQTtBQUFBO0FBRUE7Ozs7QUFJQTtBQUNBO0FBQUE7QUFFQTs7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBT0E7QUFDQTtBQVlBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 1047:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/message/messagesummary.tsx ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar messageTranslationHelper = __webpack_require__(/*! ../utility/message/messagetranslationhelper */ 459);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * Make the string as html.\r\n * @param messageContent\r\n */\r\nvar createMarkup = function (messageContent) {\r\n    return {\r\n        __html: messageContent\r\n    };\r\n};\r\n/**\r\n * This component was a stateless component, But seems that it is rerendering even it is no changes in props and state.\r\n * This wont happen in pureRender => Child component wont re render if it is not having any props or state change.\r\n */\r\nvar MessageSummary = /** @class */ (function (_super) {\r\n    __extends(MessageSummary, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageSummary(props) {\r\n        var _this = _super.call(this, props, null) || this;\r\n        _this.onMessageClick = function (event) {\r\n            if (_this.props.message.examinerMessageId !== _this.props.selectedMsgId) {\r\n                _this.props.onSelectedMessageChanged(_this.props.message);\r\n            }\r\n            // Fire Action, If Read status need to be updated. and update the.\r\n            event.stopPropagation();\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * append examiners\r\n     */\r\n    MessageSummary.prototype.appendExaminer = function () {\r\n        var examiners = '';\r\n        if (this.props.message && this.props.message.toExaminerDetails != null) {\r\n            this.props.message.toExaminerDetails.map(function (item) {\r\n                examiners += item.fullName + ';';\r\n            });\r\n            // removing last item semicolon\r\n            return examiners.replace(/;$/, '');\r\n        }\r\n        return examiners;\r\n    };\r\n    /**\r\n     * Render method\r\n     */\r\n    MessageSummary.prototype.render = function () {\r\n        var messagePriority;\r\n        if (this.props.message.priorityName !== enums.getEnumString(enums.MessagePriority, enums.MessagePriority.Standard)) {\r\n            messagePriority = (React.createElement(\"span\", { className: classNames('sprite-icon', {\r\n                    'exclamtion-icon-red': this.props.message.priorityName === enums.getEnumString(enums.MessagePriority, enums.MessagePriority.Important)\r\n                }, {\r\n                    'star-icon-red': this.props.message.priorityName === enums.getEnumString(enums.MessagePriority, enums.MessagePriority.Mandatory)\r\n                }, 'black') }));\r\n        }\r\n        var isMessageRead = messageStore.instance.isMessageRead(this.props.message.examinerMessageId);\r\n        var translatedMessageContents = messageTranslationHelper.getTranslatedContent(this.props.message);\r\n        var toRender;\r\n        if (this.props.message.messageFolderType === enums.MessageFolderType.Inbox) {\r\n            toRender = (React.createElement(\"div\", { id: 'sender-' + this.props.id, className: 'msg-sender small-text' }, messageTranslationHelper.getExaminerName(this.props.message)));\r\n        }\r\n        else {\r\n            toRender = (React.createElement(\"div\", { id: 'sender-' + this.props.id, className: 'msg-sender small-text' }, !this.props.message.toTeam ? this.appendExaminer()\r\n                : localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.entire-team')));\r\n        }\r\n        return (React.createElement(\"li\", { id: 'msg-item-' + this.props.id, onClick: this.onMessageClick, className: classNames('msg-item', { 'unread': this.props.message.status === enums.MessageReadStatus.New && !isMessageRead }, { 'selected': this.props.message.examinerMessageId === this.props.selectedMsgId }) },\r\n            React.createElement(\"a\", { href: 'javascript:void(0)', className: 'msg-item-link' },\r\n                React.createElement(\"div\", { className: 'msg-meta', \"data-id\": this.props.message.examinerMessageId },\r\n                    React.createElement(\"div\", { className: 'meta-left' },\r\n                        toRender,\r\n                        React.createElement(\"div\", { id: 'subject-' + this.props.id, className: 'msg-title' }, translatedMessageContents.subject)),\r\n                    React.createElement(\"div\", { className: 'meta-right small-text' },\r\n                        React.createElement(\"div\", { id: 'time-' + this.props.id, className: 'msg-time' }, messageHelper.getDateToDisplay(this.props.message.displayDate)),\r\n                        React.createElement(\"div\", { id: 'priority-' + this.props.id, className: 'msg-meta-icons' },\r\n                            React.createElement(\"div\", { className: 'msg-importance' }, messagePriority)),\r\n                        React.createElement(\"div\", { className: 'msg-flag' }))),\r\n                React.createElement(\"div\", { id: 'body-summary-' + this.props.id, className: 'msg-body small-text' },\r\n                    React.createElement(\"p\", { className: 'summary-text', id: 'msg-first-line', dangerouslySetInnerHTML: createMarkup(translatedMessageContents.firstLine) })))));\r\n    };\r\n    return MessageSummary;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageSummary;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 290:
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./src/components/utility/genericbutton.tsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*\r\n  React component for Generic button.\r\n*/\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:disable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\n/**\r\n * React component class for Generic button implementation.\r\n */\r\nvar GenericButton = /** @class */ (function (_super) {\r\n    __extends(GenericButton, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function GenericButton(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.onClick = _this.onClick.bind(_this);\r\n        _this.onDoubleClick = _this.onDoubleClick.bind(_this);\r\n        _this.onMouseEnter = _this.onMouseEnter.bind(_this);\r\n        _this.onMouseLeave = _this.onMouseLeave.bind(_this);\r\n        _this.onMouseOver = _this.onMouseOver.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    GenericButton.prototype.render = function () {\r\n        var buttonElement;\r\n        buttonElement = (React.createElement(\"button\", { id: this.props.id, title: this.props.title, className: this.props.className, onClick: this.onClick, disabled: this.props.disabled, onDoubleClick: this.onDoubleClick, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onMouseOver: this.onMouseOver },\r\n            this.props.content,\r\n            this.props.childrens != null ? this.props.childrens : null));\r\n        return buttonElement;\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    GenericButton.prototype.componentDidMount = function () {\r\n        applicationStore.instance.setMaxListeners(0);\r\n    };\r\n    /**\r\n     * Handles the single click event.\r\n     * @param evnt\r\n     */\r\n    GenericButton.prototype.onClick = function (evnt) {\r\n        if (this.props.onClick != null) {\r\n            this.props.onClick(evnt);\r\n        }\r\n    };\r\n    /**\r\n     * Handles the double click event.\r\n     * @param evnt\r\n     */\r\n    GenericButton.prototype.onDoubleClick = function (evnt) {\r\n        if (this.props.onDoubleClick != null) {\r\n            this.props.onDoubleClick();\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse enter event.\r\n     * @param evnt\r\n     */\r\n    GenericButton.prototype.onMouseEnter = function (evnt) {\r\n        if (this.props.onMouseEnter != null) {\r\n            this.props.onMouseEnter();\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse leave event.\r\n     * @param evnt\r\n     */\r\n    GenericButton.prototype.onMouseLeave = function (evnt) {\r\n        if (this.props.onMouseLeave != null) {\r\n            this.props.onMouseLeave();\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse over event.\r\n     * @param evnt\r\n     */\r\n    GenericButton.prototype.onMouseOver = function (evnt) {\r\n        if (this.props.onMouseOver != null) {\r\n            this.props.onMouseOver();\r\n        }\r\n    };\r\n    return GenericButton;\r\n}(pureRenderComponent));\r\nmodule.exports = GenericButton;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9nZW5lcmljYnV0dG9uLnRzeD9kNzJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAgUmVhY3QgY29tcG9uZW50IGZvciBHZW5lcmljIGJ1dHRvbi5cclxuKi9cclxuLyogdHNsaW50OmRpc2FibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbi8qIHRzbGludDpkaXNhYmxlOm5vLXVudXNlZC12YXJpYWJsZSAqL1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgYXBwbGljYXRpb25TdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9hcHBsaWNhdGlvbm9mZmxpbmUvYXBwbGljYXRpb25zdG9yZScpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuL2VudW1zJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICB0aXRsZT86IHN0cmluZztcclxuICAgIGNvbnRlbnQ/OiBzdHJpbmc7XHJcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XHJcbiAgICB0YWJJbmRleD86IG51bWJlcjtcclxuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcclxuICAgIGNoaWxkcmVucz86IEFycmF5PEpTWC5FbGVtZW50PjtcclxuICAgIG9uQ2xpY2s/OiBGdW5jdGlvbjtcclxuICAgIG9uRG91YmxlQ2xpY2s/OiBGdW5jdGlvbjtcclxuICAgIG9uTW91c2VFbnRlcj86IEZ1bmN0aW9uO1xyXG4gICAgb25Nb3VzZUxlYXZlPzogRnVuY3Rpb247XHJcbiAgICBvbk1vdXNlT3Zlcj86IEZ1bmN0aW9uO1xyXG4gICAgYnV0dG9uVHlwZT86IGVudW1zLkJ1dHRvblR5cGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZWFjdCBjb21wb25lbnQgY2xhc3MgZm9yIEdlbmVyaWMgYnV0dG9uIGltcGxlbWVudGF0aW9uLlxyXG4gKi9cclxuY2xhc3MgR2VuZXJpY0J1dHRvbiBleHRlbmRzIHB1cmVSZW5kZXJDb21wb25lbnQ8UHJvcHMsIGFueT4ge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogY29uc3RydWN0b3JcclxuICAgICAqIEBwYXJhbSBwcm9wc1xyXG4gICAgICogQHBhcmFtIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBQcm9wcywgc3RhdGU6IGFueSkge1xyXG4gICAgICAgIHN1cGVyKHByb3BzLCBzdGF0ZSk7XHJcbiAgICAgICAgdGhpcy5vbkNsaWNrID0gdGhpcy5vbkNsaWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vbkRvdWJsZUNsaWNrID0gdGhpcy5vbkRvdWJsZUNsaWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vbk1vdXNlRW50ZXIgPSB0aGlzLm9uTW91c2VFbnRlci5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25Nb3VzZUxlYXZlID0gdGhpcy5vbk1vdXNlTGVhdmUuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uTW91c2VPdmVyID0gdGhpcy5vbk1vdXNlT3Zlci5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCkge1xyXG4gICAgICAgIGxldCBidXR0b25FbGVtZW50OiBKU1guRWxlbWVudDtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQgPSAoPGJ1dHRvbiBpZD17dGhpcy5wcm9wcy5pZH1cclxuICAgICAgICAgICAgICAgICAgICB0aXRsZT17dGhpcy5wcm9wcy50aXRsZX1cclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3RoaXMucHJvcHMuY2xhc3NOYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25DbGlja31cclxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5wcm9wcy5kaXNhYmxlZH1cclxuICAgICAgICAgICAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0aGlzLm9uRG91YmxlQ2xpY2t9XHJcbiAgICAgICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXt0aGlzLm9uTW91c2VFbnRlcn1cclxuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9e3RoaXMub25Nb3VzZUxlYXZlfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uTW91c2VPdmVyPXt0aGlzLm9uTW91c2VPdmVyfT5cclxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jb250ZW50fVxyXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVucyAhPSBudWxsID8gdGhpcy5wcm9wcy5jaGlsZHJlbnMgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgPC9idXR0b24+KTtcclxuICAgICAgICByZXR1cm4gYnV0dG9uRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBvbmVudCBkaWQgbW91bnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIGFwcGxpY2F0aW9uU3RvcmUuaW5zdGFuY2Uuc2V0TWF4TGlzdGVuZXJzKDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGFuZGxlcyB0aGUgc2luZ2xlIGNsaWNrIGV2ZW50LlxyXG4gICAgICogQHBhcmFtIGV2bnRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsaWNrKGV2bnQ6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uQ2xpY2sgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2xpY2soZXZudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGFuZGxlcyB0aGUgZG91YmxlIGNsaWNrIGV2ZW50LlxyXG4gICAgICogQHBhcmFtIGV2bnRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkRvdWJsZUNsaWNrKGV2bnQ6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uRG91YmxlQ2xpY2sgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRG91YmxlQ2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBtb3VzZSBlbnRlciBldmVudC5cclxuICAgICAqIEBwYXJhbSBldm50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Nb3VzZUVudGVyKGV2bnQ6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uTW91c2VFbnRlciAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25Nb3VzZUVudGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGFuZGxlcyB0aGUgbW91c2UgbGVhdmUgZXZlbnQuXHJcbiAgICAgKiBAcGFyYW0gZXZudFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTW91c2VMZWF2ZShldm50OiBhbnkpIHtcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk1vdXNlTGVhdmUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uTW91c2VMZWF2ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZXMgdGhlIG1vdXNlIG92ZXIgZXZlbnQuXHJcbiAgICAgKiBAcGFyYW0gZXZudFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTW91c2VPdmVyKGV2bnQ6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uTW91c2VPdmVyICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbk1vdXNlT3ZlcigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0ID0gR2VuZXJpY0J1dHRvbjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9nZW5lcmljYnV0dG9uLnRzeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFtQkE7O0FBRUE7QUFDQTtBQUFBO0FBRUE7Ozs7QUFJQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 303:
/* no static exports found */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./src/components/utility/loadingindicator/loadingindicator.tsx ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:disable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../../base/purerendercomponent */ 227);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/**\r\n * Class for LoadingIndicator component.\r\n */\r\nvar LoadingIndicator = /** @class */ (function (_super) {\r\n    __extends(LoadingIndicator, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function LoadingIndicator(props) {\r\n        return _super.call(this, props, null) || this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    LoadingIndicator.prototype.render = function () {\r\n        if (this.props.isOnline === false) {\r\n            return null;\r\n        }\r\n        else {\r\n            return (React.createElement(\"div\", { className: this.props.cssClass },\r\n                React.createElement(\"span\", { className: classNames('loader', (this.props.isFrv ? 'middle-content' : 'text-middle')) },\r\n                    React.createElement(\"span\", { className: 'dot' }),\r\n                    React.createElement(\"span\", { className: 'dot' }),\r\n                    React.createElement(\"span\", { className: 'dot' }))));\r\n        }\r\n    };\r\n    return LoadingIndicator;\r\n}(pureRenderComponent));\r\nmodule.exports = LoadingIndicator;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9sb2FkaW5naW5kaWNhdG9yL2xvYWRpbmdpbmRpY2F0b3IudHN4PzM5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbi8qIHRzbGludDpkaXNhYmxlOm5vLXVudXNlZC12YXJpYWJsZSAqL1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uLy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5sZXQgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcclxuXHJcbi8qKlxyXG4gKiBQcm9wc1xyXG4gKiBAcGFyYW0ge1Byb3BzfSBwcm9wc1xyXG4gKi9cclxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgTG9jYWxlU2VsZWN0aW9uQmFzZSwgUHJvcHNCYXNlIHtcclxuICAgIGlzT25saW5lPzogYm9vbGVhbjtcclxuICAgIGNzc0NsYXNzOiBzdHJpbmc7XHJcbiAgICBpc0Zydj86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDbGFzcyBmb3IgTG9hZGluZ0luZGljYXRvciBjb21wb25lbnQuXHJcbiAqL1xyXG5jbGFzcyBMb2FkaW5nSW5kaWNhdG9yIGV4dGVuZHMgcHVyZVJlbmRlckNvbXBvbmVudDxQcm9wcywgYW55PiB7XHJcbiAgICAvKipcclxuICAgICAqIEBjb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMpIHtcclxuICAgICAgICBzdXBlcihwcm9wcywgbnVsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByZW5kZXIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNPbmxpbmUgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ge3RoaXMucHJvcHMuY3NzQ2xhc3N9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ge2NsYXNzTmFtZXMoJ2xvYWRlcicsICh0aGlzLnByb3BzLmlzRnJ2ID8gJ21pZGRsZS1jb250ZW50JyA6ICd0ZXh0LW1pZGRsZScpKSB9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5leHBvcnQgPSBMb2FkaW5nSW5kaWNhdG9yO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy91dGlsaXR5L2xvYWRpbmdpbmRpY2F0b3IvbG9hZGluZ2luZGljYXRvci50c3giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVlBOztBQUVBO0FBQ0E7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 334:
/* no static exports found */
/* all exports used */
/*!******************************************************************!*\
  !*** ./src/components/utility/marking/markbyannotationhelper.ts ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar stampStore = __webpack_require__(/*! ../../../stores/stamp/stampstore */ 260);\r\nvar enums = __webpack_require__(/*! ../enums */ 225);\r\nvar constants = __webpack_require__(/*! ../constants */ 241);\r\nvar MarkByAnnotationHelper = /** @class */ (function () {\r\n    function MarkByAnnotationHelper() {\r\n        var _this = this;\r\n        this.totalMark = 0;\r\n        /**\r\n         * returns the mark valid\r\n         * @param mark\r\n         * @param currentItem\r\n         */\r\n        this.isMarkValid = function (currentQuestionItem, annotation) {\r\n            _this.currentQuestionItem = currentQuestionItem;\r\n            var newMark = _this.getPreviouslyAllocatedMarks(currentQuestionItem.allocatedMarks.displayMark) + annotation.numericValue;\r\n            if (newMark > currentQuestionItem.maximumNumericMark) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        };\r\n        /**\r\n         * returns stamp has numeric value.\r\n         */\r\n        this.hasNumericValue = function (annotation) {\r\n            var stampData = stampStore.instance.getStamp(annotation.stamp, annotation.markSchemeGroupId);\r\n            return stampData.numericValue !== null && stampData.numericValue !== undefined;\r\n        };\r\n        /**\r\n         * returns any value annotations left in question item.\r\n         */\r\n        this.doCheckValueAnnotationLeft = function (allAnnotations, removedAnnotation) {\r\n            var hasNumericStamp = false;\r\n            var index = 0;\r\n            var currentQuestionItemStampIds = [];\r\n            allAnnotations.map(function (annotation) {\r\n                if (annotation.markSchemeId === removedAnnotation.markSchemeId\r\n                    && annotation.clientToken !== removedAnnotation.clientToken\r\n                    && annotation.markingOperation !== enums.MarkingOperation.deleted) {\r\n                    currentQuestionItemStampIds.push(annotation.stamp);\r\n                }\r\n            });\r\n            if (currentQuestionItemStampIds.length) {\r\n                while (index < currentQuestionItemStampIds.length) {\r\n                    var stampData_1 = stampStore.instance.getStamp(currentQuestionItemStampIds[index], removedAnnotation.markSchemeGroupId);\r\n                    if (stampData_1.numericValue !== null) {\r\n                        hasNumericStamp = true;\r\n                        break;\r\n                    }\r\n                    index++;\r\n                }\r\n            }\r\n            return hasNumericStamp;\r\n        };\r\n    }\r\n    /**\r\n     * gets total mark aganist question item.\r\n     * @param annotation\r\n     */\r\n    MarkByAnnotationHelper.prototype.getAggregateMarks = function (annotation) {\r\n        this.totalMark = this.totalMark + annotation.numericValue;\r\n        return this.totalMark;\r\n    };\r\n    /**\r\n     * Resets the total marks.\r\n     */\r\n    MarkByAnnotationHelper.prototype.resetTotalMarks = function () {\r\n        this.totalMark = 0;\r\n    };\r\n    /**\r\n     * returns the previously allocated marks\r\n     * @param avaliableMarks\r\n     */\r\n    MarkByAnnotationHelper.prototype.getPreviouslyAllocatedMarks = function (displayMark) {\r\n        if (displayMark === constants.NOT_MARKED || displayMark === constants.NOT_ATTEMPTED) {\r\n            return this.totalMark = 0;\r\n        }\r\n        else {\r\n            return this.totalMark = parseFloat(displayMark);\r\n        }\r\n    };\r\n    /**\r\n     * remove annotation marks\r\n     * @param allAnnotations\r\n     * @param removedAnnotation\r\n     * @param currentQuestionItem\r\n     */\r\n    MarkByAnnotationHelper.prototype.removeAnnotationMarks = function (allAnnotations, removedAnnotation, currentQuestionItem) {\r\n        var previousAllocatedMark = parseFloat(currentQuestionItem.allocatedMarks.displayMark);\r\n        var stampData = stampStore.instance.getStamp(removedAnnotation.stamp, removedAnnotation.markSchemeGroupId);\r\n        var isNumericValueStamp = this.hasNumericValue(removedAnnotation);\r\n        var newMark;\r\n        // calculating new mark to display.\r\n        if (isNumericValueStamp) {\r\n            newMark = (previousAllocatedMark - stampData.numericValue).toString();\r\n        }\r\n        else {\r\n            newMark = currentQuestionItem.allocatedMarks.displayMark;\r\n        }\r\n        return newMark;\r\n    };\r\n    return MarkByAnnotationHelper;\r\n}());\r\nmodule.exports = MarkByAnnotationHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9tYXJraW5nL21hcmtieWFubm90YXRpb25oZWxwZXIudHM/M2Q3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlndXJhYmxlQ2hhcmFjdGVyaXN0aWNzSGVscGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbGl0eS9jb25maWd1cmFibGVjaGFyYWN0ZXJpc3RpYy9jb25maWd1cmFibGVjaGFyYWN0ZXJpc3RpY3NoZWxwZXInKTtcclxuaW1wb3J0IHFpZ1N0b3JlID0gcmVxdWlyZSgnLi4vLi4vLi4vc3RvcmVzL3FpZ3NlbGVjdG9yL3FpZ3N0b3JlJyk7XHJcbmltcG9ydCBhbm5vdGF0aW9uID0gcmVxdWlyZSgnLi4vLi4vLi4vc3RvcmVzL3Jlc3BvbnNlL3R5cGluZ3MvYW5ub3RhdGlvbicpO1xyXG5pbXBvcnQgbWFya2J5b3B0aW9uYWN0aW9uY3JlYXRvciA9IHJlcXVpcmUoJy4uLy4uLy4uL2FjdGlvbnMvbWFya2J5b3B0aW9uL21hcmtieW9wdGlvbmFjdGlvbmNyZWF0b3InKTtcclxuaW1wb3J0IHRyZWVWaWV3SXRlbSA9IHJlcXVpcmUoJy4uLy4uLy4uL3N0b3Jlcy9tYXJrc2NoZW1lc3RydWN0dXJlL3R5cGluZ3MvdHJlZXZpZXdpdGVtJyk7XHJcbmltcG9ydCBtYXJraW5nQWN0aW9uQ3JlYXRvciA9IHJlcXVpcmUoJy4uLy4uLy4uL2FjdGlvbnMvbWFya2luZy9tYXJraW5nYWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgc3RhbXBTdG9yZSA9IHJlcXVpcmUoJy4uLy4uLy4uL3N0b3Jlcy9zdGFtcC9zdGFtcHN0b3JlJyk7XHJcbmltcG9ydCBzdGFtcERhdGEgPSByZXF1aXJlKCcuLi8uLi8uLi9zdG9yZXMvc3RhbXAvdHlwaW5ncy9zdGFtcGRhdGEnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vZW51bXMnKTtcclxuaW1wb3J0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpO1xyXG5cclxuY2xhc3MgTWFya0J5QW5ub3RhdGlvbkhlbHBlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBjdXJyZW50UXVlc3Rpb25JdGVtOiB0cmVlVmlld0l0ZW07XHJcblxyXG4gICAgcHJpdmF0ZSBhbm5vdGF0aW9uOiBhbm5vdGF0aW9uO1xyXG5cclxuICAgIHByaXZhdGUgbWFyazogQWxsb2NhdGVkTWFyaztcclxuXHJcbiAgICBwcml2YXRlIHRvdGFsTWFyazogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGdldHMgdG90YWwgbWFyayBhZ2FuaXN0IHF1ZXN0aW9uIGl0ZW0uXHJcbiAgICAgKiBAcGFyYW0gYW5ub3RhdGlvblxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0QWdncmVnYXRlTWFya3MoYW5ub3RhdGlvbjogYW5ub3RhdGlvbik6IG51bWJlciB7XHJcbiAgICAgICAgdGhpcy50b3RhbE1hcmsgPSB0aGlzLnRvdGFsTWFyayArIGFubm90YXRpb24ubnVtZXJpY1ZhbHVlO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRvdGFsTWFyaztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlc2V0cyB0aGUgdG90YWwgbWFya3MuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByZXNldFRvdGFsTWFya3MoKSB7XHJcbiAgICAgICAgdGhpcy50b3RhbE1hcmsgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmV0dXJucyB0aGUgbWFyayB2YWxpZFxyXG4gICAgICogQHBhcmFtIG1hcmtcclxuICAgICAqIEBwYXJhbSBjdXJyZW50SXRlbVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXNNYXJrVmFsaWQgPSAoY3VycmVudFF1ZXN0aW9uSXRlbTogdHJlZVZpZXdJdGVtLCBhbm5vdGF0aW9uOiBhbm5vdGF0aW9uKTogYm9vbGVhbiA9PiB7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb25JdGVtID0gY3VycmVudFF1ZXN0aW9uSXRlbTtcclxuICAgICAgICBsZXQgbmV3TWFyayA9IHRoaXMuZ2V0UHJldmlvdXNseUFsbG9jYXRlZE1hcmtzKGN1cnJlbnRRdWVzdGlvbkl0ZW0uYWxsb2NhdGVkTWFya3MuZGlzcGxheU1hcmspICsgYW5ub3RhdGlvbi5udW1lcmljVmFsdWU7XHJcbiAgICAgICAgaWYgKG5ld01hcmsgPiBjdXJyZW50UXVlc3Rpb25JdGVtLm1heGltdW1OdW1lcmljTWFyaykge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybnMgdGhlIHByZXZpb3VzbHkgYWxsb2NhdGVkIG1hcmtzXHJcbiAgICAgKiBAcGFyYW0gYXZhbGlhYmxlTWFya3NcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGdldFByZXZpb3VzbHlBbGxvY2F0ZWRNYXJrcyhkaXNwbGF5TWFyazogc3RyaW5nKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAoZGlzcGxheU1hcmsgPT09IGNvbnN0YW50cy5OT1RfTUFSS0VEIHx8IGRpc3BsYXlNYXJrID09PSBjb25zdGFudHMuTk9UX0FUVEVNUFRFRCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50b3RhbE1hcmsgPSAwO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRvdGFsTWFyayA9IHBhcnNlRmxvYXQoZGlzcGxheU1hcmspO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJlbW92ZSBhbm5vdGF0aW9uIG1hcmtzXHJcbiAgICAgKiBAcGFyYW0gYWxsQW5ub3RhdGlvbnNcclxuICAgICAqIEBwYXJhbSByZW1vdmVkQW5ub3RhdGlvblxyXG4gICAgICogQHBhcmFtIGN1cnJlbnRRdWVzdGlvbkl0ZW1cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbW92ZUFubm90YXRpb25NYXJrcyhhbGxBbm5vdGF0aW9uczogYW55LFxyXG4gICAgICAgIHJlbW92ZWRBbm5vdGF0aW9uOiBhbm5vdGF0aW9uLFxyXG4gICAgICAgIGN1cnJlbnRRdWVzdGlvbkl0ZW06IHRyZWVWaWV3SXRlbSk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IHByZXZpb3VzQWxsb2NhdGVkTWFyayA9IHBhcnNlRmxvYXQoY3VycmVudFF1ZXN0aW9uSXRlbS5hbGxvY2F0ZWRNYXJrcy5kaXNwbGF5TWFyayk7XHJcbiAgICAgICAgbGV0IHN0YW1wRGF0YTogc3RhbXBEYXRhID0gc3RhbXBTdG9yZS5pbnN0YW5jZS5nZXRTdGFtcChyZW1vdmVkQW5ub3RhdGlvbi5zdGFtcCwgcmVtb3ZlZEFubm90YXRpb24ubWFya1NjaGVtZUdyb3VwSWQpO1xyXG4gICAgICAgIGxldCBpc051bWVyaWNWYWx1ZVN0YW1wOiBib29sZWFuID0gdGhpcy5oYXNOdW1lcmljVmFsdWUocmVtb3ZlZEFubm90YXRpb24pO1xyXG4gICAgICAgIGxldCBuZXdNYXJrOiBzdHJpbmc7XHJcbiAgICAgICAgLy8gY2FsY3VsYXRpbmcgbmV3IG1hcmsgdG8gZGlzcGxheS5cclxuICAgICAgICBpZiAoaXNOdW1lcmljVmFsdWVTdGFtcCkge1xyXG4gICAgICAgICAgICBuZXdNYXJrID0gKHByZXZpb3VzQWxsb2NhdGVkTWFyayAtIHN0YW1wRGF0YS5udW1lcmljVmFsdWUpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmV3TWFyayA9IGN1cnJlbnRRdWVzdGlvbkl0ZW0uYWxsb2NhdGVkTWFya3MuZGlzcGxheU1hcms7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gbmV3TWFyaztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybnMgc3RhbXAgaGFzIG51bWVyaWMgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBoYXNOdW1lcmljVmFsdWUgPSAoYW5ub3RhdGlvbjogYW5ub3RhdGlvbik6IGJvb2xlYW4gPT4ge1xyXG4gICAgICAgIGxldCBzdGFtcERhdGE6IHN0YW1wRGF0YSA9IHN0YW1wU3RvcmUuaW5zdGFuY2UuZ2V0U3RhbXAoYW5ub3RhdGlvbi5zdGFtcCwgYW5ub3RhdGlvbi5tYXJrU2NoZW1lR3JvdXBJZCk7XHJcbiAgICAgICAgcmV0dXJuIHN0YW1wRGF0YS5udW1lcmljVmFsdWUgIT09IG51bGwgJiYgc3RhbXBEYXRhLm51bWVyaWNWYWx1ZSAhPT0gdW5kZWZpbmVkO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybnMgYW55IHZhbHVlIGFubm90YXRpb25zIGxlZnQgaW4gcXVlc3Rpb24gaXRlbS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGRvQ2hlY2tWYWx1ZUFubm90YXRpb25MZWZ0ID0gKGFsbEFubm90YXRpb25zOiBhbnksXHJcbiAgICAgICAgcmVtb3ZlZEFubm90YXRpb246IGFubm90YXRpb24pOiBib29sZWFuID0+IHtcclxuICAgICAgICBsZXQgaGFzTnVtZXJpY1N0YW1wOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IGluZGV4OiBudW1iZXIgPSAwO1xyXG4gICAgICAgIGxldCBjdXJyZW50UXVlc3Rpb25JdGVtU3RhbXBJZHM6IEFycmF5PG51bWJlcj4gPSBbXTtcclxuICAgICAgICBhbGxBbm5vdGF0aW9ucy5tYXAoKGFubm90YXRpb246IGFubm90YXRpb24pID0+IHtcclxuICAgICAgICAgICAgaWYgKGFubm90YXRpb24ubWFya1NjaGVtZUlkID09PSByZW1vdmVkQW5ub3RhdGlvbi5tYXJrU2NoZW1lSWRcclxuICAgICAgICAgICAgICAgICYmIGFubm90YXRpb24uY2xpZW50VG9rZW4gIT09IHJlbW92ZWRBbm5vdGF0aW9uLmNsaWVudFRva2VuXHJcbiAgICAgICAgICAgICAgICAmJiBhbm5vdGF0aW9uLm1hcmtpbmdPcGVyYXRpb24gIT09IGVudW1zLk1hcmtpbmdPcGVyYXRpb24uZGVsZXRlZCkge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXN0aW9uSXRlbVN0YW1wSWRzLnB1c2goYW5ub3RhdGlvbi5zdGFtcCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGN1cnJlbnRRdWVzdGlvbkl0ZW1TdGFtcElkcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgd2hpbGUgKGluZGV4IDwgY3VycmVudFF1ZXN0aW9uSXRlbVN0YW1wSWRzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHN0YW1wRGF0YTogc3RhbXBEYXRhID0gc3RhbXBTdG9yZS5pbnN0YW5jZS5nZXRTdGFtcChcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50UXVlc3Rpb25JdGVtU3RhbXBJZHNbaW5kZXhdLCByZW1vdmVkQW5ub3RhdGlvbi5tYXJrU2NoZW1lR3JvdXBJZCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3RhbXBEYXRhLm51bWVyaWNWYWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhhc051bWVyaWNTdGFtcCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpbmRleCsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBoYXNOdW1lcmljU3RhbXA7XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgPSBNYXJrQnlBbm5vdGF0aW9uSGVscGVyO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy91dGlsaXR5L21hcmtpbmcvbWFya2J5YW5ub3RhdGlvbmhlbHBlci50cyJdLCJtYXBwaW5ncyI6IjtBQU1BO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQVFBO0FBa0JBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQXFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF2R0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQWlCQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7O0FBS0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBdUNBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 335:
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./src/utility/keyboardacess/keycodes.ts ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar KeyCodes;\r\n(function (KeyCodes) {\r\n    KeyCodes.ENTER_KEY = 13;\r\n    KeyCodes.LEFT_KEY = 37;\r\n    KeyCodes.RIGHT_KEY = 39;\r\n    KeyCodes.PAGE_UP_KEY = 33;\r\n    KeyCodes.PAGE_DOWN_KEY = 34;\r\n})(KeyCodes || (KeyCodes = {}));\r\nmodule.exports = KeyCodes;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdHkva2V5Ym9hcmRhY2Vzcy9rZXljb2Rlcy50cz9kMzQ0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZSBLZXlDb2RlcyB7XHJcbiAgICBleHBvcnQgY29uc3QgRU5URVJfS0VZOiBudW1iZXIgPSAxMztcclxuICAgIGV4cG9ydCBjb25zdCBMRUZUX0tFWTogbnVtYmVyID0gMzc7XHJcbiAgICBleHBvcnQgY29uc3QgUklHSFRfS0VZOiBudW1iZXIgPSAzOTtcclxuICAgIGV4cG9ydCBjb25zdCBQQUdFX1VQX0tFWTogbnVtYmVyID0gMzM7XHJcbiAgICBleHBvcnQgY29uc3QgUEFHRV9ET1dOX0tFWTogbnVtYmVyID0gMzQ7XHJcbn1cclxuXHJcbmV4cG9ydCA9IEtleUNvZGVzO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvdXRpbGl0eS9rZXlib2FyZGFjZXNzL2tleWNvZGVzLnRzIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 337:
/* no static exports found */
/* all exports used */
/*!***********************************!*\
  !*** ./src/components/header.tsx ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*\r\n  React component for Authorized page header\r\n*/\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ./base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../stores/locale/localestore */ 226);\r\nvar loginSession = __webpack_require__(/*! ../app/loginsession */ 252);\r\nvar MessageNotificationIndicator = __webpack_require__(/*! ./utility/notification/messagenotificationindicator */ 366);\r\nvar AwardingIndicator = __webpack_require__(/*! ../components/awarding/awardingindicator */ 347);\r\nvar awardingStore = __webpack_require__(/*! ../stores/awarding/awardingstore */ 270);\r\nvar UserDetails = __webpack_require__(/*! ./user/userdetails/userdetails */ 357);\r\nvar userOptionActionCreator = __webpack_require__(/*! ../actions/useroption/useroptionactioncreator */ 431);\r\nvar useroptionStore = __webpack_require__(/*! ../stores/useroption/useroptionstore */ 302);\r\nvar messageStore = __webpack_require__(/*! ../stores/message/messagestore */ 240);\r\nvar responseStore = __webpack_require__(/*! ../stores/response/responsestore */ 235);\r\nvar worklistStore = __webpack_require__(/*! ../stores/worklist/workliststore */ 231);\r\nvar responseActionCreator = __webpack_require__(/*! ../actions/response/responseactioncreator */ 257);\r\nvar ResponseNavigation = __webpack_require__(/*! ./response/responsenavigation */ 355);\r\nvar enums = __webpack_require__(/*! ./utility/enums */ 225);\r\nvar htmlUtilities = __webpack_require__(/*! ../utility/generic/htmlutilities */ 243);\r\nvar toolbarStore = __webpack_require__(/*! ../stores/toolbar/toolbarstore */ 301);\r\nvar markingStore = __webpack_require__(/*! ../stores/marking/markingstore */ 236);\r\nvar stampStore = __webpack_require__(/*! ../stores/stamp/stampstore */ 260);\r\nvar stampActionCreator = __webpack_require__(/*! ../actions/stamp/stampactioncreator */ 284);\r\nvar applicationStore = __webpack_require__(/*! ../stores/applicationoffline/applicationstore */ 247);\r\nvar qigStore = __webpack_require__(/*! ../stores/qigselector/qigstore */ 230);\r\nvar qigActionCreator = __webpack_require__(/*! ../actions/qigselector/qigselectoractioncreator */ 253);\r\nvar navigationHelper = __webpack_require__(/*! ./utility/navigation/navigationhelper */ 248);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../actions/userinfo/userinfoactioncreator */ 255);\r\nvar worklistActionCreator = __webpack_require__(/*! ../actions/worklist/worklistactioncreator */ 261);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar BreadCrumb = __webpack_require__(/*! ./breadcrumb/breadcrumb */ 348);\r\nvar MenuWrapper = __webpack_require__(/*! ./menu/menuwrapper */ 354);\r\nvar teamManagementStore = __webpack_require__(/*! ../stores/teammanagement/teammanagementstore */ 245);\r\nvar auditLoggingHelper = __webpack_require__(/*! ./utility/auditlogger/auditlogginghelper */ 298);\r\nvar standardisationSetupStore = __webpack_require__(/*! ../stores/standardisationsetup/standardisationsetupstore */ 237);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ./utility/markeroperationmode/markeroperationmodefactory */ 232);\r\n/**\r\n * React component class for Header for Authorized pages\r\n */\r\nvar Header = /** @class */ (function (_super) {\r\n    __extends(Header, _super);\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function Header(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        // Denotes whether if a stamp is paned, is it paned beyond the allowable boundaries\r\n        // If so, the annotation bin would need to be displayed\r\n        _this.isStampPanedBeyondBoundaries = false;\r\n        _this.showOfflineIndicator = false;\r\n        _this.lastTap = 0;\r\n        _this.hasAwardingAccess = false;\r\n        _this.hasPendingJudgement = false;\r\n        _this.reRenderResponseNavigation = false;\r\n        // these classes allows double tap for ipad(safari)\r\n        _this.classesToPreventBlocking = [\r\n            'toggle-left-panel',\r\n            'tool-wrap',\r\n            'icon-tray',\r\n            'exp-colp-mrking-tary',\r\n            'mark-button',\r\n            'close-message-link',\r\n            'maximize-message-link',\r\n            'expand-toggle-icon',\r\n            'menu-close',\r\n            'setreview-btn-holder',\r\n            'raise-new-exception',\r\n            'minimize-message-link',\r\n            'mark-button-container',\r\n            'max-txt',\r\n            'mark-button-nav',\r\n            'mark-button-wrapper',\r\n            'rounded',\r\n            'exception-close-link',\r\n            'media-panel',\r\n            'allow-edge-tap',\r\n            'Delete-msg'\r\n        ];\r\n        /**\r\n         * This will block the double-tap zoom in ipad\r\n         */\r\n        _this.blockDoubleTapZoom = function (e) {\r\n            var actualX = e.changedTouches[0].clientX;\r\n            var actualY = e.changedTouches[0].clientY;\r\n            var clientWidth = document.documentElement.clientWidth;\r\n            var clientHeight = document.documentElement.clientHeight;\r\n            // At the edges of ipad only the single tap is triggered\r\n            // by identifying the edges and blocking the double tap\r\n            if ((actualX <= 30 || actualX >= (clientWidth - 30) || actualY >= (clientHeight - 30)) && _this.blockDoubleTap(actualX, actualY)) {\r\n                // unblocking the taps on some icons ,annotions and mark buttons\r\n                // which lies at the edges of ipad\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            var currentTime = new Date().getTime();\r\n            var tapLength = currentTime - _this.lastTap;\r\n            // disable double tap based on interval between two taps\r\n            if (tapLength < 500 && tapLength > 0 && _this.blockDoubleTap(actualX, actualY)) {\r\n                // unblocking the taps on some icons ,annotions and mark buttons\r\n                e.preventDefault();\r\n            }\r\n            _this.lastTap = currentTime;\r\n        };\r\n        /**\r\n         *  This method will check whether we want to block double tap or not based on the class list provided.\r\n         */\r\n        _this.blockDoubleTap = function (actualX, actualY) {\r\n            var ele = htmlUtilities.getElementFromPosition(actualX, actualY);\r\n            var isInValid = false;\r\n            if (ele) {\r\n                for (var i = 0; i < _this.classesToPreventBlocking.length; i++) {\r\n                    var className = _this.classesToPreventBlocking[i];\r\n                    isInValid = (!(ele.classList.contains(className)) && $('.' + className).has(ele).length === 0);\r\n                    if (!isInValid) {\r\n                        break;\r\n                    }\r\n                }\r\n                return isInValid;\r\n            }\r\n        };\r\n        /**\r\n         * This will block the pinch-to-zoom in ipad\r\n         */\r\n        _this.blockPinchToZoom = function (e) {\r\n            if (e.touches.length > 1) {\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        _this.refreshUseOption = function () {\r\n            _this.setState({\r\n                isUserOptionLoaded: true\r\n            });\r\n        };\r\n        /**\r\n         * This will re-render the header component\r\n         */\r\n        _this.reRender = function () {\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * This will show the header icons after QIGs loaded\r\n         */\r\n        _this.displayHeaderIconsOnQIGLoaded = function (showIcons) {\r\n            if (showIcons === void 0) { showIcons = true; }\r\n            _this.setState({\r\n                displayIcons: showIcons\r\n            });\r\n        };\r\n        /**\r\n         * Update notification info\r\n         */\r\n        _this.updateNotification = function () {\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * Update response navigation info\r\n         */\r\n        _this.responseChanged = function () {\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * Invoked on the starting of stamp pan\r\n         */\r\n        _this.onStampPanStarted = function () {\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * Invoked on the ending the stamp pan\r\n         */\r\n        _this.onStampPanEnd = function () {\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * Invoked on the awarding access details fetched\r\n         */\r\n        _this.awardingAccessDetailsFetched = function () {\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * Invoked on stamp pan to an area where deletion of the annotation dragged is possible\r\n         */\r\n        _this.onStampPanToDeleteArea = function (canDelete) {\r\n            _this.isStampPanedBeyondBoundaries = canDelete;\r\n            if (_this.isStampPanedBeyondBoundaries) {\r\n                responseActionCreator.setMousePosition(-1, -1);\r\n            }\r\n            _this.reRender();\r\n        };\r\n        /**\r\n         * updates the offline indicator info.\r\n         */\r\n        _this.offlineIndicator = function () {\r\n            if (!applicationStore.instance.isOnline) {\r\n                _this.showOfflineIndicator = true;\r\n            }\r\n            else {\r\n                _this.showOfflineIndicator = false;\r\n            }\r\n            /* Logging event in google analytics or application insights based on the configuration */\r\n            new auditLoggingHelper().logHelper.\r\n                logEventOnApplicationStatusChange(applicationStore.instance.isOnline ?\r\n                'Application Online' :\r\n                'Application Offline');\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * Method to be invoked once the annotation starts drawing\r\n         */\r\n        _this.onDrawStart = function (isAnnotationDrawing) {\r\n            // re-render only if there is a change in isAnnotationDrawing as this happens on mousemove.\r\n            if (_this.state.isAnnotationDrawing !== isAnnotationDrawing) {\r\n                _this.setState({\r\n                    isAnnotationDrawing: isAnnotationDrawing,\r\n                    renderedOn: Date.now()\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * Navigate to particular page container\r\n         */\r\n        _this.onNavigationUpdated = function (navigateTo) {\r\n            /** navigating from a closed response doesn't require to call save marks */\r\n            if (navigateTo !== enums.SaveAndNavigate.toMenu) {\r\n                worklistActionCreator.responseClosed(true);\r\n            }\r\n            /** If we are navigating to inbox directly navigate to the message page */\r\n            if (navigateTo === enums.SaveAndNavigate.toInboxMessagePage) {\r\n                navigationHelper.loadMessagePage();\r\n                return;\r\n            }\r\n            navigationHelper.loadContainerIfNeeded(enums.PageContainers.Response, enums.SaveMarksAndAnnotationsProcessingTriggerPoint.CloseResponse);\r\n        };\r\n        /**\r\n         * fired when acetate is moved to grey area\r\n         */\r\n        _this.acetateInGreyArea = function (isInGreyArea) {\r\n            // rerender when there is any change in isInGreyArea\r\n            _this.setState({\r\n                isAcetateInGreyArea: isInGreyArea,\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * Invoked on reclassifying a respone to render header and response navigation\r\n         */\r\n        _this.onReclassifyResponse = function (isTotalMarksViewSelected, selectedStandardisationSetupWorkList, doMarkNow) {\r\n            if (doMarkNow === void 0) { doMarkNow = false; }\r\n            if (selectedStandardisationSetupWorkList === enums.StandardisationSetup.ClassifiedResponse) {\r\n                _this.reRenderResponseNavigation = !_this.reRenderResponseNavigation;\r\n                _this.reRender();\r\n            }\r\n        };\r\n        _this.state = {\r\n            isUserOptionLoaded: false,\r\n            displayIcons: true,\r\n            renderedOn: Date.now(),\r\n            isAcetateInGreyArea: false,\r\n            isAnnotationDrawing: true\r\n        };\r\n        _this.mouseover = _this.mouseover.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    Header.prototype.render = function () {\r\n        var unreadMessageCount = this.props.unReadMessageCount ?\r\n            this.props.unReadMessageCount : messageStore.instance.getUnreadMessageCount;\r\n        var stamp = undefined;\r\n        if (toolbarStore.instance.selectedStampId !== 0) {\r\n            stamp = stampStore.instance.getStamp(toolbarStore.instance.selectedStampId);\r\n        }\r\n        var className = classNames('fixed', { 'support-envirnoment': loginSession.IS_SUPPORT_ADMIN_LOGIN }, { 'offline': this.showOfflineIndicator }, { 'no-drop': this.state.isAnnotationDrawing === false || this.isStampPanedBeyondBoundaries || this.state.isAcetateInGreyArea }, {\r\n            'drawing': ((stamp !== undefined && stamp.stampType === enums.StampType.dynamic &&\r\n                (this.state.isAnnotationDrawing === false)) || this.state.isAcetateInGreyArea)\r\n        }, { 'deleting-annotation': this.isStampPanedBeyondBoundaries });\r\n        var toolTipforOffineMode = localeStore.instance.TranslateText('generic.navigation-bar.offline-tooltip') +\r\n            ((this.elapsedTime < 1) ? '1' : this.elapsedTime) +\r\n            localeStore.instance.TranslateText('generic.navigation-bar.offline-tooltip-minutes-ago');\r\n        return (React.createElement(\"header\", { className: className, onClick: this.onClickHandler, title: (this.showOfflineIndicator) ? toolTipforOffineMode : '' },\r\n            React.createElement(\"div\", { className: 'wrapper clearfix', onMouseOver: this.mouseover, onMouseLeave: this.mouseover },\r\n                this.renderBreadCrumb(),\r\n                this.renderHeaderCenterPortion(),\r\n                this.renderHeaderRightPortion(unreadMessageCount)),\r\n            React.createElement(\"div\", { className: 'blue-strip' })));\r\n    };\r\n    /**\r\n     * on click handler\r\n     * @param {any} event\r\n     */\r\n    Header.prototype.onClickHandler = function (event) {\r\n        /* Defect:49599 - seting focus back to subject on message close for fixing cursor and onscreen keyboard displaying in header\r\n           issue in ipad */\r\n        if (htmlUtilities.isIPadDevice && messageStore.instance.isMessagePanelVisible) {\r\n            htmlUtilities.setFocusToElement('message-subject');\r\n            htmlUtilities.blurElement('message-subject');\r\n        }\r\n        stampActionCreator.showOrHideComment(false);\r\n    };\r\n    /**\r\n     * This method will render the center portion of Header component\r\n     * Response Header: render response navigation\r\n     */\r\n    Header.prototype.renderHeaderCenterPortion = function () {\r\n        switch (this.props.containerPage) {\r\n            case enums.PageContainers.Response:\r\n                var currentResponse = void 0;\r\n                var isNextResponseAvailable = void 0;\r\n                var isPreviousResponseAvailable = void 0;\r\n                var responseId = void 0;\r\n                var totalResponses = void 0;\r\n                if (standardisationSetupStore.instance.isSelectResponsesWorklist) {\r\n                    currentResponse = standardisationSetupStore.instance.candidateScriptPosition;\r\n                    isNextResponseAvailable = standardisationSetupStore.instance.isNextCandidateScriptAvailable;\r\n                    isPreviousResponseAvailable = standardisationSetupStore.instance.isPreviousCandidateScriptAvailable;\r\n                    responseId = standardisationSetupStore.instance.selectedResponseId.toString();\r\n                    totalResponses = standardisationSetupStore.instance.totalCandidateScriptCount;\r\n                }\r\n                else if (markerOperationModeFactory.operationMode.isAwardingMode) {\r\n                    currentResponse = 1;\r\n                    isNextResponseAvailable = false;\r\n                    isPreviousResponseAvailable = false;\r\n                    responseId = responseStore.instance.selectedDisplayId.toString();\r\n                    totalResponses = 1;\r\n                }\r\n                else {\r\n                    currentResponse =\r\n                        markerOperationModeFactory.operationMode.getResponsePosition(responseStore.instance.selectedDisplayId.toString());\r\n                    isNextResponseAvailable =\r\n                        (markerOperationModeFactory.operationMode.isNextResponseAvailable(responseStore.instance.selectedDisplayId.toString()) &&\r\n                            !teamManagementStore.instance.isRedirectFromException);\r\n                    isPreviousResponseAvailable =\r\n                        (markerOperationModeFactory.operationMode.isPreviousResponseAvailable(responseStore.instance.selectedDisplayId.toString()) &&\r\n                            !teamManagementStore.instance.isRedirectFromException);\r\n                    responseId = (standardisationSetupStore.instance.selectedStandardisationSetupWorkList\r\n                        === enums.StandardisationSetup.SelectResponse\r\n                        && standardisationSetupStore.instance.selectedTabInSelectResponse\r\n                            === enums.StandardisationSessionTab.PreviousSession)\r\n                        ? standardisationSetupStore.instance.getReusablaResponseSelectedDisplayId(responseStore.instance.selectedDisplayId.toString()).toString()\r\n                        : responseStore.instance.selectedDisplayId.toString();\r\n                    totalResponses = markerOperationModeFactory.operationMode.currentResponseCount;\r\n                }\r\n                // If there is no display id, No need to render the component\r\n                if (!isNaN(currentResponse) && !isNaN(responseStore.instance.selectedDisplayId) &&\r\n                    responseStore.instance.selectedDisplayId > 0) {\r\n                    return (React.createElement(ResponseNavigation, { currentResponse: currentResponse, isNextResponseAvailable: isNextResponseAvailable, isPreviousResponseAvailable: isPreviousResponseAvailable, responseId: responseId, totalResponses: totalResponses, centreId: standardisationSetupStore.instance.standardisationSetUpSelectedCentreNo, moveCallback: navigationHelper.responseNavigation, selectedLanguage: this.props.selectedLanguage, reRender: this.reRenderResponseNavigation }));\r\n                }\r\n                return null;\r\n            case enums.PageContainers.TeamManagement:\r\n            case enums.PageContainers.Message:\r\n            case enums.PageContainers.Login:\r\n            case enums.PageContainers.QigSelector:\r\n            case enums.PageContainers.WorkList:\r\n            case enums.PageContainers.MarkingCheckExaminersWorkList:\r\n            case enums.PageContainers.StandardisationSetup:\r\n            case enums.PageContainers.AdminSupport:\r\n            case enums.PageContainers.Awarding:\r\n                return (null);\r\n        }\r\n    };\r\n    /**\r\n     *  TO DO: Andromeda will correct this method as part of Response header functionality in Sprint 8\r\n     */\r\n    Header.prototype.renderHeaderRightPortion = function (unreadMessageCount) {\r\n        var isWorklistIconClickable = false;\r\n        var isWorklistIconVisible = true;\r\n        this.hasAwardingAccess = awardingStore.instance.hasAwardingAccess;\r\n        this.hasPendingJudgement = awardingStore.instance.hasPendingJudgement;\r\n        if (this.props.containerPage === enums.PageContainers.Response ||\r\n            this.props.containerPage === enums.PageContainers.Message ||\r\n            this.props.isInTeamManagement) {\r\n            isWorklistIconClickable = true;\r\n        }\r\n        if (this.props.containerPage === enums.PageContainers.QigSelector ||\r\n            this.props.containerPage === enums.PageContainers.TeamManagement ||\r\n            this.props.containerPage === enums.PageContainers.StandardisationSetup ||\r\n            this.props.containerPage === enums.PageContainers.Awarding) {\r\n            isWorklistIconVisible = false;\r\n        }\r\n        if (this.props.containerPage === enums.PageContainers.AdminSupport) {\r\n            return null;\r\n        }\r\n        return (React.createElement(\"ul\", { className: 'nav shift-right', role: 'menubar' },\r\n            this.hasAwardingAccess ?\r\n                React.createElement(AwardingIndicator, { id: 'awardingindicator', key: 'awardingindicator', hasAwardingJudgement: this.hasPendingJudgement, selectedLanguage: this.props.selectedLanguage })\r\n                : null,\r\n            this.state.displayIcons === true ?\r\n                React.createElement(MessageNotificationIndicator, { id: 'notification', key: 'notification', messageNotificationCount: unreadMessageCount, selectedLanguage: this.props.selectedLanguage })\r\n                : null,\r\n            this.state.displayIcons === true ?\r\n                React.createElement(MenuWrapper, { id: 'menuwrapper', key: 'menuwrapper_key', selectedLanguage: this.props.selectedLanguage, handleNavigationClick: navigationHelper.handleNavigation.bind(this, enums.SaveAndNavigate.toMenu) })\r\n                : null,\r\n            React.createElement(UserDetails, { selectedLanguage: this.props.selectedLanguage, isUserOptionLoaded: this.state.isUserOptionLoaded })));\r\n    };\r\n    /**\r\n     * Redirect to the start page if not authenticated\r\n     */\r\n    Header.prototype.componentWillMount = function () {\r\n        if (!loginSession.IS_AUTHENTICATED) {\r\n            navigationHelper.loadLoginPage();\r\n        }\r\n    };\r\n    /**\r\n     * Unsubscribe events\r\n     */\r\n    Header.prototype.componentWillUnmount = function () {\r\n        useroptionStore.instance.removeListener(useroptionStore.UseroptionStore.USER_OPTION_GET_EVENT, this.refreshUseOption);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.UPDATE_NOTIFICATION_TRIGGERED_EVENT, this.updateNotification);\r\n        responseStore.instance.removeListener(responseStore.ResponseStore.RESPONSE_CHANGED, this.responseChanged);\r\n        toolbarStore.instance.removeListener(toolbarStore.ToolbarStore.STAMP_PAN, this.onStampPanStarted);\r\n        toolbarStore.instance.removeListener(toolbarStore.ToolbarStore.PAN_END, this.onStampPanEnd);\r\n        toolbarStore.instance.removeListener(toolbarStore.ToolbarStore.PAN_STAMP_TO_DELETION_AREA, this.onStampPanToDeleteArea);\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.ANNOTATION_DRAW, this.onDrawStart);\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.NAVIGATION_UPDATED_EVENT, this.onNavigationUpdated);\r\n        applicationStore.instance.removeListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.offlineIndicator);\r\n        qigStore.instance.removeListener(qigStore.QigStore.SHOW_HEADER_ICONS, this.displayHeaderIconsOnQIGLoaded);\r\n        if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n            document.documentElement.removeEventListener('touchstart', this.blockPinchToZoom, false);\r\n            document.documentElement.removeEventListener('touchend', this.blockDoubleTapZoom, false);\r\n        }\r\n        worklistStore.instance.removeListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.responseChanged);\r\n        responseStore.instance.removeListener(responseStore.ResponseStore.RESPONSE_OPENED, this.responseChanged);\r\n        qigStore.instance.removeListener(qigStore.QigStore.ACETATE_IN_GREY_AREA, this.acetateInGreyArea);\r\n        standardisationSetupStore.instance.removeListener(standardisationSetupStore.StandardisationSetupStore.STANDARDISATION_RESPONSE_DATA_UPDATED_EVENT, this.onReclassifyResponse);\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    Header.prototype.componentDidMount = function () {\r\n        var useCache = useroptionStore.instance.isLoaded;\r\n        /** Getting the user options */\r\n        userOptionActionCreator.getUserOptions(useCache);\r\n        useroptionStore.instance.addListener(useroptionStore.UseroptionStore.USER_OPTION_GET_EVENT, this.refreshUseOption);\r\n        messageStore.instance.addListener(messageStore.MessageStore.UPDATE_NOTIFICATION_TRIGGERED_EVENT, this.updateNotification);\r\n        responseStore.instance.addListener(responseStore.ResponseStore.RESPONSE_CHANGED, this.responseChanged);\r\n        toolbarStore.instance.addListener(toolbarStore.ToolbarStore.STAMP_PAN, this.onStampPanStarted);\r\n        toolbarStore.instance.addListener(toolbarStore.ToolbarStore.PAN_END, this.onStampPanEnd);\r\n        toolbarStore.instance.addListener(toolbarStore.ToolbarStore.PAN_STAMP_TO_DELETION_AREA, this.onStampPanToDeleteArea);\r\n        markingStore.instance.addListener(markingStore.MarkingStore.ANNOTATION_DRAW, this.onDrawStart);\r\n        markingStore.instance.addListener(markingStore.MarkingStore.NAVIGATION_UPDATED_EVENT, this.onNavigationUpdated);\r\n        applicationStore.instance.addListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.offlineIndicator);\r\n        qigStore.instance.addListener(qigStore.QigStore.SHOW_HEADER_ICONS, this.displayHeaderIconsOnQIGLoaded);\r\n        if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n            document.documentElement.addEventListener('touchstart', this.blockPinchToZoom, false);\r\n            document.documentElement.addEventListener('touchend', this.blockDoubleTapZoom, false);\r\n        }\r\n        worklistStore.instance.addListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.responseChanged);\r\n        responseStore.instance.addListener(responseStore.ResponseStore.RESPONSE_OPENED, this.responseChanged);\r\n        qigStore.instance.addListener(qigStore.QigStore.ACETATE_IN_GREY_AREA, this.acetateInGreyArea);\r\n        awardingStore.instance.addListener(awardingStore.AwardingStore.AWARDING_ACCESS_DETAILS, this.awardingAccessDetailsFetched);\r\n        standardisationSetupStore.instance.addListener(standardisationSetupStore.StandardisationSetupStore.STANDARDISATION_RESPONSE_DATA_UPDATED_EVENT, this.onReclassifyResponse);\r\n    };\r\n    /**\r\n     * Component will receive props\r\n     */\r\n    Header.prototype.componentWillReceiveProps = function (nextProps) {\r\n        if (this.props !== nextProps) {\r\n            this.setState({\r\n                renderedOn: nextProps.renderedOn\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Method to detect mouse  over\r\n     * @param event\r\n     */\r\n    Header.prototype.mouseover = function (event) {\r\n        if (!applicationStore.instance.isOnline) {\r\n            //Calculates the number of minutes that have elapsed since Assessor 3 first detected as offline.\r\n            this.elapsedTime = Math.round(((Date.now() - applicationStore.instance.elapsedTime) / 1000) / 60);\r\n            this.setState({ renderedOn: Date.now() });\r\n        }\r\n    };\r\n    /**\r\n     * Navigate to QigSelector while clicking on Logo\r\n     */\r\n    Header.prototype.navigateToQigSelector = function () {\r\n        var hasQigData = qigStore.instance.getOverviewData ?\r\n            qigStore.instance.getOverviewData.qigSummary.count() > 0 : undefined;\r\n        // if the remember qig is active then while navigating to qigselector\r\n        // from worklist then the qigdata will be undefined, so it it is undefined\r\n        // we need to get the qig list details to display it\r\n        if (!hasQigData) {\r\n            qigActionCreator.getQIGSelectorData(0);\r\n        }\r\n        // set the marker operation mode as Marking\r\n        userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.Marking);\r\n        navigationHelper.loadQigSelector();\r\n    };\r\n    /**\r\n     * This method will render the Bread Crumb component\r\n     */\r\n    Header.prototype.renderBreadCrumb = function () {\r\n        return (React.createElement(BreadCrumb, { id: 'BreadCrumbComponent', key: 'key_BreadCrumbComponent', containerPage: this.props.containerPage, selectedLanguage: this.props.selectedLanguage, renderedOn: this.props.renderedOn, examinerName: this.props.examinerName }));\r\n    };\r\n    return Header;\r\n}(pureRenderComponent));\r\nmodule.exports = Header;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ 42)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 339:
/* no static exports found */
/* all exports used */
/*!****************************************************************************!*\
  !*** ./src/components/utility/navigation/examinernavigationaudithelper.ts ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar loggerBase = __webpack_require__(/*! ../../base/loggerbase */ 425);\r\nvar logCategory = __webpack_require__(/*! ../auditlogger/auditloggingcategory */ 385);\r\nvar ExaminerNavigationAuditHelper = /** @class */ (function (_super) {\r\n    __extends(ExaminerNavigationAuditHelper, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ExaminerNavigationAuditHelper() {\r\n        return _super.call(this, logCategory.SCREEN_NAVIGATION) || this;\r\n    }\r\n    /**\r\n     * Log response open audit details.\r\n     * @param reason\r\n     * @param activity\r\n     * @param displayId\r\n     * @param responseMode\r\n     */\r\n    ExaminerNavigationAuditHelper.prototype.logResponseOpenAudit = function (reason, activity, displayId, responseMode) {\r\n        var logActionObj = {\r\n            'Reason': reason,\r\n            'Activity': activity,\r\n            'displayId': displayId,\r\n            'responseMode': responseMode\r\n        };\r\n        var result = this.formatInputAction(logActionObj);\r\n        this.saveAuditLog(result, true);\r\n    };\r\n    return ExaminerNavigationAuditHelper;\r\n}(loggerBase));\r\nmodule.exports = ExaminerNavigationAuditHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9uYXZpZ2F0aW9uL2V4YW1pbmVybmF2aWdhdGlvbmF1ZGl0aGVscGVyLnRzPzlkYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlckJhc2UgPSByZXF1aXJlKCcuLi8uLi9iYXNlL2xvZ2dlcmJhc2UnKTtcclxuaW1wb3J0IGxvZ0NhdGVnb3J5ID0gcmVxdWlyZSgnLi4vYXVkaXRsb2dnZXIvYXVkaXRsb2dnaW5nY2F0ZWdvcnknKTtcclxuXHJcbmNsYXNzIEV4YW1pbmVyTmF2aWdhdGlvbkF1ZGl0SGVscGVyIGV4dGVuZHMgbG9nZ2VyQmFzZSB7XHJcblxyXG5cdC8qKlxyXG5cdCAqIENvbnN0cnVjdG9yXHJcblx0ICovXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcihsb2dDYXRlZ29yeS5TQ1JFRU5fTkFWSUdBVElPTik7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBMb2cgcmVzcG9uc2Ugb3BlbiBhdWRpdCBkZXRhaWxzLlxyXG5cdCAqIEBwYXJhbSByZWFzb25cclxuXHQgKiBAcGFyYW0gYWN0aXZpdHlcclxuXHQgKiBAcGFyYW0gZGlzcGxheUlkXHJcblx0ICogQHBhcmFtIHJlc3BvbnNlTW9kZVxyXG5cdCAqL1xyXG5cdHB1YmxpYyBsb2dSZXNwb25zZU9wZW5BdWRpdChyZWFzb246IHN0cmluZyxcclxuXHRcdGFjdGl2aXR5OiBzdHJpbmcsXHJcblx0XHRkaXNwbGF5SWQ6IHN0cmluZyxcclxuXHRcdHJlc3BvbnNlTW9kZTogc3RyaW5nKTogdm9pZCB7XHJcblxyXG5cdFx0bGV0IGxvZ0FjdGlvbk9iaiA9IHtcclxuXHRcdFx0J1JlYXNvbic6IHJlYXNvbixcclxuXHRcdFx0J0FjdGl2aXR5JzogYWN0aXZpdHksXHJcblx0XHRcdCdkaXNwbGF5SWQnOiBkaXNwbGF5SWQsXHJcblx0XHRcdCdyZXNwb25zZU1vZGUnOiByZXNwb25zZU1vZGVcclxuXHRcdH07XHJcblx0XHRsZXQgcmVzdWx0ID0gdGhpcy5mb3JtYXRJbnB1dEFjdGlvbihsb2dBY3Rpb25PYmopO1xyXG5cdFx0dGhpcy5zYXZlQXVkaXRMb2cocmVzdWx0LCB0cnVlKTtcclxuXHR9XHJcbn1cclxuZXhwb3J0ID0gRXhhbWluZXJOYXZpZ2F0aW9uQXVkaXRIZWxwZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL3V0aWxpdHkvbmF2aWdhdGlvbi9leGFtaW5lcm5hdmlnYXRpb25hdWRpdGhlbHBlci50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7OztBQU1BO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 342:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./src/actions/searchresponse/rignotfoundaction.ts ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar action = __webpack_require__(/*! ../base/action */ 229);\r\nvar actionType = __webpack_require__(/*! ../base/actiontypes */ 228);\r\nvar RigNotFoundAction = /** @class */ (function (_super) {\r\n    __extends(RigNotFoundAction, _super);\r\n    /**\r\n     * Constructor of RigNotFoundAction\r\n     * @param success\r\n     * @param documentId\r\n     * @param readStatus\r\n     */\r\n    function RigNotFoundAction(showRigNotFoundPopup) {\r\n        var _this = _super.call(this, action.Source.View, actionType.RIG_NOT_FOUND_ACTION) || this;\r\n        _this._showRigNotFoundPopup = showRigNotFoundPopup;\r\n        _this.auditLog.logContent = _this.auditLog.logContent.\r\n            replace(/{showRigNotFoundPopup}/g, showRigNotFoundPopup.toString());\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RigNotFoundAction.prototype, \"showRigNotFoundPopup\", {\r\n        /**\r\n         * Retrieves Show or Hide popup\r\n         */\r\n        get: function () {\r\n            return this._showRigNotFoundPopup;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RigNotFoundAction;\r\n}(action));\r\nmodule.exports = RigNotFoundAction;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2FjdGlvbnMvc2VhcmNocmVzcG9uc2Uvcmlnbm90Zm91bmRhY3Rpb24udHM/M2FlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWN0aW9uID0gcmVxdWlyZSgnLi4vYmFzZS9hY3Rpb24nKTtcbmltcG9ydCBhY3Rpb25BdWRpdExvZ0luZm8gPSByZXF1aXJlKCcuLi9iYXNlL2F1ZGl0bG9naW5mby9hY3Rpb25hdWRpdGxvZ2luZm8nKTtcbmltcG9ydCBhY3Rpb25UeXBlID0gcmVxdWlyZSgnLi4vYmFzZS9hY3Rpb250eXBlcycpO1xuXG5jbGFzcyBSaWdOb3RGb3VuZEFjdGlvbiBleHRlbmRzIGFjdGlvbiB7XG5cbiAgICBwcml2YXRlIF9zaG93UmlnTm90Rm91bmRQb3B1cDogYm9vbGVhbjtcblxuIC8qKlxuICAqIENvbnN0cnVjdG9yIG9mIFJpZ05vdEZvdW5kQWN0aW9uXG4gICogQHBhcmFtIHN1Y2Nlc3NcbiAgKiBAcGFyYW0gZG9jdW1lbnRJZFxuICAqIEBwYXJhbSByZWFkU3RhdHVzXG4gICovXG4gIGNvbnN0cnVjdG9yKHNob3dSaWdOb3RGb3VuZFBvcHVwOiBib29sZWFuKSB7XG4gICAgc3VwZXIoYWN0aW9uLlNvdXJjZS5WaWV3LCBhY3Rpb25UeXBlLlJJR19OT1RfRk9VTkRfQUNUSU9OKTtcbiAgICB0aGlzLl9zaG93UmlnTm90Rm91bmRQb3B1cCA9IHNob3dSaWdOb3RGb3VuZFBvcHVwO1xuICAgIHRoaXMuYXVkaXRMb2cubG9nQ29udGVudCA9IHRoaXMuYXVkaXRMb2cubG9nQ29udGVudC5cbiAgICAgICAgcmVwbGFjZSgve3Nob3dSaWdOb3RGb3VuZFBvcHVwfS9nLCBzaG93UmlnTm90Rm91bmRQb3B1cC50b1N0cmluZygpKTtcbiAgfVxuXG4gLyoqXG4gICogUmV0cmlldmVzIFNob3cgb3IgSGlkZSBwb3B1cFxuICAqL1xuICBwdWJsaWMgZ2V0IHNob3dSaWdOb3RGb3VuZFBvcHVwKCk6IGJvb2xlYW4ge1xuICAgICByZXR1cm4gdGhpcy5fc2hvd1JpZ05vdEZvdW5kUG9wdXA7XG4gIH1cbn1cbmV4cG9ydCA9IFJpZ05vdEZvdW5kQWN0aW9uO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9hY3Rpb25zL3NlYXJjaHJlc3BvbnNlL3JpZ25vdGZvdW5kYWN0aW9uLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFFQTtBQUFBO0FBSUE7Ozs7O0FBS0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBS0E7QUFIQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 343:
/* no static exports found */
/* all exports used */
/*!*******************************************************************!*\
  !*** ./src/actions/searchresponse/searchresponseactioncreator.ts ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar dispatcher = __webpack_require__(/*! ../../app/dispatcher */ 242);\r\nvar Promise = __webpack_require__(/*! es6-promise */ 41);\r\nvar actionCreatorBase = __webpack_require__(/*! ../base/actioncreatorbase */ 280);\r\nvar searchResponseDataservice = __webpack_require__(/*! ../../dataservices/searchresponse/searchresponsedataservice */ 374);\r\nvar responseDataGetAction = __webpack_require__(/*! ../response/responsedatagetaction */ 440);\r\nvar enums = __webpack_require__(/*! ../../components/utility/enums */ 225);\r\nvar rignotfoundAction = __webpack_require__(/*! ./rignotfoundaction */ 342);\r\nvar loginSession = __webpack_require__(/*! ../../app/loginsession */ 252);\r\n/**\r\n * class for Search Response Action Creator\r\n */\r\nvar SearchResponseActionCreator = /** @class */ (function (_super) {\r\n    __extends(SearchResponseActionCreator, _super);\r\n    function SearchResponseActionCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * parameter data\r\n     * @param markSchemeGroupId\r\n     * @param examinerRoleId\r\n     * @param displayId\r\n     */\r\n    SearchResponseActionCreator.prototype.getSearchedResponse = function (markSchemeGroupId, examinerRoleId, displayId) {\r\n        var that = this;\r\n        return new Promise.Promise(function (resolve, reject) {\r\n            var displayIdWithoutPrefix = parseInt(displayId.substring(1, displayId.length)); // Remove prfix '6'\r\n            searchResponseDataservice.getSearchResponseDetail(markSchemeGroupId, examinerRoleId, displayIdWithoutPrefix, function (success, resultData, isResultFromCache) {\r\n                if (that.validateCall(resultData, false, true)) {\r\n                    if (!success) {\r\n                        resultData = undefined;\r\n                    }\r\n                    else {\r\n                        if (resultData.markGroupId === 0 && resultData.esMarkGroupId !== 0) {\r\n                            resultData.markGroupId = resultData.esMarkGroupId;\r\n                        }\r\n                        resultData.triggerPoint = enums.TriggerPoint.DisplayIdSearch;\r\n                        resultData.loggedInExaminerId = loginSession.EXAMINER_ID;\r\n                        resultData.markSchemeGroupId = markSchemeGroupId;\r\n                    }\r\n                    dispatcher.dispatch(new responseDataGetAction(resultData, success, true));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * parameter data\r\n     * @param show\r\n     */\r\n    SearchResponseActionCreator.prototype.showOrHideRigNotFoundPopup = function (show) {\r\n        new Promise.Promise(function (resolve, reject) {\r\n            resolve();\r\n        }).then(function () {\r\n            dispatcher.dispatch(new rignotfoundAction(show));\r\n        }).catch();\r\n    };\r\n    return SearchResponseActionCreator;\r\n}(actionCreatorBase));\r\nvar searchResponseActionCreator = new SearchResponseActionCreator();\r\nmodule.exports = searchResponseActionCreator;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2FjdGlvbnMvc2VhcmNocmVzcG9uc2Uvc2VhcmNocmVzcG9uc2VhY3Rpb25jcmVhdG9yLnRzPzBjNjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi8uLi9hcHAvZGlzcGF0Y2hlcicpO1xuaW1wb3J0IGFjdGlvbiA9IHJlcXVpcmUoJy4uL2Jhc2UvYWN0aW9uJyk7XG5pbXBvcnQgUHJvbWlzZSA9IHJlcXVpcmUoJ2VzNi1wcm9taXNlJyk7XG5pbXBvcnQgYWN0aW9uQ3JlYXRvckJhc2UgPSByZXF1aXJlKCcuLi9iYXNlL2FjdGlvbmNyZWF0b3JiYXNlJyk7XG5pbXBvcnQgc2VhcmNoUmVzcG9uc2VEYXRhc2VydmljZSA9IHJlcXVpcmUoJy4uLy4uL2RhdGFzZXJ2aWNlcy9zZWFyY2hyZXNwb25zZS9zZWFyY2hyZXNwb25zZWRhdGFzZXJ2aWNlJyk7XG5pbXBvcnQgcmVzcG9uc2VEYXRhR2V0QWN0aW9uID0gcmVxdWlyZSgnLi4vcmVzcG9uc2UvcmVzcG9uc2VkYXRhZ2V0YWN0aW9uJyk7XG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL3V0aWxpdHkvZW51bXMnKTtcbmltcG9ydCByaWdub3Rmb3VuZEFjdGlvbiA9IHJlcXVpcmUoJy4vcmlnbm90Zm91bmRhY3Rpb24nKTtcbmltcG9ydCBsb2dpblNlc3Npb24gPSByZXF1aXJlKCcuLi8uLi9hcHAvbG9naW5zZXNzaW9uJyk7XG5cbi8qKlxuICogY2xhc3MgZm9yIFNlYXJjaCBSZXNwb25zZSBBY3Rpb24gQ3JlYXRvciBcbiAqL1xuY2xhc3MgU2VhcmNoUmVzcG9uc2VBY3Rpb25DcmVhdG9yIGV4dGVuZHMgYWN0aW9uQ3JlYXRvckJhc2Uge1xuXG4gICAgLyoqXG4gICAgICogcGFyYW1ldGVyIGRhdGFcbiAgICAgKiBAcGFyYW0gbWFya1NjaGVtZUdyb3VwSWRcbiAgICAgKiBAcGFyYW0gZXhhbWluZXJSb2xlSWRcbiAgICAgKiBAcGFyYW0gZGlzcGxheUlkXG4gICAgICovXG5cbiAgICBwdWJsaWMgZ2V0U2VhcmNoZWRSZXNwb25zZShtYXJrU2NoZW1lR3JvdXBJZDogbnVtYmVyLCBleGFtaW5lclJvbGVJZDogbnVtYmVyLCBkaXNwbGF5SWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG5cbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UuUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZTogYW55LCByZWplY3Q6IGFueSkge1xuXG4gICAgICAgICAgICBsZXQgZGlzcGxheUlkV2l0aG91dFByZWZpeCA9IHBhcnNlSW50KGRpc3BsYXlJZC5zdWJzdHJpbmcoMSwgZGlzcGxheUlkLmxlbmd0aCkpOyAvLyBSZW1vdmUgcHJmaXggJzYnXG5cbiAgICAgICAgICAgIHNlYXJjaFJlc3BvbnNlRGF0YXNlcnZpY2UuZ2V0U2VhcmNoUmVzcG9uc2VEZXRhaWwobWFya1NjaGVtZUdyb3VwSWQsIGV4YW1pbmVyUm9sZUlkLCAgZGlzcGxheUlkV2l0aG91dFByZWZpeCxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoc3VjY2VzczogYm9vbGVhbiwgcmVzdWx0RGF0YTogU2VhcmNoZWRSZXNwb25zZURhdGEsIGlzUmVzdWx0RnJvbUNhY2hlOiBib29sZWFuKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoYXQudmFsaWRhdGVDYWxsKHJlc3VsdERhdGEsIGZhbHNlLCB0cnVlKSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHREYXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0RGF0YS5tYXJrR3JvdXBJZCA9PT0gMCAmJiByZXN1bHREYXRhLmVzTWFya0dyb3VwSWQgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0RGF0YS5tYXJrR3JvdXBJZCA9IHJlc3VsdERhdGEuZXNNYXJrR3JvdXBJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0RGF0YS50cmlnZ2VyUG9pbnQgPSBlbnVtcy5UcmlnZ2VyUG9pbnQuRGlzcGxheUlkU2VhcmNoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdERhdGEubG9nZ2VkSW5FeGFtaW5lcklkID0gbG9naW5TZXNzaW9uLkVYQU1JTkVSX0lEO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdERhdGEubWFya1NjaGVtZUdyb3VwSWQgPSBtYXJrU2NoZW1lR3JvdXBJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2hlci5kaXNwYXRjaChuZXcgcmVzcG9uc2VEYXRhR2V0QWN0aW9uKHJlc3VsdERhdGEsIHN1Y2Nlc3MsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBhcmFtZXRlciBkYXRhXG4gICAgICogQHBhcmFtIHNob3dcbiAgICAgKi9cblxuXHRwdWJsaWMgc2hvd09ySGlkZVJpZ05vdEZvdW5kUG9wdXAoc2hvdzogYm9vbGVhbil7XG5cdFx0ICBuZXcgUHJvbWlzZS5Qcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlOiBhbnksIHJlamVjdDogYW55KSB7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgZGlzcGF0Y2hlci5kaXNwYXRjaChuZXcgcmlnbm90Zm91bmRBY3Rpb24oc2hvdykpO1xuICAgICAgICB9KS5jYXRjaCgpO1xuXHR9XG59XG5sZXQgc2VhcmNoUmVzcG9uc2VBY3Rpb25DcmVhdG9yID0gbmV3IFNlYXJjaFJlc3BvbnNlQWN0aW9uQ3JlYXRvcigpO1xuZXhwb3J0ID0gc2VhcmNoUmVzcG9uc2VBY3Rpb25DcmVhdG9yO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvYWN0aW9ucy9zZWFyY2hyZXNwb25zZS9zZWFyY2hyZXNwb25zZWFjdGlvbmNyZWF0b3IudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFBQTtBQUFBOztBQW1EQTtBQWpEQTs7Ozs7QUFLQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 347:
/* no static exports found */
/* all exports used */
/*!*******************************************************!*\
  !*** ./src/components/awarding/awardingindicator.tsx ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar navigationHelper = __webpack_require__(/*! ../utility/navigation/navigationhelper */ 248);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar markingStore = __webpack_require__(/*! ../../stores/marking/markingstore */ 236);\r\nvar markingHelper = __webpack_require__(/*! ../../utility/markscheme/markinghelper */ 267);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\nvar markingActionCreator = __webpack_require__(/*! ../../actions/marking/markingactioncreator */ 246);\r\n/**\r\n * Represents the Awarding notification indicator component\r\n */\r\nvar AwardingIndicator = /** @class */ (function (_super) {\r\n    __extends(AwardingIndicator, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function AwardingIndicator(properties, state) {\r\n        var _this = _super.call(this, properties, state) || this;\r\n        /**\r\n         * on Awarding Indicator Click method\r\n         */\r\n        _this.onAwardingIndicatorClick = function () {\r\n            var responseNavigationFailureReasons = markingHelper.canNavigateAwayFromCurrentResponse();\r\n            if (responseNavigationFailureReasons.length > 0) {\r\n                popupHelper.navigateAwayFromResponse(responseNavigationFailureReasons, enums.SaveAndNavigate.toAwarding);\r\n            }\r\n            else {\r\n                if (markingStore.instance.isMarkingInProgress ||\r\n                    responseStore.instance.selectedResponseViewMode === enums.ResponseViewMode.fullResponseView) {\r\n                    /* Save the selected mark scheme mark to the mark collection on response move */\r\n                    markingActionCreator.saveAndNavigate(enums.SaveAndNavigate.toAwarding);\r\n                }\r\n                else {\r\n                    navigationHelper.loadAwardingPage(false);\r\n                }\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    AwardingIndicator.prototype.render = function () {\r\n        return (React.createElement(\"li\", { role: 'menuitem' },\r\n            React.createElement(\"a\", { id: this.props.id, href: 'javascript:void(0)', title: localeStore.instance.TranslateText('awarding.generic.awarding'), onClick: this.onAwardingIndicatorClick },\r\n                React.createElement(\"span\", { className: 'relative' },\r\n                    React.createElement(\"span\", { id: 'awardingNotification', className: this.props.hasAwardingJudgement ? 'notification-dot notify' : 'notification-dot' },\r\n                        React.createElement(\"span\", { className: 'sprite-icon awarding-star-icon' })),\r\n                    React.createElement(\"span\", { className: 'nav-text' }, localeStore.instance.TranslateText('awarding.generic.awarding-text'))))));\r\n    };\r\n    return AwardingIndicator;\r\n}(pureRenderComponent));\r\nmodule.exports = AwardingIndicator;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvYXdhcmRpbmcvYXdhcmRpbmdpbmRpY2F0b3IudHN4PzczMmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbi8qIHRzbGludDplbmFibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBwdXJlUmVuZGVyQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vYmFzZS9wdXJlcmVuZGVyY29tcG9uZW50Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG5hdmlnYXRpb25IZWxwZXIgPSByZXF1aXJlKCcuLi91dGlsaXR5L25hdmlnYXRpb24vbmF2aWdhdGlvbmhlbHBlcicpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBwb3B1cEhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvcG9wdXAvcG9wdXBoZWxwZXInKTtcclxuaW1wb3J0IG1hcmtpbmdTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9tYXJraW5nL21hcmtpbmdzdG9yZScpO1xyXG5pbXBvcnQgbWFya2luZ0hlbHBlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxpdHkvbWFya3NjaGVtZS9tYXJraW5naGVscGVyJyk7XHJcbmltcG9ydCByZXNwb25zZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3Jlc3BvbnNlL3Jlc3BvbnNlc3RvcmUnKTtcclxuaW1wb3J0IG1hcmtpbmdBY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9tYXJraW5nL21hcmtpbmdhY3Rpb25jcmVhdG9yJyk7XHJcblxyXG5cclxuLyoqXHJcbiAqIFByb3BlcnRpZXMgb2YgYXdhcmRpbmcgbm90aWZpY2F0aW9uIGluZGljYXRvciBjb21wb25lbnRcclxuICovXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBoYXNBd2FyZGluZ0p1ZGdlbWVudDogYm9vbGVhbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgdGhlIEF3YXJkaW5nIG5vdGlmaWNhdGlvbiBpbmRpY2F0b3IgY29tcG9uZW50XHJcbiAqL1xyXG5jbGFzcyBBd2FyZGluZ0luZGljYXRvciBleHRlbmRzIHB1cmVSZW5kZXJDb21wb25lbnQ8UHJvcHMsIGFueT57XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAY29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcGVydGllczogUHJvcHMsIHN0YXRlOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihwcm9wZXJ0aWVzLCBzdGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGxpIHJvbGU9J21lbnVpdGVtJz5cclxuICAgICAgICAgICAgICAgIDxhIGlkPXt0aGlzLnByb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKSdcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZT17bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnYXdhcmRpbmcuZ2VuZXJpYy5hd2FyZGluZycpfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLm9uQXdhcmRpbmdJbmRpY2F0b3JDbGlja30+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdyZWxhdGl2ZSc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSdhd2FyZGluZ05vdGlmaWNhdGlvbidcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17dGhpcy5wcm9wcy5oYXNBd2FyZGluZ0p1ZGdlbWVudCA/ICdub3RpZmljYXRpb24tZG90IG5vdGlmeScgOiAnbm90aWZpY2F0aW9uLWRvdCd9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBhd2FyZGluZy1zdGFyLWljb24nPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J25hdi10ZXh0Jz57bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnYXdhcmRpbmcuZ2VuZXJpYy5hd2FyZGluZy10ZXh0Jyl9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogb24gQXdhcmRpbmcgSW5kaWNhdG9yIENsaWNrIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uQXdhcmRpbmdJbmRpY2F0b3JDbGljayA9ICgpID0+IHtcclxuICAgICAgICBsZXQgcmVzcG9uc2VOYXZpZ2F0aW9uRmFpbHVyZVJlYXNvbnM6IEFycmF5PGVudW1zLlJlc3BvbnNlTmF2aWdhdGVGYWlsdXJlUmVhc29uPiA9XHJcbiAgICAgICAgICAgIG1hcmtpbmdIZWxwZXIuY2FuTmF2aWdhdGVBd2F5RnJvbUN1cnJlbnRSZXNwb25zZSgpO1xyXG4gICAgICAgIGlmIChyZXNwb25zZU5hdmlnYXRpb25GYWlsdXJlUmVhc29ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHBvcHVwSGVscGVyLm5hdmlnYXRlQXdheUZyb21SZXNwb25zZShyZXNwb25zZU5hdmlnYXRpb25GYWlsdXJlUmVhc29ucywgZW51bXMuU2F2ZUFuZE5hdmlnYXRlLnRvQXdhcmRpbmcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChtYXJraW5nU3RvcmUuaW5zdGFuY2UuaXNNYXJraW5nSW5Qcm9ncmVzcyB8fFxyXG4gICAgICAgICAgICAgICAgcmVzcG9uc2VTdG9yZS5pbnN0YW5jZS5zZWxlY3RlZFJlc3BvbnNlVmlld01vZGUgPT09IGVudW1zLlJlc3BvbnNlVmlld01vZGUuZnVsbFJlc3BvbnNlVmlldykge1xyXG4gICAgICAgICAgICAgICAgLyogU2F2ZSB0aGUgc2VsZWN0ZWQgbWFyayBzY2hlbWUgbWFyayB0byB0aGUgbWFyayBjb2xsZWN0aW9uIG9uIHJlc3BvbnNlIG1vdmUgKi9cclxuICAgICAgICAgICAgICAgIG1hcmtpbmdBY3Rpb25DcmVhdG9yLnNhdmVBbmROYXZpZ2F0ZShlbnVtcy5TYXZlQW5kTmF2aWdhdGUudG9Bd2FyZGluZyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBuYXZpZ2F0aW9uSGVscGVyLmxvYWRBd2FyZGluZ1BhZ2UoZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgPSBBd2FyZGluZ0luZGljYXRvcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvYXdhcmRpbmcvYXdhcmRpbmdpbmRpY2F0b3IudHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVVBOztBQUVBO0FBQ0E7QUFBQTtBQUVBOztBQUVBO0FBQ0E7QUFBQTtBQTBCQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQXpDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBRUE7QUFLQTtBQW9CQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 348:
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./src/components/breadcrumb/breadcrumb.tsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*\r\n  React component for Authorized BreadCrumb\r\n*/\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../../components/base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar breadCrumbHelper = __webpack_require__(/*! ../../utility/breadcrumb/breadcrumbhelper */ 377);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar userInfoStore = __webpack_require__(/*! ../../stores/userinfo/userinfostore */ 244);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\n/**\r\n * React component class for BreadCrumb\r\n */\r\nvar BreadCrumb = /** @class */ (function (_super) {\r\n    __extends(BreadCrumb, _super);\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function BreadCrumb(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._loadCurrentExaminerWorklist = false;\r\n        /**\r\n         * This will show the header icons after QIGs loaded\r\n         */\r\n        _this.qigSelected = function () {\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * rerender breadcrumb after rendering the response id.\r\n         */\r\n        _this.reRender = function () {\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        _this.state = {\r\n            renderedOn: Date.now()\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    BreadCrumb.prototype.render = function () {\r\n        var breadcrumbStyle;\r\n        var next = 0;\r\n        var prev = 0;\r\n        var respId = 0;\r\n        // Calculating the width of breadcrumb to adjuct dynamically with response id and on resize.\r\n        if (this.props.containerPage === enums.PageContainers.Response) {\r\n            if (document.getElementsByClassName('response-title').item(0)) {\r\n                respId = document.getElementsByClassName('response-title').item(0).clientWidth;\r\n            }\r\n            if (document.getElementsByClassName('response-nav response-nav-next').item(0)) {\r\n                next = document.getElementsByClassName('response-nav response-nav-next').item(0).clientWidth;\r\n            }\r\n            if (document.getElementsByClassName('response-nav response-nav-prev').item(0)) {\r\n                prev = document.getElementsByClassName('response-nav response-nav-prev').item(0).clientWidth;\r\n            }\r\n            var resIdWidth = (respId + next + prev) / 2;\r\n            // Here 40 pixel is used for padding\r\n            breadcrumbStyle = {\r\n                width: 'calc(50vw - ' + resIdWidth + 'px - 40px)'\r\n            };\r\n        }\r\n        return (React.createElement(\"div\", { id: this.props.id, key: this.props.id + '_key', className: 'breadcrumb-holder' },\r\n            React.createElement(\"ul\", { style: breadcrumbStyle, className: 'breadcrumb' }, this.renderBreadCrumbItems())));\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    BreadCrumb.prototype.componentDidMount = function () {\r\n        qigStore.instance.addListener(qigStore.QigStore.QIG_SELECTED_EVENT, this.qigSelected);\r\n        responseStore.instance.addListener(responseStore.ResponseStore.RESPONSE_ID_RENDERED_EVENT, this.reRender);\r\n        worklistStore.instance.addListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.reRender);\r\n        worklistStore.instance.addListener(worklistStore.WorkListStore.MARK_CHECK_EXAMINERS_DATA_RETRIVED, this.reRender);\r\n    };\r\n    /**\r\n     * Unsubscribe events\r\n     */\r\n    BreadCrumb.prototype.componentWillUnmount = function () {\r\n        qigStore.instance.removeListener(qigStore.QigStore.QIG_SELECTED_EVENT, this.qigSelected);\r\n        responseStore.instance.removeListener(responseStore.ResponseStore.RESPONSE_ID_RENDERED_EVENT, this.reRender);\r\n        worklistStore.instance.removeListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.reRender);\r\n        worklistStore.instance.removeListener(worklistStore.WorkListStore.MARK_CHECK_EXAMINERS_DATA_RETRIVED, this.reRender);\r\n    };\r\n    /**\r\n     * Render bread Crumb items\r\n     */\r\n    BreadCrumb.prototype.renderBreadCrumbItems = function () {\r\n        var _breadCrumbElements = new Array();\r\n        // If it is team management worklist then examiner name should display\r\n        if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.TeamManagement &&\r\n            this.props.containerPage === enums.PageContainers.WorkList) {\r\n            if (this.props.examinerName) {\r\n                _breadCrumbElements = breadCrumbHelper.getBreadCrumbTrail();\r\n            }\r\n        }\r\n        else {\r\n            _breadCrumbElements = breadCrumbHelper.getBreadCrumbTrail();\r\n        }\r\n        return _breadCrumbElements;\r\n    };\r\n    return BreadCrumb;\r\n}(pureRenderComponent));\r\nmodule.exports = BreadCrumb;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 349:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/breadcrumb/breadcrumbitem.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*\r\n  React component for Authorized BreadCrumb\r\n*/\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../../components/base/purerendercomponent */ 227);\r\nvar loginSession = __webpack_require__(/*! ../../app/loginsession */ 252);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../../actions/userinfo/userinfoactioncreator */ 255);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar userInfoStore = __webpack_require__(/*! ../../stores/userinfo/userinfostore */ 244);\r\nvar qigSelectorActionCreator = __webpack_require__(/*! ../../actions/qigselector/qigselectoractioncreator */ 253);\r\nvar markingStore = __webpack_require__(/*! ../../stores/marking/markingstore */ 236);\r\nvar worklistActionCreator = __webpack_require__(/*! ../../actions/worklist/worklistactioncreator */ 261);\r\nvar navigationHelper = __webpack_require__(/*! ../../components/utility/navigation/navigationhelper */ 248);\r\nvar operationModeHelper = __webpack_require__(/*! ../utility/userdetails/userinfo/operationmodehelper */ 289);\r\nvar Logo = __webpack_require__(/*! ../utility/logo/logo */ 443);\r\nvar storageAdapterHelper = __webpack_require__(/*! ../../dataservices/storageadapters/storageadapterhelper */ 269);\r\nvar standardisationSetupStore = __webpack_require__(/*! ../../stores/standardisationsetup/standardisationsetupstore */ 237);\r\n/**\r\n * React component class for BreadCrumb\r\n */\r\nvar BreadCrumbItem = /** @class */ (function (_super) {\r\n    __extends(BreadCrumbItem, _super);\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function BreadCrumbItem(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._loadCurrentExaminerWorklist = false;\r\n        _this.storageAdapterHelper = new storageAdapterHelper();\r\n        /**\r\n         * Handles the click\r\n         * @param {any} source\r\n         * @returns\r\n         */\r\n        _this.handleBreadCrumbClick = function (pageContainer, navigateTo) {\r\n            switch (navigateTo) {\r\n                case enums.PageContainers.Login:\r\n                    break;\r\n                case enums.PageContainers.QigSelector:\r\n                    navigationHelper.handleNavigation(enums.SaveAndNavigate.toQigSelector);\r\n                    break;\r\n                case enums.PageContainers.WorkList:\r\n                    navigationHelper.handleNavigation(enums.SaveAndNavigate.toWorklist);\r\n                    break;\r\n                case enums.PageContainers.Response:\r\n                    break;\r\n                case enums.PageContainers.Message:\r\n                    navigationHelper.handleNavigation(enums.SaveAndNavigate.toInboxMessagePage);\r\n                    break;\r\n                case enums.PageContainers.TeamManagement:\r\n                    navigationHelper.handleNavigation(enums.SaveAndNavigate.toTeam);\r\n                    break;\r\n                case enums.PageContainers.MarkingCheckExaminersWorkList:\r\n                    navigationHelper.handleNavigation(enums.SaveAndNavigate.toMarkingCheckWorklist);\r\n                    break;\r\n                case enums.PageContainers.StandardisationSetup:\r\n                    navigationHelper.handleNavigation(_this.navigateToForStandardisationSetupWorklist());\r\n                    break;\r\n                case enums.PageContainers.Awarding:\r\n                    navigationHelper.loadAwardingPage(false);\r\n                    break;\r\n            }\r\n        };\r\n        /**\r\n         * Go out from response after saving mark if there is any\r\n         */\r\n        _this.navigateAwayFromResponse = function () {\r\n            if (markingStore.instance.navigateTo === enums.SaveAndNavigate.toWorklist ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toQigSelector ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toMenu ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toTeam ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toMarkingCheckWorklist ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toProvisional ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toUnclassified ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toClassified ||\r\n                markingStore.instance.navigateTo === enums.SaveAndNavigate.toAwarding) {\r\n                /** When navigated to '~/worklist', IsResponseClose is set in worklist which is used in the qig selector component\r\n                 * to get the current response mode\r\n                 */\r\n                if (markingStore.instance.navigateTo !== enums.SaveAndNavigate.toMenu) {\r\n                    worklistActionCreator.responseClosed(true);\r\n                }\r\n                navigationHelper.loadContainerIfNeeded(enums.PageContainers.Response, enums.SaveMarksAndAnnotationsProcessingTriggerPoint.CloseResponse);\r\n            }\r\n        };\r\n        /**\r\n         * Go out from response after saving mark if there is any\r\n         */\r\n        _this.navigateToForStandardisationSetupWorklist = function () {\r\n            var selectedWorklist = standardisationSetupStore.instance.selectedStandardisationSetupWorkList;\r\n            var saveAndNavigateTo;\r\n            switch (selectedWorklist) {\r\n                case enums.StandardisationSetup.SelectResponse:\r\n                    saveAndNavigateTo = enums.SaveAndNavigate.toSelectResponses;\r\n                    break;\r\n                case enums.StandardisationSetup.UnClassifiedResponse:\r\n                    saveAndNavigateTo = enums.SaveAndNavigate.toUnclassified;\r\n                    break;\r\n                case enums.StandardisationSetup.ClassifiedResponse:\r\n                    saveAndNavigateTo = enums.SaveAndNavigate.toClassified;\r\n                    break;\r\n                case enums.StandardisationSetup.ProvisionalResponse:\r\n                    saveAndNavigateTo = enums.SaveAndNavigate.toProvisional;\r\n                    break;\r\n            }\r\n            return saveAndNavigateTo;\r\n        };\r\n        /**\r\n         * This method will be invoked on marker operation mode change\r\n         */\r\n        _this.onMarkerOperationModeChange = function (markerOperationMode, loadCurrentExaminerWorklist) {\r\n            // Marker clicked on worklist icon from TeamMangement worklist view we need to redirect\r\n            // Logined examiners worklist\r\n            if (loadCurrentExaminerWorklist && markerOperationMode === enums.MarkerOperationMode.Marking) {\r\n                userInfoActionCreator.resetDoLoadWorklistStatus();\r\n                // Invoke the action creator to Open the QIG\r\n                qigSelectorActionCreator.openQIG(operationModeHelper.markSchemeGroupId);\r\n            }\r\n        };\r\n        _this.state = {\r\n            renderedOn: Date.now()\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    BreadCrumbItem.prototype.render = function () {\r\n        if (this.props.isA3Logo) {\r\n            return (React.createElement(\"li\", { className: 'breadcrumb-item dropdown-wrap header-dropdown', id: 'li_' + this.props.id, key: 'li_' + this.props.id + '_key' }, this.renderLogo()));\r\n        }\r\n        else {\r\n            return (React.createElement(\"li\", { className: 'breadcrumb-item', id: 'li_' + this.props.id, key: 'li_' + this.props.id + '_key' }, this.renderBreadCrumbItem()));\r\n        }\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    BreadCrumbItem.prototype.componentDidMount = function () {\r\n        markingStore.instance.addListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        markingStore.instance.addListener(markingStore.MarkingStore.ACCEPT_QUALITY_ACTION_COMPLETED, this.navigateAwayFromResponse);\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.MARKER_OPERATION_MODE_CHANGED, this.onMarkerOperationModeChange);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    BreadCrumbItem.prototype.componentWillUnmount = function () {\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.ACCEPT_QUALITY_ACTION_COMPLETED, this.navigateAwayFromResponse);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.MARKER_OPERATION_MODE_CHANGED, this.onMarkerOperationModeChange);\r\n    };\r\n    /**\r\n     * This function will render breadcrumb items\r\n     */\r\n    BreadCrumbItem.prototype.renderBreadCrumbItem = function () {\r\n        if (this.props.isClickable) {\r\n            return (React.createElement(\"a\", { href: 'javascript:void(0)', id: 'a_' + this.props.id, onClick: this.handleBreadCrumbClick.bind(this, this.props.container, this.props.navigateTo), className: 'breadcrumb-anchor' }, this.props.breadCrumbString));\r\n        }\r\n        else {\r\n            return (React.createElement(\"span\", { id: 's_' + this.props.id, className: 'nav-text' }, this.props.breadCrumbString));\r\n        }\r\n    };\r\n    /**\r\n     * This method will render the logo based on login- Familiarisation/ Marking\r\n     */\r\n    BreadCrumbItem.prototype.renderLogo = function () {\r\n        if (loginSession.IS_FAMILIARISATION_LOGIN || loginSession.IS_SUPPORT_ADMIN_LOGIN) {\r\n            var logoText = void 0;\r\n            var id = void 0;\r\n            var key = void 0;\r\n            if (loginSession.IS_FAMILIARISATION_LOGIN) {\r\n                logoText = 'login.login-page.fam-button';\r\n                id = 'fam-logo-text';\r\n                key = 'fam-logo-text-key';\r\n            }\r\n            else {\r\n                logoText = 'login.login-page.support-admin-logo-text';\r\n                id = 'support-admin-logo-text';\r\n                key = 'support-admin-text-key';\r\n            }\r\n            return (React.createElement(Logo, { id: id, key: key, onLogoClick: navigationHelper.handleNavigation.bind(this, enums.SaveAndNavigate.toQigSelector), isFAMorSupportLogin: true, logoText: logoText }));\r\n        }\r\n        else if (this.props.isClickable) {\r\n            return (React.createElement(Logo, { id: 'assessor-logo', key: 'assessor-logo-key', onLogoClick: navigationHelper.handleNavigation.bind(this, enums.SaveAndNavigate.toQigSelector) }));\r\n        }\r\n        else {\r\n            return (React.createElement(Logo, { id: 'assessor-logo', key: 'assessor-logo-key' }));\r\n        }\r\n    };\r\n    return BreadCrumbItem;\r\n}(pureRenderComponent));\r\nmodule.exports = BreadCrumbItem;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 350:
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./src/components/logout/logout.tsx ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar exceptionStore = __webpack_require__(/*! ../../stores/exception/exceptionstore */ 277);\r\nvar navigationHelper = __webpack_require__(/*! ../utility/navigation/navigationhelper */ 248);\r\nvar qigActionCreator = __webpack_require__(/*! ./../../actions/qigselector/qigselectoractioncreator */ 253);\r\nvar Logout = /** @class */ (function (_super) {\r\n    __extends(Logout, _super);\r\n    /**\r\n     * Constructor Logout\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function Logout(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        /**\r\n         * if discard popup is displaying.\r\n         */\r\n        _this.onPopUpDisplayEvent = function (popUpType, popUpActionType) {\r\n            if ((popUpType === enums.PopUpType.DiscardMessageNavigateAway || popUpType === enums.PopUpType.DiscardExceptionNavigateAway)\r\n                && popUpActionType === enums.PopUpActionType.Close) {\r\n                qigActionCreator.getLocksInQigs(true);\r\n            }\r\n        };\r\n        _this.state = {\r\n            isLogoutConfirmationIsDisplaying: false\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    Logout.prototype.render = function () {\r\n        return (React.createElement(\"button\", { onClick: navigationHelper.showLogoutConfirmation.bind(this), className: 'primary rounded logout-btn', id: 'logout-button' }, localeStore.instance.TranslateText('generic.user-menu.profile-section.logout-button')));\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    Logout.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.EXCEPTION_DISCARD_POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n    };\r\n    /**\r\n     * Component will unmount\r\n     */\r\n    Logout.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.EXCEPTION_DISCARD_POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n    };\r\n    return Logout;\r\n}(pureRenderComponent));\r\nmodule.exports = Logout;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbG9nb3V0L2xvZ291dC50c3g/MTdiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBwdXJlUmVuZGVyQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vYmFzZS9wdXJlcmVuZGVyY29tcG9uZW50Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG1hcmtpbmdIZWxwZXIgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L21hcmtzY2hlbWUvbWFya2luZ2hlbHBlcicpO1xyXG5pbXBvcnQgbWFya2luZ0FjdGlvbkNyZWF0b3IgPSByZXF1aXJlKCcuLi8uLi9hY3Rpb25zL21hcmtpbmcvbWFya2luZ2FjdGlvbmNyZWF0b3InKTtcclxuaW1wb3J0IHVzZXJJbmZvQWN0aW9uQ3JlYXRvciA9IHJlcXVpcmUoJy4uLy4uL2FjdGlvbnMvdXNlcmluZm8vdXNlcmluZm9hY3Rpb25jcmVhdG9yJyk7XHJcbmltcG9ydCB3b3JrbGlzdFN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3dvcmtsaXN0L3dvcmtsaXN0c3RvcmUnKTtcclxuaW1wb3J0IG1lc3NhZ2luZ0FjdGlvbkNyZWF0b3IgPSByZXF1aXJlKCcuLi8uLi9hY3Rpb25zL21lc3NhZ2luZy9tZXNzYWdpbmdhY3Rpb25jcmVhdG9yJyk7XHJcbmltcG9ydCBtZXNzYWdlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbWVzc2FnZS9tZXNzYWdlc3RvcmUnKTtcclxuaW1wb3J0IHJlc3BvbnNlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvcmVzcG9uc2UvcmVzcG9uc2VzdG9yZScpO1xyXG5pbXBvcnQgZXhjZXB0aW9uU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvZXhjZXB0aW9uL2V4Y2VwdGlvbnN0b3JlJyk7XHJcbmltcG9ydCBleGNlcHRpb25BY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9leGNlcHRpb24vZXhjZXB0aW9uYWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgYXBwbGljYXRpb25BY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9hcHBsaWNhdGlvbm9mZmxpbmUvYXBwbGljYXRpb25hY3Rpb25jcmVhdG9yJyk7XHJcbmltcG9ydCBwb3B1cERpc3BsYXlBY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9wb3B1cGRpc3BsYXkvcG9wdXBkaXNwbGF5YWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgbmF2aWdhdGlvbkhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uaGVscGVyJyk7XHJcbmltcG9ydCBxaWdTdG9yZSA9IHJlcXVpcmUoJy4vLi4vLi4vc3RvcmVzL3FpZ3NlbGVjdG9yL3FpZ3N0b3JlJyk7XHJcbmltcG9ydCBMb2Nrc0luUWlnUG9wdXAgPSByZXF1aXJlKCcuLy4uL3FpZ3NlbGVjdG9yL2xvY2tzaW5xaWdwb3B1cCcpO1xyXG5pbXBvcnQgcWlnQWN0aW9uQ3JlYXRvciA9IHJlcXVpcmUoJy4vLi4vLi4vYWN0aW9ucy9xaWdzZWxlY3Rvci9xaWdzZWxlY3RvcmFjdGlvbmNyZWF0b3InKTtcclxuXHJcbi8qKlxyXG4gKiBQcm9wZXJ0aWVzIG9mIGEgY29tcG9uZW50XHJcbiAqL1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTpuby1lbXB0eS1pbnRlcmZhY2VzICovXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2Uge1xyXG59XHJcbi8qIHRzbGludDplbmFibGU6bm8tZW1wdHktaW50ZXJmYWNlcyAqL1xyXG5cclxuLyoqXHJcbiAqIEFsbCBmaWVsZHMgb3B0aW9uYWwgdG8gYWxsb3cgcGFydGlhbCBzdGF0ZSB1cGRhdGVzIGluIHNldFN0YXRlXHJcbiAqL1xyXG5pbnRlcmZhY2UgU3RhdGUge1xyXG4gICAgbG9nZ2VkSW5Vc2VybmFtZT86IHN0cmluZztcclxuICAgIGlzTG9nb3V0Q29uZmlybWF0aW9uSXNEaXNwbGF5aW5nPzogYm9vbGVhbjtcclxufVxyXG5cclxuY2xhc3MgTG9nb3V0IGV4dGVuZHMgcHVyZVJlbmRlckNvbXBvbmVudDxQcm9wcywgU3RhdGU+IHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yIExvZ291dFxyXG4gICAgICogQHBhcmFtIHByb3BzXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzLCBzdGF0ZTogU3RhdGUpIHtcclxuICAgICAgICBzdXBlcihwcm9wcywgc3RhdGUpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIGlzTG9nb3V0Q29uZmlybWF0aW9uSXNEaXNwbGF5aW5nOiBmYWxzZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgY29tcG9uZW50XHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e25hdmlnYXRpb25IZWxwZXIuc2hvd0xvZ291dENvbmZpcm1hdGlvbi5iaW5kKHRoaXMpIH1cclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3ByaW1hcnkgcm91bmRlZCBsb2dvdXQtYnRuJ1xyXG4gICAgICAgICAgICAgICAgICAgIGlkPSAnbG9nb3V0LWJ1dHRvbic+XHJcbiAgICAgICAgICAgICAgICAgICAge2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMudXNlci1tZW51LnByb2ZpbGUtc2VjdGlvbi5sb2dvdXQtYnV0dG9uJykgfVxyXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBvbmVudCBkaWQgbW91bnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5hZGRMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLlBPUFVQX0RJU1BMQVlfRVZFTlQsIHRoaXMub25Qb3BVcERpc3BsYXlFdmVudCk7XHJcbiAgICAgICAgZXhjZXB0aW9uU3RvcmUuaW5zdGFuY2UuYWRkTGlzdGVuZXIoZXhjZXB0aW9uU3RvcmUuRXhjZXB0aW9uU3RvcmUuRVhDRVBUSU9OX0RJU0NBUkRfUE9QVVBfRElTUExBWV9FVkVOVCwgdGhpcy5vblBvcFVwRGlzcGxheUV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBvbmVudCB3aWxsIHVubW91bnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5yZW1vdmVMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLlBPUFVQX0RJU1BMQVlfRVZFTlQsIHRoaXMub25Qb3BVcERpc3BsYXlFdmVudCk7XHJcbiAgICAgICAgZXhjZXB0aW9uU3RvcmUuaW5zdGFuY2UucmVtb3ZlTGlzdGVuZXIoZXhjZXB0aW9uU3RvcmUuRXhjZXB0aW9uU3RvcmUuRVhDRVBUSU9OX0RJU0NBUkRfUE9QVVBfRElTUExBWV9FVkVOVCxcclxuICAgICAgICAgICAgIHRoaXMub25Qb3BVcERpc3BsYXlFdmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBpZiBkaXNjYXJkIHBvcHVwIGlzIGRpc3BsYXlpbmcuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Qb3BVcERpc3BsYXlFdmVudCA9IChwb3BVcFR5cGU6IGVudW1zLlBvcFVwVHlwZSwgcG9wVXBBY3Rpb25UeXBlOiBlbnVtcy5Qb3BVcEFjdGlvblR5cGUpOiB2b2lkID0+IHtcclxuICAgICAgICBpZiAoKHBvcFVwVHlwZSA9PT0gZW51bXMuUG9wVXBUeXBlLkRpc2NhcmRNZXNzYWdlTmF2aWdhdGVBd2F5IHx8IHBvcFVwVHlwZSA9PT0gZW51bXMuUG9wVXBUeXBlLkRpc2NhcmRFeGNlcHRpb25OYXZpZ2F0ZUF3YXkpXHJcbiAgICAgICAgICAgICYmIHBvcFVwQWN0aW9uVHlwZSA9PT0gZW51bXMuUG9wVXBBY3Rpb25UeXBlLkNsb3NlKSB7XHJcbiAgICAgICAgICAgIHFpZ0FjdGlvbkNyZWF0b3IuZ2V0TG9ja3NJblFpZ3ModHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5cclxuZXhwb3J0ID0gTG9nb3V0O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9sb2dvdXQvbG9nb3V0LnRzeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBRUE7QUFJQTtBQUdBO0FBa0JBO0FBQUE7QUFFQTs7OztBQUlBO0FBQ0E7QUFBQTtBQXNDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTVDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBT0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVdBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 351:
/* no static exports found */
/* all exports used */
/*!************************************************************!*\
  !*** ./src/components/logout/logoutconfirmationdialog.tsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*\r\n  React component for ask for logout button in user options\r\n*/\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar userOptionsHelper = __webpack_require__(/*! ../../utility/useroption/useroptionshelper */ 265);\r\nvar userOptionKeys = __webpack_require__(/*! ../../utility/useroption/useroptionkeys */ 264);\r\nvar useroptionStore = __webpack_require__(/*! ../../stores/useroption/useroptionstore */ 302);\r\nvar ToggleButton = __webpack_require__(/*! ../utility/togglebutton */ 308);\r\nvar userInfoStore = __webpack_require__(/*! ../../stores/userinfo/userinfostore */ 244);\r\n/**\r\n * React component class for Ask on Logout confirmation\r\n */\r\nvar LogoutConfirmationDialog = /** @class */ (function (_super) {\r\n    __extends(LogoutConfirmationDialog, _super);\r\n    /**\r\n     * Constructor LogoutConfirmationDialog\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function LogoutConfirmationDialog(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._emailAddress = '';\r\n        /**\r\n         * Refresh state\r\n         */\r\n        _this.refreshState = function () {\r\n            /** resetting the locally stored user option collection */\r\n            // userOptionsHelper.resetChangedUserOptions();\r\n            _this.setState({ isAskOnLogout: !_this.state.isAskOnLogout });\r\n            _this.setState({ isAutoAdvanceOn: !_this.state.isAutoAdvanceOn });\r\n        };\r\n        /**\r\n         * Get the user information from userinfo store\r\n         */\r\n        _this.getUserInformation = function () {\r\n            _this._emailAddress = userInfoStore.instance.EmailAddress;\r\n            _this._isScriptAvailabilityEmailAlert = userInfoStore.instance.IsScriptAvailabilityEmailAlert;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Get the email address from userinfo store after save the email address.\r\n         */\r\n        _this.userInfoSaved = function () {\r\n            _this._emailAddress = userInfoStore.instance.EmailAddress;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        _this.state = {\r\n            isAskOnLogout: userOptionsHelper.getUserOptionByName(userOptionKeys.ASK_ON_LOG_OUT) === 'true' ? true : false,\r\n            isAutoAdvanceOn: userOptionsHelper.getUserOptionByName(userOptionKeys.ASSIGN_SINGLE_DIGIT_WITHOUT_PRESSING_ENTER) === 'true' ?\r\n                true : false,\r\n            isPauseMediaonOffpageCommentAdd: userOptionsHelper.getUserOptionByName(userOptionKeys.PAUSE_MEDIA_WHEN_OFFPAGE_COMMENTS_ARE_ADDED) === 'true' ?\r\n                true : false,\r\n            isEmailmeToggleOn: userOptionsHelper.getUserOptionByName(userOptionKeys.EMAIL_ME_WHEN_SCRIPTS_ARE_AVAILABLE_FOR_STANDARDISATION)\r\n                === 'true' ? true : false,\r\n            isOnScreenHintsOn: userOptionsHelper.getUserOptionByName(userOptionKeys.ON_SCREEN_HINTS) === 'true' ? true : false,\r\n            renderedOn: 0\r\n        };\r\n        _this._isAskOnLogout = true;\r\n        _this._isAutoAdvanceOn = true;\r\n        _this._isOffpageCommentOn = true;\r\n        _this._isEmailmeToggleOn = true;\r\n        _this._isOnScreenHintsOn = true;\r\n        _this.handleChange = _this.handleChange.bind(_this);\r\n        _this.onToggleChange = _this.onToggleChange.bind(_this);\r\n        _this.onOffPageCommentToggleChange = _this.onOffPageCommentToggleChange.bind(_this);\r\n        _this.onEmailmeToggleChange = _this.onEmailmeToggleChange.bind(_this);\r\n        _this.onOnScreenHintsToggleChange = _this.onOnScreenHintsToggleChange.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     */\r\n    LogoutConfirmationDialog.prototype.render = function () {\r\n        /**\r\n         * the value of the ask on logout option should take from local json if it is changed else take it from the store\r\n         */\r\n        this._isAskOnLogout = userOptionsHelper.getUserOptionByName(userOptionKeys.ASK_ON_LOG_OUT) === 'true' ? true : false;\r\n        this._isAutoAdvanceOn = userOptionsHelper.getUserOptionByName(userOptionKeys.ASSIGN_SINGLE_DIGIT_WITHOUT_PRESSING_ENTER)\r\n            === 'true' ? true : false;\r\n        this._isOffpageCommentOn = userOptionsHelper.getUserOptionByName(userOptionKeys.PAUSE_MEDIA_WHEN_OFFPAGE_COMMENTS_ARE_ADDED)\r\n            === 'true' ? true : false;\r\n        this._isEmailmeToggleOn = userOptionsHelper.getUserOptionByName(userOptionKeys.EMAIL_ME_WHEN_SCRIPTS_ARE_AVAILABLE_FOR_STANDARDISATION)\r\n            === 'true' ? true : false;\r\n        this._isOnScreenHintsOn = userOptionsHelper.getUserOptionByName(userOptionKeys.ON_SCREEN_HINTS) === 'true' ? true : false;\r\n        var emailMeToggleOption;\r\n        var enterEmailAddressAbove;\r\n        if (this._emailAddress === null || this._emailAddress === '') {\r\n            enterEmailAddressAbove = (React.createElement(\"label\", { className: 'error-alert simple-alert' }, localeStore.instance.TranslateText('generic.user-menu.user-options.enter-email-address-above')));\r\n        }\r\n        else {\r\n            enterEmailAddressAbove = null;\r\n        }\r\n        if (this._isScriptAvailabilityEmailAlert) {\r\n            emailMeToggleOption = (React.createElement(\"div\", { className: 'form-field inline script-available-settings' },\r\n                React.createElement(\"label\", { id: 'scriptAvailability', className: 'label' },\r\n                    localeStore.instance.TranslateText('generic.user-menu.user-options.email-me-when-scripts-are-available-for-standardisation'),\r\n                    React.createElement(\"br\", null),\r\n                    enterEmailAddressAbove),\r\n                React.createElement(ToggleButton, { id: 'scriptavailability_id', key: 'scriptavailability_key', isChecked: this._isEmailmeToggleOn, selectedLanguage: this.props.selectedLanguage, index: 0, onChange: this.onEmailmeToggleChange, style: this.props.style, className: 'form-component', title: localeStore.instance.TranslateText('generic.user-menu.user-options.email-me-when-scripts-are-available-for-standardisation'), isDisabled: this._emailAddress === null || this._emailAddress === '' ? true : false, onText: localeStore.instance.TranslateText('generic.toggle-button-states.on'), offText: localeStore.instance.TranslateText('generic.toggle-button-states.off') })));\r\n        }\r\n        else {\r\n            emailMeToggleOption = null;\r\n        }\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { className: 'logout-settings form-field inline' },\r\n                React.createElement(\"label\", { className: 'label' }, localeStore.instance.TranslateText('generic.user-menu.user-options.logout-confirmation')),\r\n                React.createElement(\"div\", { className: 'form-component toggle-button', \"aria-pressed\": 'true' },\r\n                    React.createElement(\"input\", { type: 'checkbox', id: 'logoutConfirm', checked: this._isAskOnLogout, \"data-value\": this._isAskOnLogout, onChange: this.handleChange }),\r\n                    React.createElement(\"label\", { title: localeStore.instance.TranslateText('generic.user-menu.user-options.logout-confirmation-tooltip'), className: 'toggle-label', htmlFor: 'logoutConfirm' },\r\n                        React.createElement(\"div\", { className: 'toggle-content' },\r\n                            React.createElement(\"div\", { className: 'on-text' }, localeStore.instance.TranslateText('generic.toggle-button-states.on')),\r\n                            React.createElement(\"div\", { className: 'off-text' }, localeStore.instance.TranslateText('generic.toggle-button-states.off'))),\r\n                        React.createElement(\"div\", { className: 'toggle-switch' })))),\r\n            React.createElement(\"div\", { className: 'form-field inline single-digit-mark-settings' },\r\n                React.createElement(\"label\", { id: 'singleDigit', className: 'label' }, localeStore.instance.TranslateText('generic.user-menu.user-options.assign-single-digit-marks-without-pressing-enter')),\r\n                React.createElement(ToggleButton, { id: 'assignSingleDigit_id', key: 'assignSingleDigit_key', isChecked: this._isAutoAdvanceOn, selectedLanguage: this.props.selectedLanguage, index: 0, onChange: this.onToggleChange, style: this.props.style, className: 'form-component', title: localeStore.instance.TranslateText('generic.user-menu.user-options.assign-single-digit-marks-without-pressing-enter'), onText: localeStore.instance.TranslateText('generic.toggle-button-states.on'), offText: localeStore.instance.TranslateText('generic.toggle-button-states.off') })),\r\n            React.createElement(\"div\", { className: 'form-field inline pause-media-offpagecomment' },\r\n                React.createElement(\"label\", { id: 'enhanced', className: 'label' }, localeStore.instance.TranslateText('generic.user-menu.user-options.pause-media-when-offpage-comments-are-added')),\r\n                React.createElement(ToggleButton, { id: 'enhancedoffpage_id', key: 'enhancedoffpage_key', isChecked: this._isOffpageCommentOn, selectedLanguage: this.props.selectedLanguage, index: 0, onChange: this.onOffPageCommentToggleChange, style: this.props.style, className: 'form-component', title: localeStore.instance.TranslateText('generic.user-menu.user-options.pause-media-when-offpage-comments-are-added'), onText: localeStore.instance.TranslateText('generic.toggle-button-states.on'), offText: localeStore.instance.TranslateText('generic.toggle-button-states.off') })),\r\n            emailMeToggleOption,\r\n            React.createElement(\"div\", { className: 'on-screen-hint-settings form-field inline' },\r\n                React.createElement(\"label\", { id: 'onScreenHint', className: 'label' }, localeStore.instance.TranslateText('generic.user-menu.user-options.on-screen-hints')),\r\n                React.createElement(ToggleButton, { id: 'onScreenHint_id', key: 'onScreenHint_key', isChecked: this._isOnScreenHintsOn, selectedLanguage: this.props.selectedLanguage, index: 0, onChange: this.onOnScreenHintsToggleChange, style: this.props.style, className: 'form-component', title: localeStore.instance.TranslateText('generic.user-menu.user-options.on-screen-hints'), onText: localeStore.instance.TranslateText('generic.toggle-button-states.on'), offText: localeStore.instance.TranslateText('generic.toggle-button-states.off') }))));\r\n    };\r\n    /**\r\n     * for handling the ask on logout option change event.\r\n     */\r\n    LogoutConfirmationDialog.prototype.handleChange = function (evt) {\r\n        this._isAskOnLogout = !this._isAskOnLogout;\r\n        /** Adding/Updating the changed value to the local json variable changed user options */\r\n        userOptionsHelper.save(userOptionKeys.ASK_ON_LOG_OUT, String(this._isAskOnLogout));\r\n        this.setState({ isAskOnLogout: !this.state.isAskOnLogout });\r\n    };\r\n    /**\r\n     * for handling the ask on Single Digit Mark Setting option change event.\r\n     */\r\n    LogoutConfirmationDialog.prototype.onToggleChange = function (evt) {\r\n        this._isAutoAdvanceOn = !this._isAutoAdvanceOn;\r\n        /** Adding/Updating the changed value to the local json variable changed user options */\r\n        userOptionsHelper.save(userOptionKeys.ASSIGN_SINGLE_DIGIT_WITHOUT_PRESSING_ENTER, String(this._isAutoAdvanceOn));\r\n        this.setState({ isAutoAdvanceOn: !this.state.isAutoAdvanceOn });\r\n    };\r\n    /**\r\n     * for handling the ask on Single Digit Mark Setting option change event.\r\n     */\r\n    LogoutConfirmationDialog.prototype.onOffPageCommentToggleChange = function (evt) {\r\n        this._isOffpageCommentOn = !this._isOffpageCommentOn;\r\n        /** Adding/Updating the changed value to the local json variable changed user options */\r\n        userOptionsHelper.save(userOptionKeys.PAUSE_MEDIA_WHEN_OFFPAGE_COMMENTS_ARE_ADDED, String(this._isOffpageCommentOn));\r\n        this.setState({ isPauseMediaonOffpageCommentAdd: !this.state.isPauseMediaonOffpageCommentAdd });\r\n    };\r\n    /**\r\n     * for handling the ask on Script Availability Email Alert change event.\r\n     */\r\n    LogoutConfirmationDialog.prototype.onEmailmeToggleChange = function (evt) {\r\n        this._isEmailmeToggleOn = !this._isEmailmeToggleOn;\r\n        userOptionsHelper.save(userOptionKeys.EMAIL_ME_WHEN_SCRIPTS_ARE_AVAILABLE_FOR_STANDARDISATION, String(this._isEmailmeToggleOn));\r\n        this.setState({ isEmailmeToggleOn: !this.state.isEmailmeToggleOn });\r\n    };\r\n    /**\r\n     *\r\n     * Handling the on screen hint toggle change event\r\n     */\r\n    LogoutConfirmationDialog.prototype.onOnScreenHintsToggleChange = function (evt) {\r\n        this._isOnScreenHintsOn = !this._isOnScreenHintsOn;\r\n        userOptionsHelper.save(userOptionKeys.ON_SCREEN_HINTS, String(this._isOnScreenHintsOn));\r\n        this.setState({ isOnScreenHintsOn: !this.state.isOnScreenHintsOn });\r\n    };\r\n    /**\r\n     * Subscribe the user option save event to re-render the component on change of ask on logout value.\r\n     */\r\n    LogoutConfirmationDialog.prototype.componentWillMount = function () {\r\n        useroptionStore.instance.addListener(useroptionStore.UseroptionStore.USER_OPTION_SAVE_EVENT, this.refreshState);\r\n    };\r\n    /**\r\n     * Unsubscribe events\r\n     */\r\n    LogoutConfirmationDialog.prototype.componentWillUnmount = function () {\r\n        useroptionStore.instance.removeListener(useroptionStore.UseroptionStore.USER_OPTION_SAVE_EVENT, this.refreshState);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.getUserInformation);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.USERINFO_SAVE, this.userInfoSaved);\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    LogoutConfirmationDialog.prototype.componentDidMount = function () {\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.getUserInformation);\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.USERINFO_SAVE, this.userInfoSaved);\r\n    };\r\n    return LogoutConfirmationDialog;\r\n}(pureRenderComponent));\r\nmodule.exports = LogoutConfirmationDialog;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 352:
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./src/components/menu/menulink.tsx ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar historyItemHelper = __webpack_require__(/*! ../../utility/breadcrumb/historyitemhelper */ 378);\r\n/**\r\n * Returns menu link\r\n * @param props\r\n */\r\nvar menuLink = function (props) {\r\n    if (props.isRecentHistory) {\r\n        var teamManagementLink = props.recentItem.team ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () { props.onTeamManagementClick(props.recentItem, null, null, null); }, id: 'menuLink_TeamManagement_' + props.recentItem.qigId }, localeStore.instance.TranslateText('generic.navigation-menu.team-management'))) : props.recentItem.isTeamManagementEnabled ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () {\r\n                props.onTeamManagementClick(null, props.recentItem.qigId, props.recentItem.questionPaperPartId, props.recentItem.examinerRoleId);\r\n            }, id: 'menuLink_TeamManagement_' + props.recentItem.qigId }, localeStore.instance.TranslateText('generic.navigation-menu.team-management'))) : null;\r\n        var myMarkingLink = props.recentItem.myMarking ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () { props.onMyMarkingClick(props.recentItem, null, null); }, id: 'menuLink_' + props.recentItem.qigId }, localeStore.instance.TranslateText('generic.navigation-menu.my-marking'))) : props.recentItem.isMarkingEnabled ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () {\r\n                props.onMyMarkingClick(null, props.recentItem.qigId, props.recentItem.questionPaperPartId);\r\n            }, id: 'menuLink_' + props.recentItem.qigId }, localeStore.instance.TranslateText('generic.navigation-menu.my-marking'))) : null;\r\n        var standardisationSetupLink = props.recentItem.standardisationSetup ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () { props.onStandardisationSetupClick(props.recentItem, null, null); }, id: 'menuLink_StandardisationSetup_' + props.recentItem.qigId }, historyItemHelper.getStandardisationSetupLinkText(props.recentItem.qigId))) : props.recentItem.isStandardisationSetupEnabled ? (React.createElement(\"a\", { href: 'javascript:void(0)', className: 'small-text', onClick: function () {\r\n                props.onStandardisationSetupClick(null, props.recentItem.qigId);\r\n            }, id: 'menuLink_StandardisationSetup_' + props.recentItem.qigId }, historyItemHelper.getStandardisationSetupLinkText(props.recentItem.qigId))) : null;\r\n        return (React.createElement(\"li\", { className: 'menu-items', id: 'menuItem_' + props.recentItem.qigId },\r\n            React.createElement(\"div\", { className: 'recent-links-quig' }, props.menuString),\r\n            React.createElement(\"div\", { className: 'recent-links' },\r\n                myMarkingLink,\r\n                teamManagementLink,\r\n                standardisationSetupLink)));\r\n    }\r\n    else if (props.isVisible) {\r\n        return (React.createElement(\"li\", { className: 'menu-items' },\r\n            React.createElement(\"a\", { id: props.id, key: props.id, href: 'javascript:void(0)', onClick: function () { props.onMenuLinkClick(); } }, props.menuLinkName)));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = menuLink;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVudS9tZW51bGluay50c3g/YWM4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuaW1wb3J0IGxvY2FsZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL2xvY2FsZS9sb2NhbGVzdG9yZScpO1xuaW1wb3J0IGhpc3RvcnlJdGVtID0gcmVxdWlyZSgnLi4vLi4vdXRpbGl0eS9icmVhZGNydW1iL2hpc3RvcnlJdGVtJyk7XG5pbXBvcnQgaGlzdG9yeUl0ZW1IZWxwZXIgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2JyZWFkY3J1bWIvaGlzdG9yeWl0ZW1oZWxwZXInKTtcbmltcG9ydCBtYXJrZXJPcGVyYXRpb25Nb2RlRmFjdG9yeSA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWFya2Vyb3BlcmF0aW9ubW9kZS9tYXJrZXJvcGVyYXRpb25tb2RlZmFjdG9yeScpO1xuXG5pbnRlcmZhY2UgTWVudUxpbmtQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XG4gICAgaXNWaXNpYmxlPzogYm9vbGVhbjtcbiAgICBvbk1lbnVMaW5rQ2xpY2s/OiBGdW5jdGlvbjtcbiAgICBvbk15TWFya2luZ0NsaWNrPzogRnVuY3Rpb247XG4gICAgb25UZWFtTWFuYWdlbWVudENsaWNrPzogRnVuY3Rpb247XG4gICAgb25TdGFuZGFyZGlzYXRpb25TZXR1cENsaWNrPzogRnVuY3Rpb247XG4gICAgbWVudVN0cmluZz86IHN0cmluZztcbiAgICBtZW51TGlua05hbWU/OiBzdHJpbmc7XG4gICAgaXNSZWNlbnRIaXN0b3J5PzogYm9vbGVhbjtcbiAgICByZWNlbnRJdGVtPzogaGlzdG9yeUl0ZW07XG59XG5cbi8qKlxuICogUmV0dXJucyBtZW51IGxpbmtcbiAqIEBwYXJhbSBwcm9wc1xuICovXG5jb25zdCBtZW51TGluazogUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50PE1lbnVMaW5rUHJvcHM+ID0gKHByb3BzOiBNZW51TGlua1Byb3BzKSA9PiB7XG4gICAgaWYgKHByb3BzLmlzUmVjZW50SGlzdG9yeSkge1xuICAgICAgICBsZXQgdGVhbU1hbmFnZW1lbnRMaW5rID0gcHJvcHMucmVjZW50SXRlbS50ZWFtID8gKDxhIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKSdcbiAgICAgICAgICAgIGNsYXNzTmFtZT0nc21hbGwtdGV4dCdcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHsgcHJvcHMub25UZWFtTWFuYWdlbWVudENsaWNrKHByb3BzLnJlY2VudEl0ZW0sIG51bGwsIG51bGwsIG51bGwpOyB9fVxuICAgICAgICAgICAgaWQ9eydtZW51TGlua19UZWFtTWFuYWdlbWVudF8nICsgcHJvcHMucmVjZW50SXRlbS5xaWdJZH0+XG4gICAgICAgICAgICB7bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLW1lbnUudGVhbS1tYW5hZ2VtZW50Jyl9XG4gICAgICAgIDwvYT4pIDogcHJvcHMucmVjZW50SXRlbS5pc1RlYW1NYW5hZ2VtZW50RW5hYmxlZCA/ICg8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknXG4gICAgICAgICAgICBjbGFzc05hbWU9J3NtYWxsLXRleHQnXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJvcHMub25UZWFtTWFuYWdlbWVudENsaWNrKFxuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5yZWNlbnRJdGVtLnFpZ0lkLFxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5yZWNlbnRJdGVtLnF1ZXN0aW9uUGFwZXJQYXJ0SWQsXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLnJlY2VudEl0ZW0uZXhhbWluZXJSb2xlSWQpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGlkPXsnbWVudUxpbmtfVGVhbU1hbmFnZW1lbnRfJyArIHByb3BzLnJlY2VudEl0ZW0ucWlnSWR9PlxuICAgICAgICAgICAge2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1tZW51LnRlYW0tbWFuYWdlbWVudCcpfVxuICAgICAgICA8L2E+KSA6IG51bGw7XG4gICAgICAgIGxldCBteU1hcmtpbmdMaW5rID0gcHJvcHMucmVjZW50SXRlbS5teU1hcmtpbmcgPyAoPGEgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPSdzbWFsbC10ZXh0J1xuICAgICAgICAgICAgb25DbGljaz17KCkgPT4geyBwcm9wcy5vbk15TWFya2luZ0NsaWNrKHByb3BzLnJlY2VudEl0ZW0sIG51bGwsIG51bGwpOyB9fVxuICAgICAgICAgICAgaWQ9eydtZW51TGlua18nICsgcHJvcHMucmVjZW50SXRlbS5xaWdJZH0+XG4gICAgICAgICAgICB7bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLW1lbnUubXktbWFya2luZycpfVxuICAgICAgICA8L2E+KSA6IHByb3BzLnJlY2VudEl0ZW0uaXNNYXJraW5nRW5hYmxlZCA/ICg8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknXG4gICAgICAgICAgICBjbGFzc05hbWU9J3NtYWxsLXRleHQnXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJvcHMub25NeU1hcmtpbmdDbGljayhcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMucmVjZW50SXRlbS5xaWdJZCxcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMucmVjZW50SXRlbS5xdWVzdGlvblBhcGVyUGFydElkKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBpZD17J21lbnVMaW5rXycgKyBwcm9wcy5yZWNlbnRJdGVtLnFpZ0lkfT5cbiAgICAgICAgICAgIHtsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tbWVudS5teS1tYXJraW5nJyl9XG4gICAgICAgIDwvYT4pIDogbnVsbDtcbiAgICAgICAgbGV0IHN0YW5kYXJkaXNhdGlvblNldHVwTGluayA9IHByb3BzLnJlY2VudEl0ZW0uc3RhbmRhcmRpc2F0aW9uU2V0dXAgPyAoPGEgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPSdzbWFsbC10ZXh0J1xuICAgICAgICAgICAgb25DbGljaz17KCkgPT4geyBwcm9wcy5vblN0YW5kYXJkaXNhdGlvblNldHVwQ2xpY2socHJvcHMucmVjZW50SXRlbSwgbnVsbCwgbnVsbCk7IH19XG4gICAgICAgICAgICBpZD17J21lbnVMaW5rX1N0YW5kYXJkaXNhdGlvblNldHVwXycgKyBwcm9wcy5yZWNlbnRJdGVtLnFpZ0lkfT5cbiAgICAgICAgICAgIHtoaXN0b3J5SXRlbUhlbHBlci5nZXRTdGFuZGFyZGlzYXRpb25TZXR1cExpbmtUZXh0KHByb3BzLnJlY2VudEl0ZW0ucWlnSWQpfVxuICAgICAgICA8L2E+KSA6IHByb3BzLnJlY2VudEl0ZW0uaXNTdGFuZGFyZGlzYXRpb25TZXR1cEVuYWJsZWQgPyAoPGEgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPSdzbWFsbC10ZXh0J1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMub25TdGFuZGFyZGlzYXRpb25TZXR1cENsaWNrKFxuICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLnJlY2VudEl0ZW0ucWlnSWQpO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICBpZD17J21lbnVMaW5rX1N0YW5kYXJkaXNhdGlvblNldHVwXycgKyBwcm9wcy5yZWNlbnRJdGVtLnFpZ0lkfT5cbiAgICAgICAgICAgIHtoaXN0b3J5SXRlbUhlbHBlci5nZXRTdGFuZGFyZGlzYXRpb25TZXR1cExpbmtUZXh0KHByb3BzLnJlY2VudEl0ZW0ucWlnSWQpfVxuICAgICAgICA8L2E+KSA6IG51bGw7XG4gICAgICAgIHJldHVybiAoPGxpIGNsYXNzTmFtZT0nbWVudS1pdGVtcycgaWQ9eydtZW51SXRlbV8nICsgcHJvcHMucmVjZW50SXRlbS5xaWdJZH0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmVjZW50LWxpbmtzLXF1aWcnPntwcm9wcy5tZW51U3RyaW5nfTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JlY2VudC1saW5rcyc+XG4gICAgICAgICAgICAgICAge215TWFya2luZ0xpbmt9XG4gICAgICAgICAgICAgICAge3RlYW1NYW5hZ2VtZW50TGlua31cbiAgICAgICAgICAgICAgICB7c3RhbmRhcmRpc2F0aW9uU2V0dXBMaW5rfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbGk+KTtcbiAgICB9IGVsc2UgaWYgKHByb3BzLmlzVmlzaWJsZSkge1xuICAgICAgICByZXR1cm4gKDxsaSBjbGFzc05hbWU9J21lbnUtaXRlbXMnPlxuICAgICAgICAgICAgPGEgaWQ9e3Byb3BzLmlkfSBrZXk9e3Byb3BzLmlkfSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknIG9uQ2xpY2s9eygpID0+IHsgcHJvcHMub25NZW51TGlua0NsaWNrKCk7IH19Pntwcm9wcy5tZW51TGlua05hbWV9PC9hPlxuICAgICAgICA8L2xpPik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufTtcblxuZXhwb3J0ID0gbWVudUxpbms7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL21lbnUvbWVudWxpbmsudHN4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUVBO0FBZUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFLQTtBQUlBO0FBUUE7QUFJQTtBQUlBO0FBUUE7QUFHQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 353:
/* no static exports found */
/* all exports used */
/*!*************************************************!*\
  !*** ./src/components/menu/menusearchpanel.tsx ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar searchPanel = function (props) {\r\n    return (React.createElement(\"div\", { className: 'menu-page-block menu-page-search', id: 'menu-search-area' },\r\n        React.createElement(\"h2\", { id: 'menu-search-area-header' }, localeStore.instance.\r\n            TranslateText('search-response.search-header')),\r\n        React.createElement(\"ul\", { className: 'menu-holder recent-items' },\r\n            React.createElement(\"li\", { className: 'menu-items' },\r\n                React.createElement(\"div\", { className: 'recent-links-quig', id: 'menu-search-area-qigname', title: props.qigName }, props.qigName)),\r\n            React.createElement(\"li\", { className: 'search-box-wrap lite' },\r\n                React.createElement(\"div\", { className: 'search-box-panel' },\r\n                    React.createElement(\"div\", { className: 'relative' },\r\n                        React.createElement(\"span\", { id: 'search-icon', className: 'search-link' },\r\n                            React.createElement(\"span\", { className: 'sprite-icon search-icon-small-grey' }, \"Search for a response by ID\")),\r\n                        React.createElement(\"input\", { type: 'text', id: 'menu-search-response', className: 'text-underline msg-search-input', onChange: onSearch, required: true, placeholder: localeStore.instance.\r\n                                TranslateText('search-response.search-placeholder'), title: localeStore.instance.\r\n                                TranslateText('search-response.search-tooltip'), disabled: false, \"aria-label\": localeStore.instance.\r\n                                TranslateText('search-response.search-tooltip'), autoComplete: 'off', value: props.searchText }),\r\n                        React.createElement(\"a\", { id: 'menu-search-close-link', href: 'javascript:void(0);', onClick: onSearchClear, className: 'close-link', title: localeStore.instance.\r\n                                TranslateText('search-response.search-close-button-text') },\r\n                            React.createElement(\"span\", { className: 'sprite-icon search-close' }, \"Closed\")),\r\n                        React.createElement(\"span\", { className: 'bar' })))),\r\n            React.createElement(\"li\", null,\r\n                React.createElement(\"button\", { className: 'primary rounded logout-btn', id: 'menu-search-btn', onClick: onSearchClick, title: localeStore.instance.\r\n                        TranslateText('search-response.search-button-text') }, localeStore.instance.\r\n                    TranslateText('search-response.search-button-text'))))));\r\n    /**\r\n     * Will call on search text change.\r\n     * @param e event\r\n     */\r\n    function onSearch(e) {\r\n        props.onSearch(e.target.value);\r\n    }\r\n    /**\r\n     * This method will clear the search contents.\r\n     */\r\n    function onSearchClear() {\r\n        props.onSearch('');\r\n    }\r\n    /**\r\n     * This method will clear the search contents.\r\n     */\r\n    function onSearchClick() {\r\n        props.onSearchClick();\r\n    }\r\n};\r\nmodule.exports = searchPanel;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVudS9tZW51c2VhcmNocGFuZWwudHN4P2QwZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxubGV0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBvblNlYXJjaDogRnVuY3Rpb247XHJcbiAgICBvblNlYXJjaENsaWNrOiBGdW5jdGlvbjtcclxuICAgIHFpZ05hbWU6IHN0cmluZztcclxuICAgIHNlYXJjaFRleHQ6IHN0cmluZztcclxufVxyXG5cclxuY29uc3Qgc2VhcmNoUGFuZWwgPSAocHJvcHM6IFByb3BzKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZW51LXBhZ2UtYmxvY2sgbWVudS1wYWdlLXNlYXJjaCcgaWQ9J21lbnUtc2VhcmNoLWFyZWEnPlxyXG4gICAgICAgICAgICA8aDIgaWQ9J21lbnUtc2VhcmNoLWFyZWEtaGVhZGVyJz57bG9jYWxlU3RvcmUuaW5zdGFuY2UuXHJcbiAgICAgICAgICAgICAgICBUcmFuc2xhdGVUZXh0KCdzZWFyY2gtcmVzcG9uc2Uuc2VhcmNoLWhlYWRlcicpfTwvaDI+XHJcbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9J21lbnUtaG9sZGVyIHJlY2VudC1pdGVtcyc+XHJcbiAgICAgICAgICAgICAgICA8bGkgY2xhc3NOYW1lPSdtZW51LWl0ZW1zJz5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmVjZW50LWxpbmtzLXF1aWcnIGlkPSdtZW51LXNlYXJjaC1hcmVhLXFpZ25hbWUnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXtwcm9wcy5xaWdOYW1lfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3Byb3BzLnFpZ05hbWV9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT0nc2VhcmNoLWJveC13cmFwIGxpdGUnPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzZWFyY2gtYm94LXBhbmVsJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JlbGF0aXZlJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSdzZWFyY2gtaWNvbicgY2xhc3NOYW1lPSdzZWFyY2gtbGluayc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBzZWFyY2gtaWNvbi1zbWFsbC1ncmV5Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VhcmNoIGZvciBhIHJlc3BvbnNlIGJ5IElEXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0ndGV4dCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0nbWVudS1zZWFyY2gtcmVzcG9uc2UnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd0ZXh0LXVuZGVybGluZSBtc2ctc2VhcmNoLWlucHV0J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvblNlYXJjaH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtsb2NhbGVTdG9yZS5pbnN0YW5jZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVHJhbnNsYXRlVGV4dCgnc2VhcmNoLXJlc3BvbnNlLnNlYXJjaC1wbGFjZWhvbGRlcicpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXtsb2NhbGVTdG9yZS5pbnN0YW5jZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVHJhbnNsYXRlVGV4dCgnc2VhcmNoLXJlc3BvbnNlLnNlYXJjaC10b29sdGlwJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2xvY2FsZVN0b3JlLmluc3RhbmNlLlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmFuc2xhdGVUZXh0KCdzZWFyY2gtcmVzcG9uc2Uuc2VhcmNoLXRvb2x0aXAnKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9J29mZidcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17cHJvcHMuc2VhcmNoVGV4dH0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9J21lbnUtc2VhcmNoLWNsb3NlLWxpbmsnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApOydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvblNlYXJjaENsZWFyfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2xvc2UtbGluaydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17bG9jYWxlU3RvcmUuaW5zdGFuY2UuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyYW5zbGF0ZVRleHQoJ3NlYXJjaC1yZXNwb25zZS5zZWFyY2gtY2xvc2UtYnV0dG9uLXRleHQnKX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBzZWFyY2gtY2xvc2UnPkNsb3NlZDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nYmFyJz48L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0ncHJpbWFyeSByb3VuZGVkIGxvZ291dC1idG4nIGlkPSdtZW51LXNlYXJjaC1idG4nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uU2VhcmNoQ2xpY2t9IHRpdGxlPXtsb2NhbGVTdG9yZS5pbnN0YW5jZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgVHJhbnNsYXRlVGV4dCgnc2VhcmNoLXJlc3BvbnNlLnNlYXJjaC1idXR0b24tdGV4dCcpfT57bG9jYWxlU3RvcmUuaW5zdGFuY2UuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmFuc2xhdGVUZXh0KCdzZWFyY2gtcmVzcG9uc2Uuc2VhcmNoLWJ1dHRvbi10ZXh0Jyl9PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFdpbGwgY2FsbCBvbiBzZWFyY2ggdGV4dCBjaGFuZ2UuXHJcbiAgICAgKiBAcGFyYW0gZSBldmVudFxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBvblNlYXJjaChlOiBhbnkpIHtcclxuICAgICAgICBwcm9wcy5vblNlYXJjaChlLnRhcmdldC52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIGNsZWFyIHRoZSBzZWFyY2ggY29udGVudHMuXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIG9uU2VhcmNoQ2xlYXIoKSB7XHJcbiAgICAgICAgcHJvcHMub25TZWFyY2goJycpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCBjbGVhciB0aGUgc2VhcmNoIGNvbnRlbnRzLlxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBvblNlYXJjaENsaWNrKCkge1xyXG4gICAgICAgIHByb3BzLm9uU2VhcmNoQ2xpY2soKTtcclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCA9IHNlYXJjaFBhbmVsO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZW51L21lbnVzZWFyY2hwYW5lbC50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQU9BO0FBRUE7QUFHQTtBQUdBO0FBTUE7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 354:
/* no static exports found */
/* all exports used */
/*!*********************************************!*\
  !*** ./src/components/menu/menuwrapper.tsx ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar Promise = __webpack_require__(/*! es6-promise */ 41);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar Immutable = __webpack_require__(/*! immutable */ 40);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar navigationStore = __webpack_require__(/*! ../../stores/navigation/navigationstore */ 275);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar MenuLink = __webpack_require__(/*! ./menulink */ 352);\r\nvar navigationHelper = __webpack_require__(/*! ../utility/navigation/navigationhelper */ 248);\r\nvar awardingStore = __webpack_require__(/*! ../../stores/awarding/awardingstore */ 270);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../../actions/userinfo/userinfoactioncreator */ 255);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\nvar markingActionCreator = __webpack_require__(/*! ../../actions/marking/markingactioncreator */ 246);\r\nvar qigSelectorActionCreator = __webpack_require__(/*! ../../actions/qigselector/qigselectoractioncreator */ 253);\r\nvar worklistActionCreator = __webpack_require__(/*! ../../actions/worklist/worklistactioncreator */ 261);\r\nvar ccActionCreator = __webpack_require__(/*! ../../actions/configurablecharacteristics/configurablecharacteristicsactioncreator */ 310);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar stringFormatHelper = __webpack_require__(/*! ../../utility/stringformat/stringformathelper */ 250);\r\nvar stampStore = __webpack_require__(/*! ../../stores/stamp/stampstore */ 260);\r\nvar stampActionCreator = __webpack_require__(/*! ../../actions/stamp/stampactioncreator */ 284);\r\nvar examinerStore = __webpack_require__(/*! ../../stores/markerinformation/examinerstore */ 259);\r\nvar dataServiceHelper = __webpack_require__(/*! ../../utility/generic/dataservicehelper */ 433);\r\nvar responseSearchHelper = __webpack_require__(/*! ../../utility/responsesearch/responsesearchhelper */ 321);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar loginStore = __webpack_require__(/*! ../../stores/login/loginstore */ 286);\r\nvar loginSession = __webpack_require__(/*! ../../app/loginsession */ 252);\r\nvar teamManagementActionCreator = __webpack_require__(/*! ../../actions/teammanagement/teammanagementactioncreator */ 263);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar markingCheckActionCreator = __webpack_require__(/*! ../../actions/markingcheck/markingcheckactioncreator */ 311);\r\nvar qigActionCreator = __webpack_require__(/*! ../../actions/qigselector/qigselectoractioncreator */ 253);\r\nvar cchelper = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicshelper */ 233);\r\nvar ccNames = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicsnames */ 234);\r\nvar storageAdapterHelper = __webpack_require__(/*! ../../dataservices/storageadapters/storageadapterhelper */ 269);\r\nvar busyIndicatorActionCreator = __webpack_require__(/*! ../../actions/busyindicator/busyindicatoractioncreator */ 279);\r\nvar userInfoStore = __webpack_require__(/*! ../../stores/userinfo/userinfostore */ 244);\r\nvar keyDownHelper = __webpack_require__(/*! ../../utility/generic/keydownhelper */ 258);\r\nvar markerInformationActionCreator = __webpack_require__(/*! ../../actions/markerinformation/markerinformationactioncreator */ 381);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\nvar applicationActionCreator = __webpack_require__(/*! ../../actions/applicationoffline/applicationactioncreator */ 256);\r\nvar navigationLoggingHelper = __webpack_require__(/*! ../utility/navigation/examinernavigationaudithelper */ 339);\r\nvar loggerConstants = __webpack_require__(/*! ../utility/loggerhelperconstants */ 322);\r\nvar responseHelper = __webpack_require__(/*! ../utility/responsehelper/responsehelper */ 249);\r\nvar auditLoggingHelper = __webpack_require__(/*! ../utility/auditlogger/auditlogginghelper */ 298);\r\nvar MenuSearchPanel = __webpack_require__(/*! ./menusearchpanel */ 353);\r\nvar searchResponseActionCreator = __webpack_require__(/*! ../../actions/searchresponse/searchresponseactioncreator */ 343);\r\nvar markSchemeHelper = __webpack_require__(/*! ../../utility/markscheme/markschemehelper */ 276);\r\nvar eCourseworkHelper = __webpack_require__(/*! ../utility/ecoursework/ecourseworkhelper */ 238);\r\nvar BusyIndicator = __webpack_require__(/*! ../utility/busyindicator/busyindicator */ 312);\r\nvar standardisationActionCreator = __webpack_require__(/*! ../../actions/standardisationsetup/standardisationactioncreator */ 251);\r\n/**\r\n * React component class for Showing menu Page\r\n */\r\nvar MenuWrapper = /** @class */ (function (_super) {\r\n    __extends(MenuWrapper, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function MenuWrapper(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._qigid = 0;\r\n        _this._questionPaperPartId = 0;\r\n        _this._examinerRoleId = 0;\r\n        _this._failureCode = enums.FailureCode.None;\r\n        _this.storageAdapterHelper = new storageAdapterHelper();\r\n        _this.logger = new navigationLoggingHelper();\r\n        _this.searchText = '';\r\n        _this.busyIndicatorInvoker = enums.BusyIndicatorInvoker.none;\r\n        _this.showBackgroundScreenOnBusy = false;\r\n        // enum to identify history navigation area\r\n        _this.historyNavigationArea = enums.HistoryNavigationArea.None;\r\n        /**\r\n         * used to set the visibility of menu Wrapper\r\n         */\r\n        _this.menuVisibility = function (doVisible) {\r\n            if (doVisible === void 0) { doVisible = true; }\r\n            var message = doVisible ? 'Open menu event triggered' : 'Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insight based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            if (markerOperationModeFactory.operationMode.isSetMarkingInProgressAndMarkEntrySelectedRequired && doVisible) {\r\n                keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.Menu);\r\n            }\r\n            _this.setState({\r\n                isOpen: doVisible\r\n            });\r\n            // Log opened response details to keep as audit.\r\n            _this.logger.logResponseOpenAudit(loggerConstants.NAVIGATION_REASON_MENU_SCREEN, loggerConstants.NAVIGATION_REASON_MENU_CLICK, responseStore && responseStore.instance.selectedDisplayId ? responseStore.instance.selectedDisplayId.toString() : '', responseStore && responseStore.instance.selectedResponseMode !== undefined ?\r\n                enums.ResponseMode[responseStore.instance.selectedResponseMode].toString() : '');\r\n        };\r\n        /**\r\n         * used to close menu Wrapper\r\n         */\r\n        _this.closeMenu = function () {\r\n            if (markerOperationModeFactory.operationMode.isSetMarkingInProgressAndMarkEntrySelectedRequired) {\r\n                markingActionCreator.setMarkEntrySelected(false);\r\n                keyDownHelper.instance.Activate(enums.MarkEntryDeactivator.Menu);\r\n            }\r\n            var message = 'Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insight based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            // Cleared the search text while clicking close button.\r\n            _this.searchText = '';\r\n            _this.setState({\r\n                isOpen: false\r\n            });\r\n            // Log opened response details to keep as audit.\r\n            _this.logger.logResponseOpenAudit(loggerConstants.NAVIGATION_REASON_MENU_SCREEN, loggerConstants.NAVIGATION_REASON_MENU_CLOSE_CLICK, responseStore && responseStore.instance.selectedDisplayId ? responseStore.instance.selectedDisplayId.toString() : '', responseStore && responseStore.instance.selectedResponseMode !== undefined ?\r\n                enums.ResponseMode[responseStore.instance.selectedResponseMode].toString() : '');\r\n        };\r\n        /* Called when search text changed */\r\n        _this.onSearch = function (searchText) {\r\n            _this.searchText = searchText;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /* Called when search button clicked */\r\n        _this.onSearchClick = function () {\r\n            if (_this.searchText && _this.searchText !== '' && _this.isValidSearchText(_this.searchText)) {\r\n                if (qigStore.instance.selectedQIGForMarkerOperation) {\r\n                    var selectedQIGForMarkerOperation = qigStore.instance.selectedQIGForMarkerOperation;\r\n                    searchResponseActionCreator.getSearchedResponse(selectedQIGForMarkerOperation.markSchemeGroupId, qigStore.instance.getSelectedQIGForTheLoggedInUser.examinerRoleId, _this.searchText);\r\n                    _this.setBusyIndicatorProperties(enums.BusyIndicatorInvoker.loadingResponse, false);\r\n                    // The below condition will be removed as part of search rig from response screen\r\n                    // feature implementation.\r\n                    if (navigationStore.instance.containerPage !== enums.PageContainers.Response) {\r\n                        _this.setState({ isBusy: true });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                searchResponseActionCreator.showOrHideRigNotFoundPopup(true);\r\n            }\r\n        };\r\n        /**\r\n         * Load worklist\r\n         */\r\n        _this.loadRecentWorklist = function (_historyItem, _markingMode) {\r\n            if (_markingMode === enums.MarkerOperationMode.Marking) {\r\n                navigationHelper.loadWorklist(true);\r\n                var message = 'Loading worklist from menu with Close menu event triggered.';\r\n                message = message + ' Current container => ' +\r\n                    enums.PageContainers[navigationStore.instance.containerPage];\r\n                // logging menu action in google analytics or application insights based on the configuration\r\n                new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n                _this.setState({\r\n                    isOpen: false\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * after examiner validation do operation based on history details\r\n         */\r\n        _this.examinerValidated = function (failureCode) {\r\n            if (failureCode === void 0) { failureCode = enums.FailureCode.None; }\r\n            _this._failureCode = failureCode;\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n            // for these two error codes there is no need to fetch other data's we can\r\n            // directly navigating to qig selector by clearing latest cache data\r\n            if (_this._failureCode === enums.FailureCode.Withdrawn || _this._failureCode === enums.FailureCode.NotTeamLead) {\r\n                _this.storageAdapterHelper.clearCacheByKey('qigselector', 'overviewdata');\r\n                navigationHelper.loadQigSelector();\r\n                if (_this._historyItem) {\r\n                    _this._qigid = _this._historyItem.qigId;\r\n                }\r\n                teamManagementActionCreator.removeHistoryItem(_this._qigid, _this._failureCode === enums.FailureCode.NotTeamLead);\r\n                var message = 'Loading Qigselector from menu as the examiner is Withdrawn/NotTeamLead.Close menu event triggered.';\r\n                message = message + ' Current container => ' +\r\n                    enums.PageContainers[navigationStore.instance.containerPage];\r\n                // logging menu action in google analytics or application insights based on the configuration\r\n                new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n                _this.setState({ isOpen: false });\r\n            }\r\n            else {\r\n                // response is getting closed, inform modules.\r\n                worklistActionCreator.responseClosed(true);\r\n                var changeOperationModePromise = void 0;\r\n                if (userInfoStore.instance.currentOperationMode !== enums.MarkerOperationMode.TeamManagement) {\r\n                    changeOperationModePromise = userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.TeamManagement, false, true);\r\n                }\r\n                if (!_this._historyItem && _this._qigid) {\r\n                    // while team management is opened for first time through menu history link,the\r\n                    // history item value will be null, so we need to do the exact action\r\n                    // which happens while clicking teamManagement button from qigSelector\r\n                    ccActionCreator.getMarkSchemeGroupCCs(_this._qigid, _this._questionPaperPartId, true, true);\r\n                    // if the user has the remember-qig option then 'qigOverviewData' will be null\r\n                    // in this case while the user navigates to teammanagement using recent history option,\r\n                    // this value will be null,to avoid this we need to update this value.\r\n                    if (qigStore.instance.getOverviewData) {\r\n                        var that_1 = _this;\r\n                        var openQigPromise = qigSelectorActionCreator.openQIG(_this._qigid, false, true);\r\n                        Promise.Promise.all([changeOperationModePromise, openQigPromise]).then(function (item) {\r\n                            teamManagementActionCreator.openTeamManagement(that_1._examinerRoleId, that_1._qigid, false, true);\r\n                        });\r\n                    }\r\n                    else {\r\n                        var that_2 = _this;\r\n                        var getQIGSelectorDataPromise = qigActionCreator.getQIGSelectorData(_this._qigid, false, false, false, true, false);\r\n                        Promise.Promise.all([getQIGSelectorDataPromise]).then(function (item) {\r\n                            teamManagementActionCreator.openTeamManagement(that_2._examinerRoleId, that_2._qigid, false, true);\r\n                        });\r\n                    }\r\n                    var message = 'Loading TeamManagement from menu  with Close menu event triggered.';\r\n                    message = message + ' Current container => ' +\r\n                        enums.PageContainers[navigationStore.instance.containerPage];\r\n                    // logging menu action in google analytics or application insights based on the configuration\r\n                    new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n                    _this.setState({\r\n                        isOpen: false\r\n                    });\r\n                }\r\n                else {\r\n                    var ccActionCreatorPromise = ccActionCreator.getMarkSchemeGroupCCs(_this._historyItem.qigId, _this._historyItem.questionPaperPartId, true, true);\r\n                    var that_3 = _this;\r\n                    Promise.Promise.all([changeOperationModePromise, ccActionCreatorPromise]).then(function (item) {\r\n                        // Invoke the action creator to Open the QIG for the logged in user\r\n                        var getQIGSelectorDataPromise = qigActionCreator.getQIGSelectorData(that_3._historyItem.qigId, true, false, true, false, true);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * updates details to store\r\n         */\r\n        _this.onQigSelectedFromHistory = function () {\r\n            if (_this.historyNavigationArea === enums.HistoryNavigationArea.StandardisationSetup) {\r\n                // if navigating from history item(ie, marker has navigated to ssu) then set history info in store\r\n                if (_this._historyItem && _this._historyItem.standardisationSetup) {\r\n                    standardisationActionCreator.setStandardisationSetupHistoryInfo(_this._historyItem);\r\n                }\r\n                // Get Standardisation Setup Qig Details\r\n                responseSearchHelper.getStandardisationSetupQigDetails();\r\n                // Navigate to Standardisation setup\r\n                navigationHelper.loadStandardisationSetup();\r\n            }\r\n            else {\r\n                if (!_this._historyItem || _this._failureCode === undefined) {\r\n                    return;\r\n                }\r\n                busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n                // avoid getting worklist data's for these error codes\r\n                switch (_this._failureCode) {\r\n                    case enums.FailureCode.SubordinateExaminerWithdrawn:\r\n                    case enums.FailureCode.HierarchyChanged:\r\n                        teamManagementActionCreator.setTeamManagementHistoryInfo(_this._historyItem, enums.MarkerOperationMode.TeamManagement, _this._failureCode);\r\n                        var message = 'Loading Qigselector from menu as the examiner is ' +\r\n                            'SubordinateExaminerWithdrawn / HierarchyChanged.Close menu event triggered.';\r\n                        message = message + ' Current container => ' +\r\n                            enums.PageContainers[navigationStore.instance.containerPage];\r\n                        // logging menu action in google analytics or application insights based on the configuration\r\n                        new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n                        _this.setState({\r\n                            isOpen: false\r\n                        });\r\n                        return;\r\n                }\r\n                // update the history details to specific stores\r\n                var teamManagementHistoryPromise = teamManagementActionCreator.setTeamManagementHistoryInfo(_this._historyItem, enums.MarkerOperationMode.TeamManagement);\r\n                var that_4 = _this;\r\n                Promise.Promise.all([teamManagementHistoryPromise]).\r\n                    then(function (item) {\r\n                    if (that_4._historyItem.team.currentContainer !== enums.PageContainers.TeamManagement) {\r\n                        // team Management worklist.\r\n                        if (that_4._historyItem.team.selectedTab === enums.TeamManagement.HelpExaminers && cchelper.getCharacteristicValue(ccNames.SeniorExaminerPool, that_4._historyItem.qigId).toLowerCase() === 'true') {\r\n                            // since it from help examiner, this db call is needed for showing change status button in worklist\r\n                            var getHelpExaminerDataPromise = teamManagementActionCreator.GetHelpExminersData(that_4._historyItem.team.supervisorExaminerRoleID, that_4._historyItem.qigId, false, true);\r\n                        }\r\n                        var getQIGSelectorDataPromise1 = qigActionCreator.getQIGSelectorData(that_4._historyItem.qigId, false, false, false, true, false);\r\n                        Promise.Promise.all([getQIGSelectorDataPromise1]).\r\n                            then(function (item) {\r\n                            that_4.onQigLoadedFromHistory();\r\n                        });\r\n                    }\r\n                    else {\r\n                        var message = 'Loading the same container(Team Management) from menu. Close menu event triggered.';\r\n                        message = message + ' Current container => ' +\r\n                            enums.PageContainers[navigationStore.instance.containerPage];\r\n                        // logging menu action in google analytics or application insights based on the configuration\r\n                        new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n                        // Team Management Container.\r\n                        that_4.setState({ isOpen: false });\r\n                        busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.none);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * load details needed for worklist and navigate\r\n         */\r\n        _this.onQigLoadedFromHistory = function () {\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n            responseSearchHelper.openQIGDetails(_this._historyItem.questionPaperPartId, _this._historyItem.qigId, _this._historyItem.team.subordinateExaminerRoleID, dataServiceHelper.canUseCache(), examinerStore.instance.examinerApprovalStatus(_this._historyItem.team.subordinateExaminerRoleID), _this._historyItem.markingMethodId, false, _this._historyItem.isElectronicStandardisationTeamMember);\r\n            // load stamps defined for the selected mark scheme groupId\r\n            stampActionCreator.getStampData(_this._historyItem.qigId, stampStore.instance.stampIdsForSelectedQIG, _this._historyItem.markingMethodId, responseHelper.isEbookMarking, true);\r\n            var message = 'Qig selected from history. Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insights based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            navigationHelper.loadWorklist(true);\r\n            _this.setState({\r\n                isOpen: false\r\n            });\r\n        };\r\n        _this.openTeamManagementFromPopup = function () {\r\n            var message = 'Opening team management from history. Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insights based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            _this.setState({\r\n                isOpen: false\r\n            });\r\n        };\r\n        /**\r\n         * Data Received For Opening the response.\r\n         */\r\n        _this.initiateSearchResponse = function (searchedResponseData) {\r\n            if (searchedResponseData) {\r\n                if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Marking) {\r\n                    if (navigationStore.instance.containerPage === enums.PageContainers.WorkList) {\r\n                        if (!searchedResponseData.isTeamManagement) {\r\n                            _this.openResponseFromWorkList(searchedResponseData);\r\n                        }\r\n                    }\r\n                }\r\n                else if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.TeamManagement) {\r\n                    if (searchedResponseData.isTeamManagement) {\r\n                        if (navigationStore.instance.containerPage === enums.PageContainers.WorkList) {\r\n                            if (qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId !== searchedResponseData.examinerRoleId) {\r\n                                /*\r\n                                   If searched response is not belongs to current marker's worklist type or response mode\r\n                                   then , we have to fetch marker information, worklist type and\r\n                                   candidate meta data to update store values before opening the searched response.\r\n                               */\r\n                                markerInformationActionCreator.GetMarkerInformation(searchedResponseData.examinerRoleId, searchedResponseData.markSchemeGroupId, true, true, searchedResponseData.approvalStatusId);\r\n                                _this.notifyWorklistTypeChange(searchedResponseData);\r\n                            }\r\n                            else {\r\n                                _this.openResponseFromWorkList(searchedResponseData);\r\n                            }\r\n                        }\r\n                        else if (navigationStore.instance.containerPage === enums.PageContainers.TeamManagement) {\r\n                            _this.openResponseFromTeamManagement(searchedResponseData);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                /*\r\n                   If searched response not belongs to current marker's worklist, subordinate's worklist\r\n                   or not available for marking check then Rig not found popup should be shown\r\n                   instead of navigating response screen and hide busy indicator from then menu.\r\n                */\r\n                _this.setState({ isBusy: false });\r\n                searchResponseActionCreator.showOrHideRigNotFoundPopup(true);\r\n            }\r\n        };\r\n        _this.closeMenu = _this.closeMenu.bind(_this);\r\n        _this.navigateToHome = _this.navigateToContainer.bind(_this, enums.PageContainers.QigSelector);\r\n        _this.navigateToMessage = _this.navigateToContainer.bind(_this, enums.PageContainers.Message);\r\n        _this.navigateToAwarding = _this.navigateToContainer.bind(_this, enums.PageContainers.Awarding);\r\n        _this.navigateToLogin = navigationHelper.showLogoutConfirmation.bind(_this);\r\n        _this.navigateToReports = _this.navigateToContainer.bind(_this, enums.PageContainers.Reports);\r\n        _this.setBusyIndicatorProperties(enums.BusyIndicatorInvoker.loadingResponse, false);\r\n        _this.state = { isOpen: false, renderedOn: 0, isBusy: false };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    MenuWrapper.prototype.render = function () {\r\n        var _this = this;\r\n        var busyIndicator = (React.createElement(BusyIndicator, { id: 'response_' + this.busyIndicatorInvoker.toString(), isBusy: this.state.isBusy, key: 'response_' + this.busyIndicatorInvoker.toString(), isMarkingBusy: true, busyIndicatorInvoker: this.busyIndicatorInvoker, doShowDialog: true, showBackgroundScreen: this.showBackgroundScreenOnBusy }));\r\n        var className = classNames('dropdown-wrap header-dropdown nav-options', { 'open': this.state.isOpen });\r\n        return (React.createElement(\"li\", { role: 'menuitem', id: 'menuwrapper', className: className, \"aria-haspopup\": 'true' },\r\n            React.createElement(\"a\", { id: 'menu-button', href: 'javascript:void(0)', title: localeStore.instance.TranslateText('generic.navigation-bar.menu-tooltip'), onClick: this.state.isOpen ? null : function () { _this.props.handleNavigationClick(); }, className: 'menu-button' },\r\n                React.createElement(\"span\", { className: 'relative' },\r\n                    React.createElement(\"span\", { id: 'menu-icon', className: 'sprite-icon hamburger-icon' }),\r\n                    React.createElement(\"span\", { className: 'nav-text' }, localeStore.instance.TranslateText('generic.navigation-bar.menu')))),\r\n            React.createElement(\"div\", { className: 'menu', role: 'menu', \"aria-hidden\": 'true' },\r\n                React.createElement(\"div\", { className: 'menu-wrapper' },\r\n                    React.createElement(\"div\", { className: 'menu-inner' },\r\n                        React.createElement(\"div\", { className: 'left-menu-cols' },\r\n                            React.createElement(\"div\", { className: 'menu-page-block menu-page-nav' },\r\n                                React.createElement(\"h2\", { id: 'menu-header' }, localeStore.instance.TranslateText('generic.navigation-bar.menu')),\r\n                                React.createElement(\"ul\", { className: 'menu-holder quick-menu' },\r\n                                    React.createElement(MenuLink, { id: 'menuLink_Home', key: 'menuLink_Home_key', menuLinkName: localeStore.instance.TranslateText('generic.navigation-menu.home'), onMenuLinkClick: this.navigateToHome, isVisible: true }),\r\n                                    React.createElement(MenuLink, { id: 'menuLink_Reports', key: 'menuLink_Reports_key', menuLinkName: localeStore.instance.TranslateText('generic.navigation-menu.reports'), onMenuLinkClick: this.navigateToReports, isVisible: this.canRenderReports }),\r\n                                    React.createElement(MenuLink, { id: 'menuLink_Inbox', key: 'menuLink_Inbox_key', menuLinkName: localeStore.instance.TranslateText('messaging.message-lists.top-panel.inbox-tab'), onMenuLinkClick: this.navigateToMessage, isVisible: true }),\r\n                                    React.createElement(MenuLink, { id: 'menuLink_Awarding', key: 'menuLink_Awarding_key', menuLinkName: localeStore.instance.TranslateText('awarding.generic.awarding'), onMenuLinkClick: this.navigateToAwarding, isVisible: awardingStore.instance.hasAwardingAccess }),\r\n                                    React.createElement(MenuLink, { id: 'menuLink_Logout', key: 'menuLink_Logout_key', menuLinkName: localeStore.instance.TranslateText('generic.user-menu.profile-section.logout-button'), onMenuLinkClick: this.navigateToLogin, isVisible: true }))),\r\n                            this.searchResponse),\r\n                        this.recentHistory)),\r\n                React.createElement(\"a\", { href: 'javascript:void(0)', id: 'menu-close', className: 'menu-close', onClick: this.closeMenu, title: localeStore.instance.TranslateText('generic.navigation-menu.close') }, localeStore.instance.TranslateText('generic.navigation-menu.close'))),\r\n            busyIndicator));\r\n    };\r\n    /**\r\n     * Component will Unmount\r\n     */\r\n    MenuWrapper.prototype.componentWillUnmount = function () {\r\n        navigationStore.instance.removeListener(navigationStore.NavigationStore.MENU_VISIBILITY_EVENT, this.menuVisibility);\r\n        worklistStore.instance.removeListener(worklistStore.WorkListStore.WORKLIST_HISTORY_INFO_UPDATED, this.loadRecentWorklist);\r\n        qigStore.instance.removeListener(qigStore.QigStore.QIG_SELECTED_FROM_HISTORY_EVENT, this.onQigSelectedFromHistory);\r\n        teamManagementStore.instance.removeListener(teamManagementStore.TeamManagementStore.TEAM_MANAGEMENT_EXAMINER_VALIDATED_EVENT, this.examinerValidated);\r\n        teamManagementStore.instance.removeListener(teamManagementStore.TeamManagementStore.OPEN_TEAM_MANAGEMENT_EVENT, this.openTeamManagementFromPopup);\r\n        responseStore.instance.removeListener(responseStore.ResponseStore.RESPONSE_SEARCH_DATA_RECEIVED_EVENT, this.initiateSearchResponse);\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    MenuWrapper.prototype.componentDidMount = function () {\r\n        navigationStore.instance.addListener(navigationStore.NavigationStore.MENU_VISIBILITY_EVENT, this.menuVisibility);\r\n        worklistStore.instance.addListener(worklistStore.WorkListStore.WORKLIST_HISTORY_INFO_UPDATED, this.loadRecentWorklist);\r\n        qigStore.instance.addListener(qigStore.QigStore.QIG_SELECTED_FROM_HISTORY_EVENT, this.onQigSelectedFromHistory);\r\n        teamManagementStore.instance.addListener(teamManagementStore.TeamManagementStore.TEAM_MANAGEMENT_EXAMINER_VALIDATED_EVENT, this.examinerValidated);\r\n        teamManagementStore.instance.addListener(teamManagementStore.TeamManagementStore.OPEN_TEAM_MANAGEMENT_EVENT, this.openTeamManagementFromPopup);\r\n        responseStore.instance.addListener(responseStore.ResponseStore.RESPONSE_SEARCH_DATA_RECEIVED_EVENT, this.initiateSearchResponse);\r\n    };\r\n    /**\r\n     * used to navigate to particular container\r\n     */\r\n    MenuWrapper.prototype.navigateToContainer = function (container) {\r\n        if (this.doNavigateContainer(container)) {\r\n            if (container !== enums.PageContainers.Response) {\r\n                markingActionCreator.setMarkingInProgress(false);\r\n            }\r\n            // resetting the marking check mode on menu item click\r\n            markingCheckActionCreator.toggleMarkingCheckMode(false);\r\n            // handle offline when try to navigate from menu\r\n            if (!applicationStore.instance.isOnline) {\r\n                applicationActionCreator.checkActionInterrupted();\r\n            }\r\n            else {\r\n                switch (container) {\r\n                    case enums.PageContainers.QigSelector:\r\n                        navigationHelper.loadQigSelector();\r\n                        break;\r\n                    case enums.PageContainers.Message:\r\n                        navigationHelper.loadMessagePage();\r\n                        break;\r\n                    case enums.PageContainers.Login:\r\n                        navigationHelper.loadLoginPage();\r\n                        break;\r\n                    case enums.PageContainers.Reports:\r\n                        navigationHelper.loadReportsPage();\r\n                        break;\r\n                    case enums.PageContainers.Awarding:\r\n                        navigationHelper.loadAwardingPage(true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var message = 'Selected the same container ' +\r\n                enums.PageContainers[container].toString() +\r\n                ' from menu with Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insight based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            this.setState({\r\n                isOpen: false\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * return false if current and navigateTo conatainer are same\r\n     */\r\n    MenuWrapper.prototype.doNavigateContainer = function (navigateToContainer) {\r\n        var _currentContainer = enums.PageContainers.None;\r\n        _currentContainer = navigationStore.instance.containerPage;\r\n        return navigateToContainer !== _currentContainer;\r\n    };\r\n    Object.defineProperty(MenuWrapper.prototype, \"recentHistory\", {\r\n        get: function () {\r\n            var _recentHistory = Immutable.List();\r\n            var historyItems = [];\r\n            navigationStore.instance.getRecentHistory.forEach(function (qigInHistory) {\r\n                if (qigStore.instance.HiddenQIGs.indexOf(qigInHistory.qigId) === -1) {\r\n                    var qig = qigStore.instance.getQigSummary(qigInHistory.qigId);\r\n                    if (qigStore.instance.getOverviewData.hasAnyQigWithHideInOverviewWhenNoWorkCCOn\r\n                        && qig.isHideInOverviewWhenNoWorkCCON) {\r\n                        qigInHistory.myMarking = qig.isMarkingEnabled ? qigInHistory.myMarking : undefined;\r\n                        qigInHistory.isMarkingEnabled = qig.isMarkingEnabled;\r\n                        qigInHistory.team = qig.isTeamManagementEnabled ? qigInHistory.team : undefined;\r\n                        qigInHistory.isTeamManagementEnabled = qig.isTeamManagementEnabled;\r\n                        qigInHistory.isStandardisationSetupEnabled = (qig.isStandardisationSetupButtonVisible ||\r\n                            qig.isStandardisationSetupLinkVisible);\r\n                        qigInHistory.standardisationSetup = (qigInHistory.isStandardisationSetupEnabled ?\r\n                            qigInHistory.standardisationSetup : undefined);\r\n                    }\r\n                    historyItems.push(qigInHistory);\r\n                }\r\n            });\r\n            _recentHistory = Immutable.List(historyItems);\r\n            var that = this;\r\n            var recentItems = _recentHistory.map(function (recentItem) {\r\n                return (React.createElement(MenuLink, { menuString: recentItem.qigName, onMyMarkingClick: recentItem.myMarking ?\r\n                        that.navigateToRecentHistoryMyMarking.bind(that, recentItem, null, null) :\r\n                        recentItem.isMarkingEnabled ?\r\n                            that.navigateToRecentHistoryMyMarking.bind(that, null, recentItem.qigId, recentItem.questionPaperPartId) :\r\n                            null, onTeamManagementClick: recentItem.team ?\r\n                        that.navigateToRecentHistoryTeamManagement.bind(that, recentItem, null, null, null) :\r\n                        recentItem.isTeamManagementEnabled ?\r\n                            that.navigateToRecentHistoryTeamManagement.bind(that, null, recentItem.qigId, recentItem.questionPaperPartId, recentItem.examinerRoleId) :\r\n                            null, onStandardisationSetupClick: recentItem.standardisationSetup ?\r\n                        that.navigateToRecentHistoryStandardisationSetup.bind(that, recentItem, null) :\r\n                        recentItem.isStandardisationSetupEnabled ?\r\n                            that.navigateToRecentHistoryStandardisationSetup.bind(that, null, recentItem.qigId) :\r\n                            null, isRecentHistory: true, selectedLanguage: that.props.selectedLanguage, recentItem: recentItem, id: 'menuLink_' + recentItem.qigId, key: 'menuLink_key_' + recentItem.qigId }));\r\n            });\r\n            return (React.createElement(\"div\", { className: 'right-menu-cols' },\r\n                React.createElement(\"div\", { className: 'menu-page-block menu-page-recent' },\r\n                    React.createElement(\"h2\", { id: 'recent' }, localeStore.instance.TranslateText('generic.navigation-menu.recent')),\r\n                    React.createElement(\"ul\", { className: 'menu-holder recent-items', id: 'menuHolder' }, recentItems))));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MenuWrapper.prototype, \"searchResponse\", {\r\n        get: function () {\r\n            var searchPanel = this.isSearchPanelVisible() ?\r\n                (React.createElement(MenuSearchPanel, { id: 'search-panel', key: 'search-panel-key', onSearch: this.onSearch, onSearchClick: this.onSearchClick, qigName: this.getFormattedQIGName(), searchText: this.searchText })) : null;\r\n            return searchPanel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validate the entered search text.\r\n     */\r\n    MenuWrapper.prototype.isValidSearchText = function (searchText) {\r\n        var displayId = Math.floor(Number(searchText));\r\n        return displayId !== Infinity && String(displayId) === searchText && displayId >= 0;\r\n    };\r\n    /**\r\n     * navigate to worklist based on history item\r\n     */\r\n    MenuWrapper.prototype.navigateToRecentHistoryMyMarking = function (_historyItem, _qigId, _questionPaperPartId) {\r\n        /*Handles the scenario where user is offline on clicking on history link in menu*/\r\n        if (!applicationStore.instance.isOnline) {\r\n            applicationActionCreator.checkActionInterrupted();\r\n        }\r\n        else {\r\n            // Menu history navigation to my marking\r\n            this.historyNavigationArea = enums.HistoryNavigationArea.Marking;\r\n            this._failureCode = undefined;\r\n            // response is getting closed, inform modules.\r\n            worklistActionCreator.responseClosed(true);\r\n            //bookmarkActionCreator.bookmarkAdded(null);\r\n            // resetting the marking check mode on menu item click\r\n            markingCheckActionCreator.toggleMarkingCheckMode(false);\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n            var message = 'Selected My Marking from menu with Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insights based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            this.setState({ isOpen: false });\r\n            var that_5 = this;\r\n            this._historyItem = JSON.parse(JSON.stringify(_historyItem));\r\n            var qigId_1 = _qigId > 0 ? _qigId : this._historyItem.qigId;\r\n            // set the marker operation mode as Marking\r\n            userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.Marking, false, true);\r\n            // Invoke the action creator to Open the QIG\r\n            var getQIGSelectorDataPromise = qigActionCreator.getQIGSelectorData(qigId_1, true, false, true, false, true);\r\n            Promise.Promise.all([\r\n                getQIGSelectorDataPromise\r\n            ]).then(function (result) {\r\n                var selectedQIGForMarkerOperation = qigStore.instance.selectedQIGForMarkerOperation;\r\n                // The Qigstore become undefined when the marker is withrawn in background,.\r\n                // Need to show withdrawn poup while clicking marking link from menu.\r\n                if (selectedQIGForMarkerOperation === undefined) {\r\n                    // Load the worklist while navigating to worklist from inbox through menu.\r\n                    if (navigationStore.instance.containerPage === enums.PageContainers.Message) {\r\n                        navigationHelper.loadWorklist(true);\r\n                    }\r\n                    // upadte examiner store , and withdrawn poup will be displyed from footer.\r\n                    markerInformationActionCreator.\r\n                        GetMarkerInformation(that_5._historyItem.examinerRoleId, qigId_1, true, false, examinerStore.instance.examinerApprovalStatus(that_5._historyItem.examinerRoleId));\r\n                    return;\r\n                }\r\n                responseSearchHelper.openQIGDetails(selectedQIGForMarkerOperation.questionPaperPartId, selectedQIGForMarkerOperation.markSchemeGroupId, selectedQIGForMarkerOperation.examinerRoleId, dataServiceHelper.canUseCache(), examinerStore.instance.examinerApprovalStatus(selectedQIGForMarkerOperation.examinerRoleId), selectedQIGForMarkerOperation.markingMethod, false, selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember);\r\n                // load stamps defined for the selected mark scheme groupId\r\n                stampActionCreator.getStampData(qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId, stampStore.instance.stampIdsForSelectedQIG, qigStore.instance.selectedQIGForMarkerOperation.markingMethod, responseHelper.isEbookMarking, true);\r\n                // Calling the helper method to format the QIG Name\r\n                var currQigName = stringFormatHelper.formatAwardingBodyQIG(selectedQIGForMarkerOperation.markSchemeGroupName, selectedQIGForMarkerOperation.assessmentCode, selectedQIGForMarkerOperation.sessionName, selectedQIGForMarkerOperation.componentId, selectedQIGForMarkerOperation.questionPaperName, selectedQIGForMarkerOperation.assessmentName, selectedQIGForMarkerOperation.componentName, stringFormatHelper.getOverviewQIGNameFormat());\r\n                // logging qig selection in google analytics or application insights based on the configuration.\r\n                new auditLoggingHelper().logHelper.logEventOnQigSelection(currQigName);\r\n                if (that_5._historyItem) {\r\n                    // update the worklist store before navigation\r\n                    if (that_5._historyItem.myMarking.worklistType === enums.WorklistType.simulation\r\n                        && selectedQIGForMarkerOperation.standardisationSetupComplete) {\r\n                        that_5._historyItem.myMarking.worklistType = enums.WorklistType.none;\r\n                    }\r\n                    worklistActionCreator.setWorklistHistoryInfo(that_5._historyItem, enums.MarkerOperationMode.Marking);\r\n                }\r\n                navigationHelper.loadWorklist(true);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * navigate to team Management based on history item\r\n     */\r\n    MenuWrapper.prototype.navigateToRecentHistoryTeamManagement = function (_historyItem, _qigid, _questionPaperPartId, _examinerRoleId) {\r\n        /*Handles the scenario where user is offline on clicking on history link in menu*/\r\n        if (!applicationStore.instance.isOnline) {\r\n            applicationActionCreator.checkActionInterrupted();\r\n        }\r\n        else {\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n            // Menu history navigation to team management\r\n            this.historyNavigationArea = enums.HistoryNavigationArea.TeamManagement;\r\n            var message = 'Selected Team Management from menu with Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insights based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            this.setState({ isOpen: false });\r\n            // resetting the marking check mode on menu item click\r\n            markingCheckActionCreator.toggleMarkingCheckMode(false);\r\n            this._historyItem = _historyItem ? JSON.parse(JSON.stringify(_historyItem)) : null;\r\n            this._qigid = _qigid ? _qigid : 0;\r\n            this._questionPaperPartId = _questionPaperPartId ? _questionPaperPartId : 0;\r\n            this._examinerRoleId = _examinerRoleId ? _examinerRoleId : 0;\r\n            if (this._historyItem !== null) {\r\n                // clear my-team data and help-examiner data from cache\r\n                this.storageAdapterHelper.clearTeamDataCache(this._historyItem.team.supervisorExaminerRoleID, this._historyItem.qigId);\r\n                this.storageAdapterHelper.clearTeamDataCache(this._historyItem.team.supervisorExaminerRoleID, this._historyItem.qigId, true);\r\n                var examinerValidationArea = enums.ExaminerValidationArea.MyTeam;\r\n                if (this._historyItem.team.selectedTab === enums.TeamManagement.HelpExaminers &&\r\n                    this._historyItem.team.currentContainer === enums.PageContainers.WorkList) {\r\n                    examinerValidationArea = enums.ExaminerValidationArea.HelpExaminer;\r\n                }\r\n                // validates the examiner\r\n                teamManagementActionCreator.teamManagementExaminerValidation(this._historyItem.qigId, this._historyItem.team.supervisorExaminerRoleID, this._historyItem.team.subordinateExaminerRoleID, this._historyItem.team.subordinateExaminerID, examinerValidationArea, false);\r\n            }\r\n            else {\r\n                teamManagementActionCreator.teamManagementExaminerValidation(this._qigid);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MenuWrapper.prototype, \"canRenderReports\", {\r\n        /**\r\n         * Gets the reports in menu according to the login.\r\n         */\r\n        get: function () {\r\n            return loginSession.IS_FAMILIARISATION_LOGIN === true ? false : loginStore.instance.isReportsVisible;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get Formatted QIG Name\r\n     */\r\n    MenuWrapper.prototype.getFormattedQIGName = function () {\r\n        if (qigStore.instance.selectedQIGForMarkerOperation) {\r\n            return localeStore.instance.TranslateText('search-response.search-response-content-appender') + ' ' +\r\n                stringFormatHelper.formatAwardingBodyQIG(qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupName, qigStore.instance.selectedQIGForMarkerOperation.assessmentCode, qigStore.instance.selectedQIGForMarkerOperation.sessionName, qigStore.instance.selectedQIGForMarkerOperation.componentId, qigStore.instance.selectedQIGForMarkerOperation.questionPaperName, qigStore.instance.selectedQIGForMarkerOperation.assessmentName, qigStore.instance.selectedQIGForMarkerOperation.componentName, stringFormatHelper.getOverviewQIGNameFormat());\r\n        }\r\n    };\r\n    /**\r\n     * Check whether the search panel is visible or not.\r\n     */\r\n    MenuWrapper.prototype.isSearchPanelVisible = function () {\r\n        if ((userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Marking ||\r\n            userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.TeamManagement) &&\r\n            navigationStore.instance.containerPage !== enums.PageContainers.QigSelector &&\r\n            navigationStore.instance.containerPage !== enums.PageContainers.Message &&\r\n            navigationStore.instance.containerPage !== enums.PageContainers.Awarding &&\r\n            navigationStore.instance.containerPage !== enums.PageContainers.StandardisationSetup &&\r\n            navigationStore.instance.containerPage !== enums.PageContainers.Reports) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Method which sets the busy indicator properties\r\n     * @param busyIndicatorInvoker\r\n     * @param showBackgroundScreenOnBusy\r\n     */\r\n    MenuWrapper.prototype.setBusyIndicatorProperties = function (busyIndicatorInvoker, showBackgroundScreenOnBusy) {\r\n        this.busyIndicatorInvoker = busyIndicatorInvoker;\r\n        this.showBackgroundScreenOnBusy = showBackgroundScreenOnBusy;\r\n    };\r\n    /**\r\n     * Navigate to standardisation setup from recent history\r\n     * @param _historyItem\r\n     * @param _qigId\r\n     */\r\n    MenuWrapper.prototype.navigateToRecentHistoryStandardisationSetup = function (_historyItem, _qigId) {\r\n        /*Handles the scenario where user is offline on clicking on history link in menu*/\r\n        if (!applicationStore.instance.isOnline) {\r\n            applicationActionCreator.checkActionInterrupted();\r\n        }\r\n        else {\r\n            // Menu history navigation to my standardisation setup\r\n            this.historyNavigationArea = enums.HistoryNavigationArea.StandardisationSetup;\r\n            this._failureCode = undefined;\r\n            // resetting the marking check mode on menu item click\r\n            markingCheckActionCreator.toggleMarkingCheckMode(false);\r\n            // busy indicator will be removed\r\n            // a. when navigator referesh while navigating between different areas \r\n            // b. when navigating from one SSU to another SSU , it will be reset by STANDARDISATION_RESPONSE_DATA_UPDATED_EVENT\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.loadingHistoryDetails);\r\n            var message = 'Selected Standardisation setup from menu with Close menu event triggered.';\r\n            message = message + ' Current container => ' +\r\n                enums.PageContainers[navigationStore.instance.containerPage];\r\n            // logging menu action in google analytics or application insights based on the configuration\r\n            new auditLoggingHelper().logHelper.logEventOnMenuAction(message);\r\n            this.setState({ isOpen: false });\r\n            this._historyItem = JSON.parse(JSON.stringify(_historyItem));\r\n            var qigId = _qigId > 0 ? _qigId : this._historyItem.qigId;\r\n            // set the marker operation mode as Marking\r\n            userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.StandardisationSetup, false, true);\r\n            // Invoke the action creator to Open the QIG\r\n            qigActionCreator.getQIGSelectorData(qigId, true, false, true, false, true);\r\n        }\r\n    };\r\n    /**\r\n     * Open search response from worklist\r\n     * @param searchedResponseData\r\n     */\r\n    MenuWrapper.prototype.openResponseFromWorkList = function (searchedResponseData) {\r\n        var selectedResponseWorkListType = responseSearchHelper.getWorklistTypeByMarkingMode(searchedResponseData.markingModeId, searchedResponseData.isDirectedRemark, searchedResponseData.isAtypical);\r\n        if (searchedResponseData.responseMode === worklistStore.instance.getResponseMode\r\n            && !worklistStore.instance.isMarkingCheckMode\r\n            && worklistStore.instance.currentWorklistType === selectedResponseWorkListType\r\n            && !worklistStore.instance.isMarkingCheckWorklistAccessPresent) {\r\n            /*\r\n               If searched response's worklist type and response mode is same as current worklist type, response mode\r\n               and also the search response not belongs to marking check then we have to open response direclty\r\n               without fetching worklist type and related store values.\r\n            */\r\n            responseHelper.openResponse(parseInt(searchedResponseData.displayId), enums.ResponseNavigation.specific, searchedResponseData.responseMode, searchedResponseData.markGroupId, enums.ResponseViewMode.zoneView);\r\n            markSchemeHelper.getMarks(parseInt(searchedResponseData.displayId), searchedResponseData.markingModeId);\r\n            eCourseworkHelper.fetchECourseWorkCandidateScriptMetadata(parseInt(searchedResponseData.displayId));\r\n        }\r\n        else {\r\n            /*\r\n               If searched response is not belongs to current marker's worklist type or response mode\r\n               or it is a marking check response then , we have to fetch worklist type and\r\n               candidate meta data to update store values before opening the searched response.\r\n            */\r\n            this.notifyWorklistTypeChange(searchedResponseData);\r\n        }\r\n    };\r\n    /**\r\n     * Open search response from team management\r\n     * @param searchedResponseData\r\n     */\r\n    MenuWrapper.prototype.openResponseFromTeamManagement = function (searchedResponseData) {\r\n        var canUseCache = searchedResponseData.examinerId === searchedResponseData.loggedInExaminerId &&\r\n            qigStore.instance.selectedQIGForMarkerOperation !== undefined;\r\n        /*\r\n           If searched response available for subordinate's worklist then,\r\n           the search will be applicable only for selected qig, hence no need to fetch qig details before\r\n           opening subordinate response. But we have to fetch worklist type, candidate meta data and update store\r\n           values before navigating subordinate response.\r\n       */\r\n        responseSearchHelper.openQIGDetails(searchedResponseData.questionPaperId, searchedResponseData.markSchemeGroupId, searchedResponseData.examinerRoleId, canUseCache, searchedResponseData.approvalStatusId, searchedResponseData.markingMethodId, true, qigStore.instance.selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember, true);\r\n    };\r\n    /**\r\n     * Notify worklist type change\r\n     * @param searchedResponseData\r\n     */\r\n    MenuWrapper.prototype.notifyWorklistTypeChange = function (searchedResponseData) {\r\n        var selectedResponseWorkListType = responseSearchHelper.getWorklistTypeByMarkingMode(searchedResponseData.markingModeId, searchedResponseData.isDirectedRemark, searchedResponseData.isAtypical);\r\n        worklistActionCreator.notifyWorklistTypeChange(searchedResponseData.markSchemeGroupId, searchedResponseData.examinerRoleId, searchedResponseData.questionPaperId, selectedResponseWorkListType, searchedResponseData.responseMode, searchedResponseData.remarkRequestType, searchedResponseData.isDirectedRemark, qigStore.instance.selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember);\r\n    };\r\n    return MenuWrapper;\r\n}(pureRenderComponent));\r\nmodule.exports = MenuWrapper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 355:
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./src/components/response/responsenavigation.tsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar stringHelper = __webpack_require__(/*! ../../utility/generic/stringhelper */ 254);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar keyCodes = __webpack_require__(/*! ../../utility/keyboardacess/keycodes */ 335);\r\nvar moduleKeyHandler = __webpack_require__(/*! ../../utility/generic/modulekeyhandler */ 323);\r\nvar modulekeys = __webpack_require__(/*! ../../utility/generic/modulekeys */ 318);\r\nvar keyDownHelper = __webpack_require__(/*! ../../utility/generic/keydownhelper */ 258);\r\nvar markingActionCreator = __webpack_require__(/*! ../../actions/marking/markingactioncreator */ 246);\r\nvar markingStore = __webpack_require__(/*! ../../stores/marking/markingstore */ 236);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar constants = __webpack_require__(/*! ../utility/constants */ 241);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar markingHelper = __webpack_require__(/*! ../../utility/markscheme/markinghelper */ 267);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar submitStore = __webpack_require__(/*! ../../stores/submit/submitstore */ 293);\r\nvar worklistActionCreator = __webpack_require__(/*! ../../actions/worklist/worklistactioncreator */ 261);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\nvar navigationHelper = __webpack_require__(/*! ../utility/navigation/navigationhelper */ 248);\r\nvar busyIndicatorActionCreator = __webpack_require__(/*! ../../actions/busyindicator/busyindicatoractioncreator */ 279);\r\nvar qualityfeedbackHelper = __webpack_require__(/*! ../../utility/qualityfeedback/qualityfeedbackhelper */ 309);\r\nvar submitHelper = __webpack_require__(/*! ../utility/submit/submithelper */ 282);\r\nvar markSchemeHelper = __webpack_require__(/*! ../../utility/markscheme/markschemehelper */ 276);\r\nvar responseActionCreator = __webpack_require__(/*! ../../actions/response/responseactioncreator */ 257);\r\nvar markByAnnotationHelper = __webpack_require__(/*! ../utility/marking/markbyannotationhelper */ 334);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar loginStore = __webpack_require__(/*! ../../stores/login/loginstore */ 286);\r\nvar responseHelper = __webpack_require__(/*! ../utility/responsehelper/responsehelper */ 249);\r\nvar TagList = __webpack_require__(/*! ./responsescreen/taglist */ 313);\r\nvar tagStore = __webpack_require__(/*! ../../stores/tags/tagstore */ 331);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar awardingStore = __webpack_require__(/*! ../../stores/awarding/awardingstore */ 270);\r\nvar standardisationSetupStore = __webpack_require__(/*! ../../stores/standardisationsetup/standardisationsetupstore */ 237);\r\n/**\r\n * React component for Response navigation.\r\n */\r\nvar ResponseNavigation = /** @class */ (function (_super) {\r\n    __extends(ResponseNavigation, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function ResponseNavigation(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._boundHandleKeyDown = null;\r\n        _this.isResponseNavigationArrowClicked = false;\r\n        /**\r\n         * Go to another response after saving mark if there is any\r\n         */\r\n        _this.navigateAwayFromResponse = function (navigationFrom) {\r\n            if (markingStore.instance.navigateTo === enums.SaveAndNavigate.toResponse) {\r\n                /** For response auto navigation when a response gets 100% marked, the responseNavigationDirection will get undefined  */\r\n                if (markingStore.instance.currentResponseMarkingProgress === 100 && _this.responseNavigationDirection === undefined\r\n                    && navigationFrom !== enums.ResponseNavigation.markScheme) {\r\n                    _this.props.moveCallback(enums.ResponseNavigation.next);\r\n                }\r\n                else {\r\n                    if (!_this.isResponseNavigationArrowClicked) {\r\n                        /** If it is navigating from markscheme then ,set the isNavigationThroughMarkScheme as markScheme  */\r\n                        markingActionCreator.setNavigationThroughMarkscheme(enums.ResponseNavigation.markScheme);\r\n                        if (navigationFrom === enums.ResponseNavigation.markScheme &&\r\n                            !markSchemeHelper.isNextResponseAvailable) {\r\n                            _this.responseNavigationDirection = enums.ResponseNavigation.first;\r\n                        }\r\n                        else if (navigationFrom === enums.ResponseNavigation.markScheme) {\r\n                            _this.responseNavigationDirection = enums.ResponseNavigation.next;\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.isResponseNavigationArrowClicked = false;\r\n                    }\r\n                    _this.props.moveCallback(_this.responseNavigationDirection);\r\n                }\r\n            }\r\n            else {\r\n                //reset the isResponseNavigationArrowClicked when navigate to current response view\r\n                _this.isResponseNavigationArrowClicked = false;\r\n                /** Set the isNavigationThroughMarkScheme as None ,when we navigate to (inbox,worklist,etc) other than response. */\r\n                markingActionCreator.setNavigationThroughMarkscheme(enums.ResponseNavigation.none);\r\n            }\r\n        };\r\n        /**\r\n         * Navigation of the response after submitting the response from markscheme\r\n         */\r\n        _this.navigateToNextResponseAfterSubmit = function (submittedMarkGroupIds, selectedDisplayId, isFromMarkScheme) {\r\n            // If Marker got withdrawn during the actions. Skip the activities.\r\n            if (qigStore.instance.selectedQIGForMarkerOperation === undefined) {\r\n                return;\r\n            }\r\n            var worklistNavigationRequired = false;\r\n            _this.isWorkListDataRefreshedAfterSubmit = false;\r\n            if (isFromMarkScheme) {\r\n                if (submitStore.instance.getSubmitResponseReturn.hasQualityFeedbackOutstanding) {\r\n                    worklistNavigationRequired = true;\r\n                }\r\n                else {\r\n                    var worklistType = submitStore.instance.getCurrentWorklistType;\r\n                    if ((submitStore.instance.getCurrentWorklistType === enums.WorklistType.standardisation\r\n                        || submitStore.instance.getCurrentWorklistType === enums.WorklistType.secondstandardisation)) {\r\n                        if (submitStore.instance.getSubmitResponseReturn.examinerApprovalStatus === enums.ExaminerApproval.Approved) {\r\n                            // Marker Got Approved during submission. Message is displayed from worklist component helper.\r\n                            // Set The new worklist type as Live and navigate\r\n                            worklistType = enums.WorklistType.live;\r\n                            worklistNavigationRequired = true;\r\n                        }\r\n                    }\r\n                    // Clear the marks and annotations if needed for Reloading the DefinitiveMarks\r\n                    submitHelper.clearMarksAndAnnotations(submittedMarkGroupIds);\r\n                    // If the marker having more than 1 responses in his worklist and he got approved with the first std response,\r\n                    // Publish new marking mode event. To change marking mode to live\r\n                    if (worklistNavigationRequired ||\r\n                        worklistStore.instance.isNextResponseAvailable(selectedDisplayId)\r\n                            && !submitStore.instance.isExaminerApprovalStatusChanged) {\r\n                        var responseMode = enums.ResponseMode.open;\r\n                        var markSchemeGroupId = qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId;\r\n                        var examinerRoleId = qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId;\r\n                        var questionPaperPartId = qigStore.instance.selectedQIGForMarkerOperation.questionPaperPartId;\r\n                        var remarkRequestType = worklistStore.instance.getRemarkRequestType;\r\n                        var isDirectedRemark = worklistStore.instance.isDirectedRemark;\r\n                        worklistActionCreator.notifyWorklistTypeChange(markSchemeGroupId, examinerRoleId, questionPaperPartId, worklistType, responseMode, remarkRequestType, isDirectedRemark, qigStore.instance.selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember, false);\r\n                        _this.isWorkListDataRefreshedAfterSubmit = true;\r\n                    }\r\n                    else {\r\n                        worklistNavigationRequired = true;\r\n                    }\r\n                }\r\n                if (worklistNavigationRequired) {\r\n                    navigationHelper.loadWorklist();\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Worklist data changed.\r\n         */\r\n        _this.workListDataChanged = function () {\r\n            if (_this.isWorkListDataRefreshedAfterSubmit) {\r\n                _this.isWorkListDataRefreshedAfterSubmit = false;\r\n                _this.navigateResponse(enums.ResponseNavigation.next, true);\r\n            }\r\n        };\r\n        _this._boundHandleKeyDown = _this.handleResponseNavigation.bind(_this, null);\r\n        _this.handlePreviousResponseNavigation = _this.handleResponseNavigation.bind(_this, enums.ResponseNavigation.previous);\r\n        _this.handleNextResponseNavigation = _this.handleResponseNavigation.bind(_this, enums.ResponseNavigation.next);\r\n        _this.workListDataChanged = _this.workListDataChanged.bind(_this);\r\n        _this.markByAnnotationHelper = new markByAnnotationHelper();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    ResponseNavigation.prototype.render = function () {\r\n        var tags = tagStore.instance.tags;\r\n        var selectedTag = markerOperationModeFactory.operationMode.getTagId(responseStore.instance.selectedDisplayId.toString());\r\n        return (React.createElement(\"div\", { className: 'response-header' },\r\n            React.createElement(\"div\", { className: 'response-header-inner' },\r\n                this.renderResponseNavigationButton(enums.ResponseNavigation.previous),\r\n                React.createElement(\"div\", { className: 'response-title' },\r\n                    React.createElement(\"div\", { id: 'header1', className: 'response-id' },\r\n                        React.createElement(\"h1\", { className: 'reponse-id-label' }, this.setResponseHeaderText()),\r\n                        (selectedTag === undefined) ? null :\r\n                            React.createElement(TagList, { selectedTagId: selectedTag, tagList: tags, selectedLanguage: this.props.selectedLanguage, id: 'tags', key: 'tag_key', renderedOn: Date.now(), isESResponse: markerOperationModeFactory.operationMode.isStandardisationSetupMode, markingMode: markerOperationModeFactory.operationMode.isStandardisationSetupMode ?\r\n                                    enums.MarkingMode.Pre_ES_TeamStandardisation : undefined })),\r\n                    !teamManagementStore.instance.isRedirectFromException ?\r\n                        React.createElement(\"div\", { id: 'header2', className: 'response-position' }, this.setResponseSubHeaderText()) : null),\r\n                this.renderResponseNavigationButton(enums.ResponseNavigation.next))));\r\n    };\r\n    /**\r\n     * Method to set the Response sub header text as per the worklist type\r\n     */\r\n    ResponseNavigation.prototype.setResponseSubHeaderText = function () {\r\n        var responseHeader;\r\n        if (markerOperationModeFactory.operationMode.isAwardingMode) {\r\n            responseHeader = stringHelper.format(localeStore.instance.TranslateText('awarding.response-data.candidateno'), [awardingStore.instance.selectedCandidateData.centreCandidateNo]);\r\n        }\r\n        else if (markerOperationModeFactory.operationMode.isStandardisationSetupMode) {\r\n            switch (standardisationSetupStore.instance.selectedStandardisationSetupWorkList) {\r\n                case enums.StandardisationSetup.SelectResponse:\r\n                    if (standardisationSetupStore.instance.selectedTabInSelectResponse\r\n                        === enums.StandardisationSessionTab.CurrentSession) {\r\n                        responseHeader = stringHelper.format(localeStore.instance.TranslateText('marking.response.navigation-bar.script-position'), [this.props.currentResponse.toString(), this.props.totalResponses.toString(), this.props.centreId]);\r\n                    }\r\n                    else {\r\n                        responseHeader = stringHelper.format(localeStore.instance.TranslateText('marking.response.navigation-bar.response-position-in-worklist'), [this.props.currentResponse.toString(), this.props.totalResponses.toString()]);\r\n                    }\r\n                    break;\r\n                case enums.StandardisationSetup.ClassifiedResponse:\r\n                    var responseHeaderDetail = standardisationSetupStore.instance.getClassifiedResponseHeaderDetail(this.props.responseId);\r\n                    responseHeader = stringHelper.format(localeStore.instance.TranslateText('marking.response.navigation-bar.classified-response-position-in-worklist'), [responseHeaderDetail.currentPosition.toString(),\r\n                        responseHeaderDetail.classifiedWorklistCountByMarkingMode.toString()]);\r\n                    break;\r\n                default:\r\n                    responseHeader = stringHelper.format(localeStore.instance.TranslateText('marking.response.navigation-bar.response-position-in-worklist'), [this.props.currentResponse.toString(), this.props.totalResponses.toString()]);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            responseHeader = stringHelper.format(localeStore.instance.TranslateText('marking.response.navigation-bar.response-position-in-worklist'), [this.props.currentResponse.toString(), this.props.totalResponses.toString()]);\r\n        }\r\n        return responseHeader;\r\n    };\r\n    /**\r\n     * Method to set the Response header text as per the worklist type\r\n     */\r\n    ResponseNavigation.prototype.setResponseHeaderText = function () {\r\n        var workListType = worklistStore.instance.currentWorklistType;\r\n        var markingMode = worklistStore.instance.getMarkingModeByWorkListType(workListType);\r\n        if (standardisationSetupStore.instance.isSelectResponsesWorklist\r\n            || standardisationSetupStore.instance.isSelectedResponsePreviousSessionWorklist) {\r\n            return ((localeStore.instance.TranslateText('marking.worklist.response-data.stm-setup-response-tittle')) + ' 1' +\r\n                this.props.responseId);\r\n        }\r\n        // Set response header text for classified response\r\n        if (markerOperationModeFactory.operationMode.isStandardisationSetupMode &&\r\n            standardisationSetupStore.instance.isClassifiedWorklist) {\r\n            var responseHeaderDetail = standardisationSetupStore.instance.getClassifiedResponseHeaderDetail(this.props.responseId);\r\n            var responseHeader = void 0;\r\n            responseHeader = (localeStore.instance.TranslateText('standardisation-setup.standardisation-setup-worklist.classification-type.'\r\n                + enums.MarkingMode[responseHeaderDetail.markingModeId]));\r\n            responseHeader = responseHeaderDetail.rigOrder && responseHeaderDetail.rigOrder !== 0 ?\r\n                responseHeader + ' ' + responseHeaderDetail.rigOrder.toString() : responseHeader;\r\n            return responseHeader;\r\n        }\r\n        if (markingMode === enums.MarkingMode.ES_TeamApproval) {\r\n            if (qigStore.instance.selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember === true) {\r\n                return ((localeStore.instance.TranslateText('marking.worklist.response-data.stm-standardisation-response-title')) + ' ' +\r\n                    this.props.responseId);\r\n            }\r\n            else {\r\n                return ((localeStore.instance.TranslateText('marking.worklist.response-data.second-standardisation-response-title')) + ' ' +\r\n                    this.props.responseId);\r\n            }\r\n        }\r\n        else if (workListType === enums.WorklistType.practice) {\r\n            return ((localeStore.instance.TranslateText('marking.worklist.response-data.practice-response-title')) + ' ' +\r\n                this.props.responseId);\r\n        }\r\n        else if (workListType === enums.WorklistType.standardisation) {\r\n            return ((localeStore.instance.TranslateText('marking.worklist.response-data.standardisation-response-title')) + ' ' +\r\n                this.props.responseId);\r\n        }\r\n        else if (workListType === enums.WorklistType.secondstandardisation) {\r\n            return ((localeStore.instance.TranslateText('marking.worklist.response-data.second-standardisation-response-title')) + ' ' +\r\n                this.props.responseId);\r\n        }\r\n        else if ((worklistStore.instance.currentWorklistType === enums.WorklistType.directedRemark\r\n            || (worklistStore.instance.currentWorklistType === enums.WorklistType.pooledRemark)\r\n                && worklistStore.instance.getRemarkRequestType !== enums.RemarkRequestType.Unknown)\r\n            && worklistStore.instance.getRemarkRequestType !== enums.RemarkRequestType.QualityRemark) {\r\n            // If Atypical response get the remark string append to atypical indicator\r\n            if (responseHelper.isAtypicalResponse()) {\r\n                return this.atypicalRemarkHeader;\r\n            }\r\n            // Creates string as RemarkRequestType &nbsp; Response Id\r\n            if (loginStore.instance.isAdminRemarker) {\r\n                return (localeStore.instance.TranslateText('generic.remark-types.long-names.AdminRemark')) + ' ' +\r\n                    this.props.responseId;\r\n            }\r\n            else {\r\n                return stringHelper.format(localeStore.instance.TranslateText(this.getDirectedRemarkLocaleKey(worklistStore.instance.getRemarkRequestType)), [constants.NONBREAKING_HYPHEN_UNICODE])\r\n                    + constants.NONBREAKING_WHITE_SPACE + this.props.responseId;\r\n            }\r\n        }\r\n        else if (worklistStore.instance.currentWorklistType === enums.WorklistType.atypical) {\r\n            return ((localeStore.instance.TranslateText('marking.response.navigation-bar.atypical-response-id-label')) + ' ' +\r\n                this.props.responseId);\r\n            /* Response identifier in the top bar shall appear as \"Simulation response\",\r\n            with response ID if the worklist type is simulation.*/\r\n        }\r\n        else if (worklistStore.instance.currentWorklistType === enums.WorklistType.simulation) {\r\n            return ((localeStore.instance.TranslateText('marking.response.navigation-bar.simulation-response-id-label')) + ' ' +\r\n                this.props.responseId);\r\n        }\r\n        else if (markerOperationModeFactory.operationMode.isAwardingMode) {\r\n            return (stringHelper.format(localeStore.instance.TranslateText('awarding.response-data.centrename'), [awardingStore.instance.selectedCandidateData.centreNumber]));\r\n        }\r\n        else {\r\n            return ((localeStore.instance.TranslateText('marking.response.navigation-bar.response-id-label')) + ' ' +\r\n                this.props.responseId);\r\n        }\r\n    };\r\n    Object.defineProperty(ResponseNavigation.prototype, \"atypicalRemarkHeader\", {\r\n        // Gets the atypical remark header text.\r\n        get: function () {\r\n            if (loginStore.instance.isAdminRemarker) {\r\n                return localeStore.instance.TranslateText('marking.response.navigation-bar.atypical-remark-response-id-label') + ' ' +\r\n                    (localeStore.instance.TranslateText('generic.remark-types.long-names.AdminRemark')) + ' ' +\r\n                    this.props.responseId;\r\n            }\r\n            else {\r\n                return stringHelper.format((localeStore.instance.TranslateText('marking.response.navigation-bar.atypical-remark-response-id-label')) + ' ' +\r\n                    localeStore.instance.TranslateText(this.getDirectedRemarkLocaleKey(worklistStore.instance.getRemarkRequestType)), [constants.NONBREAKING_HYPHEN_UNICODE])\r\n                    + constants.NONBREAKING_WHITE_SPACE + this.props.responseId;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * This method will render response navigation buttons.\r\n     * @param button : navigation button\r\n     */\r\n    ResponseNavigation.prototype.renderResponseNavigationButton = function (button) {\r\n        if (qualityfeedbackHelper.isResponseNavigationBlocked()) {\r\n            return null;\r\n        }\r\n        else {\r\n            if (this.props.isPreviousResponseAvailable && button === enums.ResponseNavigation.previous) {\r\n                return (React.createElement(\"a\", { href: 'javascript:void(0);', onClick: this.handlePreviousResponseNavigation, className: 'response-nav response-nav-prev', title: localeStore.instance.TranslateText('marking.response.navigation-bar.previous-response-button-tooltip') },\r\n                    React.createElement(\"span\", { className: 'sprite-icon left-arrow-light' }, localeStore.instance.TranslateText('marking.response.navigation-bar.previous-response-button-tooltip'))));\r\n            }\r\n            else if (this.props.isNextResponseAvailable && button === enums.ResponseNavigation.next) {\r\n                return (React.createElement(\"a\", { href: 'javascript:void(0);', onClick: this.handleNextResponseNavigation, className: 'response-nav response-nav-next', title: localeStore.instance.TranslateText('marking.response.navigation-bar.next-response-button-tooltip') },\r\n                    React.createElement(\"span\", { className: 'sprite-icon right-arrow-light' }, localeStore.instance.TranslateText('marking.response.navigation-bar.next-response-button-tooltip'))));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    ResponseNavigation.prototype.componentDidMount = function () {\r\n        responseActionCreator.reRenderBreadCrumbAfterLoadingResponseID();\r\n        /*Adding global handler */\r\n        var scrollHandler = new moduleKeyHandler(modulekeys.RESPONSE_NAVIGATION, enums.Priority.Third, true, this._boundHandleKeyDown, enums.KeyMode.down);\r\n        keyDownHelper.instance.mountKeyDownHandler(scrollHandler);\r\n        markingStore.instance.addListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        submitStore.instance.addListener(submitStore.SubmitStore.NAVIGATE_AFTER_SUBMIT, this.navigateToNextResponseAfterSubmit);\r\n        worklistStore.instance.addListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.workListDataChanged);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is updating\r\n     */\r\n    ResponseNavigation.prototype.componentDidUpdate = function () {\r\n        responseActionCreator.reRenderBreadCrumbAfterLoadingResponseID();\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be unmounted\r\n     */\r\n    ResponseNavigation.prototype.componentWillUnmount = function () {\r\n        keyDownHelper.instance.unmountKeyHandler(modulekeys.RESPONSE_NAVIGATION);\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        submitStore.instance.removeListener(submitStore.SubmitStore.NAVIGATE_AFTER_SUBMIT, this.navigateToNextResponseAfterSubmit);\r\n        worklistStore.instance.removeListener(worklistStore.WorkListStore.WORKLIST_MARKING_MODE_CHANGE, this.workListDataChanged);\r\n    };\r\n    /**\r\n     * This method will handle click events and keyboard events\r\n     */\r\n    ResponseNavigation.prototype.handleResponseNavigation = function (direction, keyEvent) {\r\n        /* If pressed key is not right arrow or left arrow it will skip */\r\n        if (keyEvent.keyCode !== undefined && keyEvent.keyCode === keyCodes.LEFT_KEY) {\r\n            direction = enums.ResponseNavigation.previous;\r\n        }\r\n        else if (keyEvent.keyCode !== undefined && (keyEvent.keyCode === keyCodes.RIGHT_KEY)) {\r\n            direction = enums.ResponseNavigation.next;\r\n        }\r\n        else if (keyEvent.charCode !== undefined) {\r\n            this.responseNavigationDirection = enums.ResponseNavigation.next;\r\n            return;\r\n        }\r\n        this.isResponseNavigationArrowClicked = true;\r\n        this.navigateResponse(direction, false);\r\n    };\r\n    /**\r\n     * This method will handle the navigation\r\n     * @param direction\r\n     * @param isAfterSubmit\r\n     */\r\n    ResponseNavigation.prototype.navigateResponse = function (direction, isAfterSubmit) {\r\n        //set the isNavigationThroughMarkScheme variable as none since it is not navigating from the markscheme\r\n        markingActionCreator.setNavigationThroughMarkscheme(enums.ResponseNavigation.none);\r\n        if (navigationHelper.navigationAllowed(direction, this.props.isNextResponseAvailable, this.props.isPreviousResponseAvailable)) {\r\n            this.responseNavigationDirection = direction;\r\n            var responseNavigationFailureReasons = new Array();\r\n            if (!isAfterSubmit) {\r\n                responseNavigationFailureReasons = markingHelper.canNavigateAwayFromCurrentResponse();\r\n            }\r\n            // If there is any navigation failure reason available then we will show respective popups.\r\n            if (responseNavigationFailureReasons.length > 0) {\r\n                popupHelper.navigateAwayFromResponse(responseNavigationFailureReasons, enums.SaveAndNavigate.toResponse);\r\n            }\r\n            else {\r\n                if (markingStore.instance.isMarkingInProgress) {\r\n                    // if marking progressing and responseNavigationFailureReason contain none only\r\n                    markingActionCreator.saveAndNavigate(enums.SaveAndNavigate.toResponse);\r\n                }\r\n                else if (!markingStore.instance.isMarkingInProgress) {\r\n                    busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.none);\r\n                    /** navigating from a response which is in view mode doesn't require save marks */\r\n                    this.props.moveCallback(this.responseNavigationDirection, isAfterSubmit);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the directed remark locale key according to the directed remark request type.\r\n     * @param {enums.RemarkRequestType} remarkRequestType\r\n     * @returns remark request key\r\n     */\r\n    ResponseNavigation.prototype.getDirectedRemarkLocaleKey = function (remarkRequestType) {\r\n        return 'generic.remark-types.long-names.' + enums.RemarkRequestType[remarkRequestType];\r\n    };\r\n    return ResponseNavigation;\r\n}(pureRenderComponent));\r\nmodule.exports = ResponseNavigation;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 357:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./src/components/user/userdetails/userdetails.tsx ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../../base/purerendercomponent */ 227);\r\nvar UserOptionSettings = __webpack_require__(/*! ../useroptions/useroptions */ 359);\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar userInfoStore = __webpack_require__(/*! ../../../stores/userinfo/userinfostore */ 244);\r\nvar UserInfo = __webpack_require__(/*! ../userinfo/userinfo */ 358);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../../../actions/userinfo/userinfoactioncreator */ 255);\r\nvar domManager = __webpack_require__(/*! ../../../utility/generic/domhelper */ 294);\r\nvar userOptionsHelper = __webpack_require__(/*! ../../../utility/useroption/useroptionshelper */ 265);\r\nvar markingActionCreator = __webpack_require__(/*! ../../../actions/marking/markingactioncreator */ 246);\r\nvar applicationStore = __webpack_require__(/*! ../../../stores/applicationoffline/applicationstore */ 247);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/**\r\n * Represents the User details\r\n */\r\nvar UserDetails = /** @class */ (function (_super) {\r\n    __extends(UserDetails, _super);\r\n    /**\r\n     * Constructor UserDetails\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function UserDetails(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this._boundHandleOnClick = null;\r\n        /**\r\n         * Handle click events on the window and collapse the user details\r\n         * @param {any} source - The source element\r\n         */\r\n        _this.handleOnClick = function (e) {\r\n            /** check if the clicked element is a child of the user details list item. if not close the open window */\r\n            if (e.target !== undefined &&\r\n                domManager.searchParentNode(e.target, function (el) { return el.id === 'userMenuItem'; }) == null) {\r\n                if (_this.state.isUserInfoOpen !== undefined && _this.state.isUserInfoOpen === true) {\r\n                    /** Saving changed user options if any of them changed */\r\n                    _this.saveUserOptions();\r\n                    markingActionCreator.setMarkEntrySelected();\r\n                    _this.setState({ isUserInfoOpen: false, isEditSettingsOpen: false });\r\n                }\r\n            }\r\n            // both touchend and click event is fired one after other, \r\n            // this avoid resetting store in touchend\r\n            if (_this.state.isUserInfoOpen !== undefined && e.type !== 'touchend') {\r\n                userInfoActionCreator.userInfoClicked(_this.state.isUserInfoOpen);\r\n            }\r\n        };\r\n        /**\r\n         * Update the user information.\r\n         */\r\n        _this.updateUserInformation = function () {\r\n            /** setting the state when user info id loaded to initiate rendering of user info component */\r\n            _this.setState({ isUserInfoLoaded: true });\r\n        };\r\n        /**\r\n         * close user info on offline mode\r\n         */\r\n        _this.onOnlineStatusChanged = function () {\r\n            // in offline mode if the user info panel is open and user details are not loaded yet, then close the panel\r\n            if (_this.state.isUserInfoOpen &&\r\n                !userInfoStore.instance.UserName &&\r\n                !applicationStore.instance.isOnline) {\r\n                _this.openCloseUserDetails(false);\r\n            }\r\n        };\r\n        _this.state = {\r\n            isUserInfoOpen: undefined,\r\n            isEditSettingsOpen: undefined,\r\n            isUserInfoLoaded: false\r\n        };\r\n        _this._boundHandleOnClick = _this.handleOnClick.bind(_this);\r\n        _this.openCloseUserDetails = _this.openCloseUserDetails.bind(_this);\r\n        _this.onEditSettingsClick = _this.onEditSettingsClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Open/Close the User details\r\n     * @param {any} source - The source element\r\n     */\r\n    UserDetails.prototype.openCloseUserDetails = function (saveUserOptions) {\r\n        if (saveUserOptions === void 0) { saveUserOptions = true; }\r\n        if (this.state.isUserInfoOpen === undefined || this.state.isUserInfoOpen === false) {\r\n            /** if user details window is open, get the user info details to fill */\r\n            userInfoActionCreator.GetLoggedUserInfo();\r\n            this.setState({ isUserInfoOpen: true });\r\n        }\r\n        else {\r\n            if (saveUserOptions) {\r\n                /** Saving changed user options if any of them changed */\r\n                this.saveUserOptions();\r\n            }\r\n            markingActionCreator.setMarkEntrySelected();\r\n            this.setState({ isUserInfoOpen: false, isEditSettingsOpen: false });\r\n        }\r\n    };\r\n    /**\r\n     *  Open/Close edit user option window\r\n     * @param source - The source element\r\n     */\r\n    UserDetails.prototype.onEditSettingsClick = function (source) {\r\n        if (this.state.isEditSettingsOpen === undefined || this.state.isEditSettingsOpen === false) {\r\n            this.setState({ isEditSettingsOpen: true });\r\n        }\r\n        else {\r\n            this.setState({ isEditSettingsOpen: false });\r\n        }\r\n    };\r\n    /**\r\n     * User options save\r\n     */\r\n    UserDetails.prototype.saveUserOptions = function () {\r\n        /** Saving changed user options if any of them changed */\r\n        userOptionsHelper.InitiateSaveUserOption(false);\r\n    };\r\n    /**\r\n     * Subscribe window click event\r\n     */\r\n    UserDetails.prototype.componentDidMount = function () {\r\n        window.addEventListener('touchend', this._boundHandleOnClick);\r\n        window.addEventListener('click', this._boundHandleOnClick);\r\n        /** subscribe to user info event */\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.updateUserInformation);\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.TOGGLE_USER_INFO_PANEL, this.openCloseUserDetails);\r\n        applicationStore.instance.addListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n    };\r\n    /**\r\n     * Unsubscribe window click event\r\n     */\r\n    UserDetails.prototype.componentWillUnmount = function () {\r\n        // Resetting the useroption status to closed once component is being removed from view.\r\n        userInfoActionCreator.userInfoClicked(false);\r\n        window.removeEventListener('click', this._boundHandleOnClick);\r\n        window.removeEventListener('touchend', this._boundHandleOnClick);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.updateUserInformation);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.TOGGLE_USER_INFO_PANEL, this.openCloseUserDetails);\r\n        applicationStore.instance.removeListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n    };\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    UserDetails.prototype.render = function () {\r\n        var _this = this;\r\n        return (React.createElement(\"li\", { id: 'userMenuItem', role: 'menuitem', \"aria-haspopup\": 'true', className: classNames('dropdown-wrap user-menu', {\r\n                'open': this.isOpenUserInfo,\r\n                'close': this.state.isUserInfoOpen === undefined ? this.state.isUserInfoOpen : !this.isOpenUserInfo\r\n            }), title: '' },\r\n            React.createElement(\"a\", { href: 'javascript:void(0)', title: localeStore.instance.TranslateText('generic.navigation-bar.user-menu-tooltip'), className: 'menu-button allow-edge-tap', onClick: function () { return _this.openCloseUserDetails(); } },\r\n                React.createElement(\"span\", { className: 'sprite-icon user-icon allow-edge-tap' }, \"User Profile\"),\r\n                React.createElement(\"span\", null),\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon lite allow-edge-tap' })),\r\n            React.createElement(\"div\", { className: 'menu-callout' }),\r\n            React.createElement(\"div\", { role: 'menu', \"aria-hidden\": 'true', className: classNames('menu', { 'expanded': this.state.isEditSettingsOpen }) },\r\n                React.createElement(\"div\", { className: 'user-info-holder' },\r\n                    React.createElement(UserInfo, { isUserInfoLoaded: this.state.isUserInfoLoaded, selectedLanguage: this.props.selectedLanguage, isUserInfoOpen: this.isOpenUserInfo }),\r\n                    React.createElement(\"div\", { className: 'edit-settings-nav-holder' },\r\n                        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: this.onEditSettingsClick, className: 'edit-settings-nav' },\r\n                            localeStore.instance.TranslateText('generic.user-menu.profile-section.edit-settings'),\r\n                            React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' })))),\r\n                React.createElement(UserOptionSettings, { selectedLanguage: this.props.selectedLanguage, isUserOptionLoaded: this.props.isUserOptionLoaded }))));\r\n    };\r\n    Object.defineProperty(UserDetails.prototype, \"isOpenUserInfo\", {\r\n        /**\r\n         * gets whether open the user info or not\r\n         */\r\n        get: function () {\r\n            // in offline mode if the user info panel is open and user details are not loaded yet, then close the panel\r\n            // if the user details are loaded, then do not close the panel even if system in offline mode\r\n            return this.state.isUserInfoOpen &&\r\n                ((!userInfoStore.instance.UserName && applicationStore.instance.isOnline) ||\r\n                    (userInfoStore.instance.UserName && userInfoStore.instance.UserName !== ''));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserDetails;\r\n}(pureRenderComponent));\r\nmodule.exports = UserDetails;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 358:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/user/userinfo/userinfo.tsx ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../../base/purerendercomponent */ 227);\r\nvar userInfoStore = __webpack_require__(/*! ../../../stores/userinfo/userinfostore */ 244);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../../../actions/userinfo/userinfoactioncreator */ 255);\r\nvar Logout = __webpack_require__(/*! ../../logout/logout */ 350);\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar enums = __webpack_require__(/*! ../../utility/enums */ 225);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar GenericButton = __webpack_require__(/*! ../../utility/genericbutton */ 290);\r\nvar GenericTextBox = __webpack_require__(/*! ../../utility/generictextbox */ 364);\r\nvar busyIndicatorActionCreator = __webpack_require__(/*! ../../../actions/busyindicator/busyindicatoractioncreator */ 279);\r\nvar emailValidator = __webpack_require__(/*! ../../../utility/genericvalidators/emailvalidator */ 380);\r\nvar keyDownHelper = __webpack_require__(/*! ../../../utility/generic/keydownhelper */ 258);\r\nvar messageStore = __webpack_require__(/*! ../../../stores/message/messagestore */ 240);\r\nvar exceptionStore = __webpack_require__(/*! ../../../stores/exception/exceptionstore */ 277);\r\nvar LoadingIndicator = __webpack_require__(/*! ../../utility/loadingindicator/loadingindicator */ 303);\r\nvar loginSession = __webpack_require__(/*! ../../../app/loginsession */ 252);\r\n/**\r\n * Class for displaying user information\r\n * @returns\r\n */\r\nvar UserInfo = /** @class */ (function (_super) {\r\n    __extends(UserInfo, _super);\r\n    /**\r\n     * Initializing a new instance of UserInfo\r\n     */\r\n    function UserInfo(props) {\r\n        var _this = _super.call(this, props, null) || this;\r\n        _this.userName = '';\r\n        _this.emailAddress = '';\r\n        _this.examinerName = '';\r\n        /**\r\n         * Update the user information.\r\n         */\r\n        _this.updateUserInformation = function () {\r\n            _this.userName = userInfoStore.instance.UserName;\r\n            _this.examinerName = userInfoStore.instance.ExaminerName;\r\n            _this.emailAddress = userInfoStore.instance.EmailAddress;\r\n        };\r\n        /**\r\n         * Fires after email save\r\n         */\r\n        _this.userInfoSaved = function () {\r\n            busyIndicatorActionCreator.setBusyIndicatorInvoker(enums.BusyIndicatorInvoker.none);\r\n            _this.setNormalMode();\r\n        };\r\n        _this.state = {\r\n            operationMode: enums.OperationMode.normal,\r\n            isValidEmail: true\r\n        };\r\n        _this.onEditEmailClick = _this.onEditEmailClick.bind(_this);\r\n        _this.setValues = _this.setValues.bind(_this);\r\n        _this.OnSaveClick = _this.OnSaveClick.bind(_this);\r\n        _this.onCancelClick = _this.onCancelClick.bind(_this);\r\n        _this.switchUserButtonClick = _this.switchUserButtonClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     */\r\n    UserInfo.prototype.render = function () {\r\n        var outPut = undefined;\r\n        if (this.userName === '') {\r\n            outPut =\r\n                (React.createElement(LoadingIndicator, { id: 'loading', key: 'loading', cssClass: 'section-loader loading' }));\r\n        }\r\n        else {\r\n            outPut = (React.createElement(\"div\", null,\r\n                React.createElement(\"div\", { className: 'user-photo-holder user-big-icon sprite-icon' }),\r\n                React.createElement(\"div\", { className: 'user-details' },\r\n                    React.createElement(\"h4\", { className: 'full-name' },\r\n                        \" \",\r\n                        this.examinerName),\r\n                    React.createElement(\"h5\", { className: 'bolder user-name' },\r\n                        localeStore.instance.TranslateText('generic.user-menu.profile-section.user-name'),\r\n                        \": \",\r\n                        this.userName)),\r\n                this.getEmailHolder(),\r\n                React.createElement(\"div\", null,\r\n                    this.getSwitchUserButton(),\r\n                    React.createElement(Logout, { selectedLanguage: this.props.selectedLanguage }))));\r\n        }\r\n        return (React.createElement(\"div\", { className: 'user-info-wrapper' }, outPut));\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    UserInfo.prototype.componentDidMount = function () {\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.updateUserInformation);\r\n        userInfoStore.instance.addListener(userInfoStore.UserInfoStore.USERINFO_SAVE, this.userInfoSaved);\r\n    };\r\n    /**\r\n     * Component will unmount\r\n     */\r\n    UserInfo.prototype.componentWillUnmount = function () {\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.USERINFO_EVENT, this.updateUserInformation);\r\n        userInfoStore.instance.removeListener(userInfoStore.UserInfoStore.USERINFO_SAVE, this.userInfoSaved);\r\n    };\r\n    /**\r\n     * Comparing the props to check the rerender\r\n     * @param {Props} nextProps\r\n     */\r\n    UserInfo.prototype.componentWillReceiveProps = function (nextProps) {\r\n        // If the use info panel has been opened deactivating to set the free flow\r\n        // of the email edit and submit.\r\n        if ((this.props.isUserInfoOpen === false || this.props.isUserInfoOpen === undefined) && nextProps.isUserInfoOpen === true) {\r\n            keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.EmailAddress);\r\n        }\r\n        else if (this.props.isUserInfoOpen === true && nextProps.isUserInfoOpen === false\r\n            && (!messageStore.instance.isMessagePanelVisible && !exceptionStore.instance.isExceptionPanelVisible)) {\r\n            keyDownHelper.instance.Activate(enums.MarkEntryDeactivator.EmailAddress);\r\n            this.setState({\r\n                operationMode: enums.OperationMode.normal\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the email edit div\r\n     * @returns\r\n     */\r\n    UserInfo.prototype.getEmailHolder = function () {\r\n        if (!this.props.isUserInfoOpen) {\r\n            /** if user clicks outside the user profile, email will be restored from store and\r\n             *  setting the email text box into normal mode\r\n             */\r\n            this.emailAddress = userInfoStore.instance.EmailAddress;\r\n            this.setValues(this.emailAddress);\r\n        }\r\n        return (React.createElement(\"div\", { className: classNames('user-email-holder', {\r\n                ' edit': (this.state.operationMode === enums.OperationMode.edit)\r\n            }) },\r\n            React.createElement(\"a\", { href: 'javascript:void(0)', className: 'email-link-holder', onClick: this.onEditEmailClick },\r\n                React.createElement(\"span\", { className: 'email-address' }, this.emailAddress),\r\n                React.createElement(\"span\", { className: 'add-email-text' }, localeStore.instance.TranslateText('generic.user-menu.profile-section.email-address-placeholder')),\r\n                React.createElement(\"span\", { className: 'edit-small-icon sprite-icon' }),\r\n                React.createElement(\"span\", { className: 'add-small-icon sprite-icon' })),\r\n            React.createElement(GenericTextBox, { id: 'emailId', key: 'emailId', setValue: this.setValues, onEnterKeyDown: this.OnSaveClick, value: this.emailAddress, tabindex: 1 }),\r\n            React.createElement(\"span\", { className: 'bar' }),\r\n            React.createElement(\"div\", { className: 'email-edit-footer', \"aria-hidden\": 'true' },\r\n                this.getEmaiValidationMessage(),\r\n                React.createElement(\"div\", { className: 'save-button-wrapper' },\r\n                    React.createElement(\"button\", { className: 'rounded', id: 'cancelEditEmail', onClick: this.onCancelClick }, localeStore.instance.TranslateText('generic.user-menu.profile-section.cancel-email-button')),\r\n                    React.createElement(\"button\", { className: 'rounded primary', id: 'saveEmail', onClick: this.OnSaveClick }, localeStore.instance.TranslateText('generic.user-menu.profile-section.save-email-button'))))));\r\n    };\r\n    /**\r\n     * Handles the edit click.\r\n     * @param {any} evnt\r\n     */\r\n    UserInfo.prototype.onEditEmailClick = function (evnt) {\r\n        keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.EmailAddress);\r\n        this.emailAddress = userInfoStore.instance.EmailAddress;\r\n        this.setState({\r\n            operationMode: enums.OperationMode.edit,\r\n            isValidEmail: true\r\n        });\r\n    };\r\n    /**\r\n     * Handles the cancel click.\r\n     * @param {any} evnt\r\n     */\r\n    UserInfo.prototype.onCancelClick = function (evnt) {\r\n        this.setNormalMode();\r\n    };\r\n    /**\r\n     * Handles the save click\r\n     * @param {any} evnt\r\n     */\r\n    UserInfo.prototype.OnSaveClick = function (evnt) {\r\n        var emailValidatorInstance = new emailValidator();\r\n        var examinerEmailArgument;\r\n        /* If email id is invalid setting the state for re-render */\r\n        if (!emailValidatorInstance.ValidateEmail(this.emailAddress)) {\r\n            this.setState({\r\n                isValidEmail: false\r\n            });\r\n            return;\r\n        }\r\n        /* Setting the examinerEmailArgument */\r\n        examinerEmailArgument = { emailAddress: this.emailAddress };\r\n        var busyIndicatorInvoker;\r\n        busyIndicatorInvoker = enums.BusyIndicatorInvoker.saveEmail;\r\n        /*Show busy indicator on submitting response */\r\n        busyIndicatorActionCreator.setBusyIndicatorInvoker(busyIndicatorInvoker);\r\n        this.setState({\r\n            isValidEmail: true\r\n        });\r\n        userInfoActionCreator.SaveEmailAddress(examinerEmailArgument);\r\n    };\r\n    /**\r\n     * Set value from the Generic textbox component\r\n     * @param {string} value\r\n     */\r\n    UserInfo.prototype.setValues = function (value) {\r\n        this.emailAddress = value;\r\n        // Deactivate MarkEntry only if UserInfo is open\r\n        if (this.props.isUserInfoOpen) {\r\n            keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.EmailAddress);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the email validation div\r\n     * @returns\r\n     */\r\n    UserInfo.prototype.getEmaiValidationMessage = function () {\r\n        if (!this.state.isValidEmail) {\r\n            return (React.createElement(\"div\", { className: 'error-holder' },\r\n                React.createElement(\"span\", { className: 'error-alert bubble simple-alert show text-centre' }, localeStore.instance.TranslateText('generic.user-menu.profile-section.email-validation-message'))));\r\n        }\r\n        else {\r\n            return (React.createElement(\"div\", null));\r\n        }\r\n    };\r\n    /**\r\n     * Disabling edit\r\n     */\r\n    UserInfo.prototype.setNormalMode = function () {\r\n        this.emailAddress = userInfoStore.instance.EmailAddress;\r\n        this.setValues(this.emailAddress);\r\n        this.setState({\r\n            operationMode: enums.OperationMode.normal\r\n        });\r\n    };\r\n    /**\r\n     * save email on keypress\r\n     * @param event\r\n     */\r\n    UserInfo.prototype.handleKeyDown = function (event) {\r\n        // enter key keycode\r\n        if ((event.keyCode === 13) && (this.state.operationMode === enums.OperationMode.edit)) {\r\n            this.OnSaveClick(event);\r\n        }\r\n    };\r\n    /**\r\n     * Returns switch user div\r\n     * @returns\r\n     */\r\n    UserInfo.prototype.getSwitchUserButton = function () {\r\n        if (loginSession.IS_SUPPORT_ADMIN_LOGIN) {\r\n            return (React.createElement(GenericButton, { id: 'button-primary-rounded-switch-user-button', key: 'key-button-primary-rounded-switch-user-button', className: 'button primary rounded', title: localeStore.instance.TranslateText('generic.user-menu.profile-section.switch-user-button'), content: localeStore.instance.TranslateText('generic.user-menu.profile-section.switch-user-button'), disabled: false, onClick: this.switchUserButtonClick }));\r\n        }\r\n    };\r\n    /**\r\n     * Switch user button click event.\r\n     */\r\n    UserInfo.prototype.switchUserButtonClick = function () {\r\n        userInfoActionCreator.onSwitchUserButtonClick();\r\n    };\r\n    return UserInfo;\r\n}(pureRenderComponent));\r\nmodule.exports = UserInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 359:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./src/components/user/useroptions/useroptions.tsx ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar LanguageSelector = __webpack_require__(/*! ../../utility/locale/languageselector */ 442);\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar LogoutConfirmationDialog = __webpack_require__(/*! ../../logout/logoutconfirmationdialog */ 351);\r\n/**\r\n * Represents the user option\r\n */\r\nvar useroption = function (props) {\r\n    return (React.createElement(\"div\", { className: 'edit-settings-holder', \"aria-hidden\": 'true' },\r\n        React.createElement(\"div\", { className: 'tab-holder horizontal' },\r\n            React.createElement(\"div\", { className: 'tab-content-holder' },\r\n                React.createElement(\"div\", { id: 'settingsTab1', role: 'tabpanel', \"aria-hidden\": 'false', className: classNames('tab-content text-left active') },\r\n                    React.createElement(\"div\", { className: 'language-settings form-field inline' },\r\n                        React.createElement(\"label\", { className: 'label', htmlFor: 'langSelected' }, localeStore.instance.TranslateText('generic.user-menu.user-options.language')),\r\n                        React.createElement(LanguageSelector, { availableLanguages: languageList, selectedLanguage: props.selectedLanguage, isBeforeLogin: false })),\r\n                    React.createElement(LogoutConfirmationDialog, { selectedLanguage: props.selectedLanguage, isUserOptionLoaded: props.isUserOptionLoaded }))))));\r\n};\r\nmodule.exports = useroption;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXNlci91c2Vyb3B0aW9ucy91c2Vyb3B0aW9ucy50c3g/YWQxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZTpuby11bnVzZWQtdmFyaWFibGUgKi9cclxuaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuLyogdHNsaW50OmVuYWJsZTpuby11bnVzZWQtdmFyaWFibGUgKi9cclxuaW1wb3J0IHB1cmVSZW5kZXJDb21wb25lbnQgPSByZXF1aXJlKCcuLi8uLi9iYXNlL3B1cmVyZW5kZXJjb21wb25lbnQnKTtcclxuaW1wb3J0IExhbmd1YWdlU2VsZWN0b3IgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2xvY2FsZS9sYW5ndWFnZXNlbGVjdG9yJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxubGV0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcbmltcG9ydCBMb2dvdXRDb25maXJtYXRpb25EaWFsb2cgPSByZXF1aXJlKCcuLi8uLi9sb2dvdXQvbG9nb3V0Y29uZmlybWF0aW9uZGlhbG9nJyk7XHJcbmRlY2xhcmUgbGV0IGxhbmd1YWdlTGlzdDogYW55O1xyXG5cclxuIC8qKlxyXG4gICogUHJvcGVydGllcyBvZiBVc2VyIG9wdGlvbnNcclxuICAqL1xyXG5pbnRlcmZhY2UgUHJvcHMgZXh0ZW5kcyBMb2NhbGVTZWxlY3Rpb25CYXNlIHtcclxuICAgIGlzVXNlck9wdGlvbkxvYWRlZD86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIHRoZSB1c2VyIG9wdGlvblxyXG4gKi9cclxuY29uc3QgdXNlcm9wdGlvbiA9IChwcm9wczogUHJvcHMpID0+IHtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdlZGl0LXNldHRpbmdzLWhvbGRlcicgYXJpYS1oaWRkZW49J3RydWUnPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0YWItaG9sZGVyIGhvcml6b250YWwnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGFiLWNvbnRlbnQtaG9sZGVyJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9J3NldHRpbmdzVGFiMScgcm9sZT0ndGFicGFuZWwnIGFyaWEtaGlkZGVuPSdmYWxzZSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3RhYi1jb250ZW50IHRleHQtbGVmdCBhY3RpdmUnKSB9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdsYW5ndWFnZS1zZXR0aW5ncyBmb3JtLWZpZWxkIGlubGluZSc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9J2xhYmVsJyBodG1sRm9yPSdsYW5nU2VsZWN0ZWQnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMudXNlci1tZW51LnVzZXItb3B0aW9ucy5sYW5ndWFnZScpIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYW5ndWFnZVNlbGVjdG9yIGF2YWlsYWJsZUxhbmd1YWdlcyA9IHtsYW5ndWFnZUxpc3R9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlID0ge3Byb3BzLnNlbGVjdGVkTGFuZ3VhZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0JlZm9yZUxvZ2luID0ge2ZhbHNlfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TG9nb3V0Q29uZmlybWF0aW9uRGlhbG9nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U9e3Byb3BzLnNlbGVjdGVkTGFuZ3VhZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVXNlck9wdGlvbkxvYWRlZD17cHJvcHMuaXNVc2VyT3B0aW9uTG9hZGVkfS8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufTtcclxuZXhwb3J0ID0gdXNlcm9wdGlvbjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvdXNlci91c2Vyb3B0aW9ucy91c2Vyb3B0aW9ucy50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFVQTs7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFJQTtBQVFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 364:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/utility/generictextbox.tsx ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:disable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\n// non-typescript require\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/**\r\n * React component class for GenericTextBox\r\n */\r\nvar GenericTextBox = /** @class */ (function (_super) {\r\n    __extends(GenericTextBox, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function GenericTextBox(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.state = {\r\n            currentValue: _this.props.value\r\n        };\r\n        _this.handleChange = _this.handleChange.bind(_this);\r\n        _this.onFocus = _this.onFocus.bind(_this);\r\n        _this.handleKeyDown = _this.handleKeyDown.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    GenericTextBox.prototype.render = function () {\r\n        return (React.createElement(\"input\", { type: 'text', className: 'text-underline', id: this.props.id, value: this.state.currentValue, onChange: this.handleChange, onFocus: this.onFocus, onKeyDown: this.handleKeyDown, spellCheck: false, \"aria-label\": this.props.id, ref: 'genericTextBox' }));\r\n    };\r\n    /**\r\n     * This method will set value for login form\r\n     * @param e\r\n     */\r\n    GenericTextBox.prototype.handleChange = function (e) {\r\n        this.setState({ currentValue: e.target.value });\r\n        this.props.setValue(e.target.value);\r\n    };\r\n    /**\r\n     * Handles the On focus\r\n     * @param {any} e\r\n     */\r\n    GenericTextBox.prototype.onFocus = function (e) {\r\n        this.setState({ currentValue: e.target.value });\r\n        this.props.setValue(e.target.value);\r\n    };\r\n    /**\r\n     * Checking if Enter key is pressed\r\n     * @param {any} e\r\n     */\r\n    GenericTextBox.prototype.handleKeyDown = function (e) {\r\n        if (e.keyCode === 13) {\r\n            this.props.onEnterKeyDown();\r\n        }\r\n    };\r\n    /**\r\n     * This will set state hasError based on props value\r\n     * @param nxtProps\r\n     */\r\n    GenericTextBox.prototype.componentWillReceiveProps = function (nxtProps) {\r\n        var _this = this;\r\n        this.setState({ currentValue: nxtProps.value }, function () {\r\n            _this.refs.genericTextBox.focus();\r\n        });\r\n    };\r\n    return GenericTextBox;\r\n}(pureRenderComponent));\r\nmodule.exports = GenericTextBox;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9nZW5lcmljdGV4dGJveC50c3g/OWM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZTpuby11bnVzZWQtdmFyaWFibGUgKi9cclxuaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuLyogdHNsaW50OmRpc2FibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBwdXJlUmVuZGVyQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vYmFzZS9wdXJlcmVuZGVyY29tcG9uZW50Jyk7XHJcbi8vIG5vbi10eXBlc2NyaXB0IHJlcXVpcmVcclxubGV0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5cclxuLyoqXHJcbiAqIFByb3BlcnRpZXMgb2YgYSBjb21wb25lbnRcclxuICovXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBzZXRWYWx1ZTogRnVuY3Rpb247XHJcbiAgICB2YWx1ZTogc3RyaW5nO1xyXG4gICAgdGFiaW5kZXg6IG51bWJlcjtcclxuICAgIG9uRW50ZXJLZXlEb3duPzogRnVuY3Rpb247XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBbGwgZmllbGRzIG9wdGlvbmFsIHRvIGFsbG93IHBhcnRpYWwgc3RhdGUgdXBkYXRlcyBpbiBzZXRTdGF0ZVxyXG4gKi9cclxuaW50ZXJmYWNlIFN0YXRlIHtcclxuICAgIGN1cnJlbnRWYWx1ZT86IHN0cmluZztcclxuICAgIGhhc0Vycm9yPzogYm9vbGVhbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlYWN0IGNvbXBvbmVudCBjbGFzcyBmb3IgR2VuZXJpY1RleHRCb3hcclxuICovXHJcbmNsYXNzIEdlbmVyaWNUZXh0Qm94IGV4dGVuZHMgcHVyZVJlbmRlckNvbXBvbmVudDxQcm9wcywgU3RhdGU+IHtcclxuXHJcbiAgICAvKiogcmVmcyAqL1xyXG4gICAgcHVibGljIHJlZnM6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiAoRWxlbWVudCk7XHJcbiAgICAgICAgZ2VuZXJpY1RleHRCb3g6IChIVE1MSW5wdXRFbGVtZW50KTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAY29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzLCBzdGF0ZTogU3RhdGUpIHtcclxuICAgICAgICBzdXBlcihwcm9wcywgc3RhdGUpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZTogdGhpcy5wcm9wcy52YWx1ZVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlID0gdGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uRm9jdXMgPSB0aGlzLm9uRm9jdXMuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLmhhbmRsZUtleURvd24gPSB0aGlzLmhhbmRsZUtleURvd24uYmluZCh0aGlzKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCdcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3RleHQtdW5kZXJsaW5lJ1xyXG4gICAgICAgICAgICAgICAgICAgIGlkPXt0aGlzLnByb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLmN1cnJlbnRWYWx1ZX1cclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgb25Gb2N1cz17dGhpcy5vbkZvY3VzfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17dGhpcy5oYW5kbGVLZXlEb3dufVxyXG4gICAgICAgICAgICAgICAgICAgIHNwZWxsQ2hlY2s9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e3RoaXMucHJvcHMuaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgcmVmPXsnZ2VuZXJpY1RleHRCb3gnfSAvPlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHNldCB2YWx1ZSBmb3IgbG9naW4gZm9ybVxyXG4gICAgICogQHBhcmFtIGVcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVDaGFuZ2UoZTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnRWYWx1ZTogZS50YXJnZXQudmFsdWUgfSk7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5zZXRWYWx1ZShlLnRhcmdldC52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBPbiBmb2N1c1xyXG4gICAgICogQHBhcmFtIHthbnl9IGVcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkZvY3VzKGU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50VmFsdWU6IGUudGFyZ2V0LnZhbHVlIH0pO1xyXG4gICAgICAgIHRoaXMucHJvcHMuc2V0VmFsdWUoZS50YXJnZXQudmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tpbmcgaWYgRW50ZXIga2V5IGlzIHByZXNzZWRcclxuICAgICAqIEBwYXJhbSB7YW55fSBlXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaGFuZGxlS2V5RG93bihlOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAxMykge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRW50ZXJLZXlEb3duKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyB3aWxsIHNldCBzdGF0ZSBoYXNFcnJvciBiYXNlZCBvbiBwcm9wcyB2YWx1ZVxyXG4gICAgICogQHBhcmFtIG54dFByb3BzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG54dFByb3BzOiBQcm9wcyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50VmFsdWU6IG54dFByb3BzLnZhbHVlIH0sICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZWZzLmdlbmVyaWNUZXh0Qm94LmZvY3VzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgPSBHZW5lcmljVGV4dEJveDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9nZW5lcmljdGV4dGJveC50c3giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBc0JBOztBQUVBO0FBQ0E7QUFBQTtBQVFBOztBQUVBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQVlBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 366:
/* no static exports found */
/* all exports used */
/*!******************************************************************************!*\
  !*** ./src/components/utility/notification/messagenotificationindicator.tsx ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/* tslint:disable:no-unused-variable */\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/* tslint:enable:no-unused-variable */\r\nvar pureRenderComponent = __webpack_require__(/*! ../../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar markingActionCreator = __webpack_require__(/*! ../../../actions/marking/markingactioncreator */ 246);\r\nvar enums = __webpack_require__(/*! ../enums */ 225);\r\nvar navigationHelper = __webpack_require__(/*! ../../utility/navigation/navigationhelper */ 248);\r\nvar markingStore = __webpack_require__(/*! ../../../stores/marking/markingstore */ 236);\r\nvar markingHelper = __webpack_require__(/*! ../../../utility/markscheme/markinghelper */ 267);\r\nvar popupHelper = __webpack_require__(/*! ../popup/popuphelper */ 288);\r\nvar applicationActionCreator = __webpack_require__(/*! ../../../actions/applicationoffline/applicationactioncreator */ 256);\r\nvar responseStore = __webpack_require__(/*! ../../../stores/response/responsestore */ 235);\r\nvar userInfoActionCreator = __webpack_require__(/*! ../../../actions/userinfo/userinfoactioncreator */ 255);\r\nvar navigationStore = __webpack_require__(/*! ../../../stores/navigation/navigationstore */ 275);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../markeroperationmode/markeroperationmodefactory */ 232);\r\nvar simulationModeHelper = __webpack_require__(/*! ../../../utility/simulation/simulationmodehelper */ 324);\r\nvar qigStore = __webpack_require__(/*! ../../../stores/qigselector/qigstore */ 230);\r\n/**\r\n * Represents the message notification indicator component\r\n */\r\nvar MessageNotificationIndicator = /** @class */ (function (_super) {\r\n    __extends(MessageNotificationIndicator, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageNotificationIndicator(properties, state) {\r\n        var _this = _super.call(this, properties, state) || this;\r\n        /**\r\n         * Handles the click\r\n         * @param {any} source\r\n         * @returns\r\n         */\r\n        _this.handleOnClick = function (source) {\r\n            // If  application is not online and will not be able to navihge, should show message\r\n            // to let the user know that the connection problem\r\n            if (!applicationActionCreator.checkActionInterrupted()) {\r\n                return;\r\n            }\r\n            if (navigationStore.instance.containerPage === enums.PageContainers.WorkList &&\r\n                simulationModeHelper.shouldCheckForStandardisationSetupCompletion()) {\r\n                simulationModeHelper.checkStandardisationSetupCompletion(enums.PageContainers.Message, enums.PageContainers.Message);\r\n            }\r\n            else {\r\n                _this.LoadMessage();\r\n            }\r\n        };\r\n        /**\r\n         * Go to message inbox page after saving mark if there is any\r\n         */\r\n        _this.navigateAwayFromResponse = function () {\r\n            if (markingStore.instance.navigateTo === enums.SaveAndNavigate.toInboxMessagePage) {\r\n                if (markerOperationModeFactory.operationMode.isTeamManagementMode) {\r\n                    // set the marker operation mode as Marking\r\n                    userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.Marking);\r\n                }\r\n                navigationHelper.loadContainerIfNeeded(navigationStore.instance.containerPage, enums.SaveMarksAndAnnotationsProcessingTriggerPoint.Inbox, _this.context);\r\n            }\r\n        };\r\n        /**\r\n         * On standardisation setup completion\r\n         */\r\n        _this.onStandardisationSetupCompletion = function () {\r\n            if (qigStore.instance.navigateToAfterStdSetupCheck === enums.PageContainers.Message &&\r\n                !qigStore.instance.isStandardisationsetupCompletedForTheQig &&\r\n                !qigStore.instance.selectedQIGForMarkerOperation.standardisationSetupComplete) {\r\n                if (navigationStore.instance.containerPage === enums.PageContainers.WorkList) {\r\n                    _this.LoadMessage();\r\n                }\r\n                else {\r\n                    navigationHelper.loadMessagePage();\r\n                }\r\n            }\r\n        };\r\n        _this.handleOnClick = _this.handleOnClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    MessageNotificationIndicator.prototype.render = function () {\r\n        return (React.createElement(\"li\", { role: 'menuitem' },\r\n            React.createElement(\"a\", { id: this.props.id, href: 'javascript:void(0)', className: 'relative', onClick: this.handleOnClick, title: localeStore.instance.TranslateText('generic.navigation-bar.inbox-tooltip') },\r\n                React.createElement(\"span\", { className: 'relative' },\r\n                    React.createElement(\"span\", { className: 'sprite-icon notification-icon' }, localeStore.instance.TranslateText('generic.navigation-bar.inbox-tooltip')),\r\n                    this.getMessageCountRenderer(),\r\n                    React.createElement(\"span\", { className: 'nav-text' }, localeStore.instance.TranslateText('generic.navigation-bar.inbox'))))));\r\n    };\r\n    /**\r\n     * Component mounted\r\n     */\r\n    MessageNotificationIndicator.prototype.componentDidMount = function () {\r\n        markingStore.instance.addListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        qigStore.instance.addListener(qigStore.QigStore.STANDARDISATION_SETUP_COMPLETED_EVENT, this.onStandardisationSetupCompletion);\r\n    };\r\n    /**\r\n     * Component unmounted\r\n     */\r\n    MessageNotificationIndicator.prototype.componentWillUnmount = function () {\r\n        markingStore.instance.removeListener(markingStore.MarkingStore.READY_TO_NAVIGATE, this.navigateAwayFromResponse);\r\n        qigStore.instance.removeListener(qigStore.QigStore.STANDARDISATION_SETUP_COMPLETED_EVENT, this.onStandardisationSetupCompletion);\r\n    };\r\n    /**\r\n     * Get's the message count span div if unread message is available for the logged in examiner\r\n     */\r\n    MessageNotificationIndicator.prototype.getMessageCountRenderer = function () {\r\n        if (this.props.messageNotificationCount > 0) {\r\n            return React.createElement(\"span\", { className: 'notification-count notification circle', id: 'id_notification_count' }, (this.props.messageNotificationCount).toLocaleString(localeStore.instance.Locale));\r\n        }\r\n    };\r\n    /**\r\n     * Go to Load message inbox page after saving mark if there is any\r\n     */\r\n    MessageNotificationIndicator.prototype.LoadMessage = function () {\r\n        var responseNavigationFailureReasons = markingHelper.canNavigateAwayFromCurrentResponse();\r\n        if (responseNavigationFailureReasons.length > 0) {\r\n            popupHelper.navigateAwayFromResponse(responseNavigationFailureReasons, enums.SaveAndNavigate.toInboxMessagePage);\r\n        }\r\n        else {\r\n            if (markingStore.instance.isMarkingInProgress ||\r\n                responseStore.instance.selectedResponseViewMode === enums.ResponseViewMode.fullResponseView) {\r\n                /* Save the selected mark scheme mark to the mark collection on response move */\r\n                markingActionCreator.saveAndNavigate(enums.SaveAndNavigate.toInboxMessagePage);\r\n            }\r\n            else {\r\n                // set the marker operation mode as Marking\r\n                userInfoActionCreator.changeOperationMode(enums.MarkerOperationMode.Marking);\r\n                navigationHelper.loadMessagePage();\r\n            }\r\n        }\r\n    };\r\n    return MessageNotificationIndicator;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageNotificationIndicator;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 374:
/* no static exports found */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./src/dataservices/searchresponse/searchresponsedataservice.ts ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar urls = __webpack_require__(/*! ../base/urls */ 266);\r\nvar dataServiceBase = __webpack_require__(/*! ../base/dataservicebase */ 287);\r\n/**\r\n * SearchResponse data service class\r\n */\r\nvar SearchResponseDataService = /** @class */ (function (_super) {\r\n    __extends(SearchResponseDataService, _super);\r\n    function SearchResponseDataService() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * get SearchResponseDetails from Cache\r\n     *\r\n     * @param markSchemeGroupId\r\n     * @param examinerRoleId\r\n     * @param displayId\r\n     * @param callback\r\n     */\r\n    SearchResponseDataService.prototype.getSearchResponseDetail = function (markSchemeGroupId, examinerRoleId, displayId, callback) {\r\n        var url = urls.SEARCH_RESPONSE_DETAIL + '/' + markSchemeGroupId + '/' + examinerRoleId + '/' + displayId;\r\n        var getsearchResponsePromise = this.makeAJAXCall('GET', url);\r\n        getsearchResponsePromise.then(function (json) {\r\n            callback(true, JSON.parse(json), false);\r\n        }).catch(function (json) {\r\n            callback(false, json, false);\r\n        });\r\n    };\r\n    return SearchResponseDataService;\r\n}(dataServiceBase));\r\nvar searchresponsedataservice = new SearchResponseDataService();\r\nmodule.exports = searchresponsedataservice;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2RhdGFzZXJ2aWNlcy9zZWFyY2hyZXNwb25zZS9zZWFyY2hyZXNwb25zZWRhdGFzZXJ2aWNlLnRzP2FmNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVybHMgPSByZXF1aXJlKCcuLi9iYXNlL3VybHMnKTtcclxuaW1wb3J0IGRhdGFTZXJ2aWNlQmFzZSA9IHJlcXVpcmUoJy4uL2Jhc2UvZGF0YXNlcnZpY2ViYXNlJyk7XHJcbmltcG9ydCBzdG9yYWdlQWRhcHRlckZhY3RvcnkgPSByZXF1aXJlKCcuLi9zdG9yYWdlYWRhcHRlcnMvc3RvcmFnZWFkYXB0ZXJmYWN0b3J5Jyk7XHJcbmRlY2xhcmUgbGV0IGNvbmZpZzogYW55O1xyXG5cclxuLyoqXHJcbiAqIFNlYXJjaFJlc3BvbnNlIGRhdGEgc2VydmljZSBjbGFzc1xyXG4gKi9cclxuY2xhc3MgU2VhcmNoUmVzcG9uc2VEYXRhU2VydmljZSBleHRlbmRzIGRhdGFTZXJ2aWNlQmFzZSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBnZXQgU2VhcmNoUmVzcG9uc2VEZXRhaWxzIGZyb20gQ2FjaGVcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIG1hcmtTY2hlbWVHcm91cElkIFxyXG4gICAgICogQHBhcmFtIGV4YW1pbmVyUm9sZUlkXHJcbiAgICAgKiBAcGFyYW0gZGlzcGxheUlkXHJcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgXHJcbiAgICAgKi9cclxuXHJcbiAgICBwdWJsaWMgZ2V0U2VhcmNoUmVzcG9uc2VEZXRhaWwobWFya1NjaGVtZUdyb3VwSWQ6IG51bWJlciwgZXhhbWluZXJSb2xlSWQ6IG51bWJlcixcclxuICAgICAgICBkaXNwbGF5SWQ6IG51bWJlcixcclxuICAgICAgICBjYWxsYmFjazogKChzdWNjZXNzOiBib29sZWFuLCBzZWFyY2hlZFJlc3BvbnNlRGF0YTogYW55LCBpc1Jlc3VsdEZyb21DYWNoZTogYm9vbGVhbikgPT4gdm9pZCkpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgbGV0IHVybCA9IHVybHMuU0VBUkNIX1JFU1BPTlNFX0RFVEFJTCArICcvJyArIG1hcmtTY2hlbWVHcm91cElkICsgJy8nICsgZXhhbWluZXJSb2xlSWQgKyAnLycgKyBkaXNwbGF5SWQ7XHJcbiAgICAgICAgbGV0IGdldHNlYXJjaFJlc3BvbnNlUHJvbWlzZSA9IHRoaXMubWFrZUFKQVhDYWxsKCdHRVQnLCB1cmwpO1xyXG4gICAgICAgIGdldHNlYXJjaFJlc3BvbnNlUHJvbWlzZS50aGVuKGZ1bmN0aW9uIChqc29uOiBhbnkpIHtcclxuICAgICAgICAgICAgY2FsbGJhY2sodHJ1ZSwgSlNPTi5wYXJzZShqc29uKSwgZmFsc2UpO1xyXG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChqc29uOiBhbnkpIHtcclxuICAgICAgICAgICAgY2FsbGJhY2soZmFsc2UsIGpzb24sIGZhbHNlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbmxldCBzZWFyY2hyZXNwb25zZWRhdGFzZXJ2aWNlID0gbmV3IFNlYXJjaFJlc3BvbnNlRGF0YVNlcnZpY2UoKTtcclxuZXhwb3J0ID0gc2VhcmNocmVzcG9uc2VkYXRhc2VydmljZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2RhdGFzZXJ2aWNlcy9zZWFyY2hyZXNwb25zZS9zZWFyY2hyZXNwb25zZWRhdGFzZXJ2aWNlLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFJQTs7QUFFQTtBQUNBO0FBQUE7QUFBQTs7QUF3QkE7QUF0QkE7Ozs7Ozs7QUFPQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 377:
/* no static exports found */
/* all exports used */
/*!****************************************************!*\
  !*** ./src/utility/breadcrumb/breadcrumbhelper.ts ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../../components/utility/enums */ 225);\r\nvar navigationStore = __webpack_require__(/*! ../../stores/navigation/navigationstore */ 275);\r\nvar userInfoStore = __webpack_require__(/*! ../../stores/userinfo/userinfostore */ 244);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar BreadCrumbItem = __webpack_require__(/*! ../../components/breadcrumb/breadcrumbitem */ 349);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar examinerStore = __webpack_require__(/*! ../../stores/markerinformation/examinerstore */ 259);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar stringFormatHelper = __webpack_require__(/*! ../stringformat/stringformathelper */ 250);\r\nvar standardisationSetupStore = __webpack_require__(/*! ../../stores/standardisationsetup/standardisationsetupstore */ 237);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\n/**\r\n * BreadCrumb helper\r\n */\r\nvar BreadCrumbHelper = /** @class */ (function () {\r\n    function BreadCrumbHelper() {\r\n    }\r\n    /**\r\n     * This method will return BreadCrumb trail object\r\n     */\r\n    BreadCrumbHelper.getBreadCrumbTrail = function () {\r\n        var _breadCrumbItem = navigationStore.instance.breadCrumbItem;\r\n        var _breadCrumbElements = new Array();\r\n        switch (_breadCrumbItem.container) {\r\n            case enums.PageContainers.Login:\r\n            case enums.PageContainers.QigSelector:\r\n            case enums.PageContainers.AdminSupport:\r\n                this.getbreadCrumbForQigSelector(_breadCrumbElements, _breadCrumbItem.container);\r\n                break;\r\n            case enums.PageContainers.WorkList:\r\n                if (qigStore.instance.selectedQIGForMarkerOperation) {\r\n                    this.getbreadCrumbForWorkList(_breadCrumbElements);\r\n                }\r\n                else {\r\n                    this.getbreadCrumbForQigSelector(_breadCrumbElements, _breadCrumbItem.container);\r\n                }\r\n                break;\r\n            case enums.PageContainers.Response:\r\n                if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Awarding) {\r\n                    this.getbreadCrumbForAwarding(_breadCrumbElements, _breadCrumbItem.container);\r\n                }\r\n                else if (qigStore.instance.selectedQIGForMarkerOperation) {\r\n                    this.getbreadCrumbForResponse(_breadCrumbElements);\r\n                }\r\n                break;\r\n            case enums.PageContainers.Message:\r\n                this.getbreadCrumbForMessage(_breadCrumbElements);\r\n                break;\r\n            case enums.PageContainers.Reports:\r\n                this.getbreadCrumbForReports(_breadCrumbElements);\r\n                break;\r\n            case enums.PageContainers.TeamManagement:\r\n                this.getbreadCrumbForTeamManagement(_breadCrumbElements);\r\n                break;\r\n            case enums.PageContainers.StandardisationSetup:\r\n                this.getbreadCrumbForStandardisationSetup(_breadCrumbElements);\r\n                break;\r\n            case enums.PageContainers.Awarding:\r\n                this.getbreadCrumbForAwarding(_breadCrumbElements);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * Get Formatted QIG Name based on CC\r\n     */\r\n    BreadCrumbHelper.getFormattedQIGName = function () {\r\n        return stringFormatHelper.formatAwardingBodyQIG(qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupName, qigStore.instance.selectedQIGForMarkerOperation.assessmentCode, qigStore.instance.selectedQIGForMarkerOperation.sessionName, qigStore.instance.selectedQIGForMarkerOperation.componentId, qigStore.instance.selectedQIGForMarkerOperation.questionPaperName, qigStore.instance.selectedQIGForMarkerOperation.assessmentName, qigStore.instance.selectedQIGForMarkerOperation.componentName, stringFormatHelper.getOverviewQIGNameFormat());\r\n    };\r\n    /**\r\n     * This method will push home breadcrumb item to breadCrumbElements array.\r\n     */\r\n    BreadCrumbHelper.pushHomeBreadCrumbItem = function (_breadCrumbElements, container) {\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_home',\r\n            id: 'breadcrumb_home',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: container,\r\n            isClickable: true,\r\n            navigateTo: enums.PageContainers.QigSelector,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.home'),\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for Message\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForMessage = function (_breadCrumbElements) {\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.Message);\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_message',\r\n            id: 'breadcrumb_message',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: enums.PageContainers.Message,\r\n            isClickable: false,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.inbox'),\r\n            navigateTo: enums.PageContainers.None,\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for QigSelector\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForQigSelector = function (_breadCrumbElements, container) {\r\n        var isClickable = true;\r\n        if (container === enums.PageContainers.Login ||\r\n            container === enums.PageContainers.QigSelector ||\r\n            (container === enums.PageContainers.WorkList &&\r\n                !qigStore.instance.selectedQIGForMarkerOperation)) {\r\n            isClickable = false;\r\n        }\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_qig',\r\n            id: 'breadcrumb_qig',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: container,\r\n            isClickable: isClickable,\r\n            isA3Logo: true\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for TeamManagement\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForTeamManagement = function (_breadCrumbElements) {\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.TeamManagement);\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_Team',\r\n            id: 'breadcrumb_team',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: enums.PageContainers.TeamManagement,\r\n            isClickable: false,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.team-management-for') + this.getFormattedQIGName(),\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for Response\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForResponse = function (_breadCrumbElements) {\r\n        var breadCrumbProps;\r\n        var isMarkingCheckMode = worklistStore.instance.isMarkingCheckMode;\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.Response);\r\n        if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Marking\r\n            || userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Awarding) {\r\n            breadCrumbProps = {\r\n                key: 'key_breadcrumb_response',\r\n                id: 'breadcrumb_response',\r\n                selectedLanguage: localeStore.instance.Locale,\r\n                container: enums.PageContainers.Response,\r\n                isClickable: true,\r\n                breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.worklist'),\r\n                navigateTo: enums.PageContainers.WorkList,\r\n                isA3Logo: false\r\n            };\r\n            _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            if (isMarkingCheckMode) {\r\n                // Once in markingcheck worklist the breadcrumb structure will be : Home / Worklist / Marking Check\r\n                // Marking Check will be clickable and will navigate to MarkingCheck Worklist.\r\n                // On clicking Worklist, will navigate to logged in examiner's My Marking screen.\r\n                breadCrumbProps = {\r\n                    key: 'key_breadcrumb_markCheck_worklist_markingCheck',\r\n                    id: 'breadcrumb_markCheck_worklist_markingCheck',\r\n                    selectedLanguage: localeStore.instance.Locale,\r\n                    container: enums.PageContainers.Response,\r\n                    isClickable: true,\r\n                    breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.marking-check'),\r\n                    isA3Logo: false,\r\n                    navigateTo: enums.PageContainers.MarkingCheckExaminersWorkList\r\n                };\r\n                _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            }\r\n        }\r\n        else if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.StandardisationSetup) {\r\n            var breadCrumbString = void 0;\r\n            var id = void 0;\r\n            var navigateTo = enums.PageContainers.StandardisationSetup;\r\n            switch (standardisationSetupStore.instance.selectedStandardisationSetupWorkList) {\r\n                case enums.StandardisationSetup.SelectResponse:\r\n                    if (standardisationSetupStore.instance.selectedTabInSelectResponse === enums.StandardisationSessionTab.CurrentSession) {\r\n                        breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.select-responses');\r\n                        id = 'breadcrumb_select_responses';\r\n                    }\r\n                    else {\r\n                        breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.previous-session');\r\n                        id = 'breadcrumb_reuse_select_responses';\r\n                    }\r\n                    break;\r\n                case enums.StandardisationSetup.UnClassifiedResponse:\r\n                    breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.unclassified');\r\n                    id = 'breadcrumb_unclassified';\r\n                    break;\r\n                case enums.StandardisationSetup.ClassifiedResponse:\r\n                    breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.classified');\r\n                    id = 'breadcrumb_classified';\r\n                    break;\r\n                case enums.StandardisationSetup.ProvisionalResponse:\r\n                    // If response is from searchedResponseData we have to check whether the response owner and logged in user are same\r\n                    // If they are not we have to show the breadCrumb as Inbox\r\n                    if (responseStore.instance.searchedResponseData &&\r\n                        responseStore.instance.searchedResponseData.loggedInExaminerRoleId\r\n                            !== responseStore.instance.searchedResponseData.examinerRoleId) {\r\n                        breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.inbox');\r\n                        id = 'breadcrumb_message';\r\n                        navigateTo = enums.PageContainers.Message;\r\n                    }\r\n                    else {\r\n                        breadCrumbString = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.provisional');\r\n                        id = 'breadcrumb_provisional';\r\n                    }\r\n                    break;\r\n            }\r\n            breadCrumbProps = {\r\n                key: 'key_' + id,\r\n                id: id,\r\n                selectedLanguage: localeStore.instance.Locale,\r\n                container: enums.PageContainers.Response,\r\n                isClickable: true,\r\n                breadCrumbString: breadCrumbString,\r\n                isA3Logo: false,\r\n                navigateTo: navigateTo\r\n            };\r\n            _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        }\r\n        else {\r\n            if (teamManagementStore && teamManagementStore.instance.isRedirectFromException) {\r\n                breadCrumbProps = {\r\n                    key: 'key_breadcrumb_response_team',\r\n                    id: 'breadcrumb_team_response_team',\r\n                    selectedLanguage: localeStore.instance.Locale,\r\n                    container: enums.PageContainers.Response,\r\n                    isClickable: true,\r\n                    breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.team-management'),\r\n                    navigateTo: enums.PageContainers.TeamManagement,\r\n                    isA3Logo: false\r\n                };\r\n                _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            }\r\n            else {\r\n                breadCrumbProps = {\r\n                    key: 'key_breadcrumb_response_team',\r\n                    id: 'breadcrumb_team_response_team',\r\n                    selectedLanguage: localeStore.instance.Locale,\r\n                    container: enums.PageContainers.Response,\r\n                    isClickable: true,\r\n                    breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.team'),\r\n                    navigateTo: enums.PageContainers.TeamManagement,\r\n                    isA3Logo: false\r\n                };\r\n                _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n                breadCrumbProps = {\r\n                    key: 'key_breadcrumb_response_examiner',\r\n                    id: 'breadcrumb_team_response_examiner',\r\n                    selectedLanguage: localeStore.instance.Locale,\r\n                    container: enums.PageContainers.Response,\r\n                    isClickable: true,\r\n                    breadCrumbString: examinerStore.instance.getMarkerInformation.formattedExaminerName,\r\n                    navigateTo: enums.PageContainers.WorkList,\r\n                    isA3Logo: false\r\n                };\r\n                _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            }\r\n        }\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for WorkList\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForWorkList = function (_breadCrumbElements) {\r\n        var isMarkingCheckMode = worklistStore.instance.isMarkingCheckMode;\r\n        var breadCrumbProps;\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.WorkList);\r\n        if (userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Marking\r\n            || userInfoStore.instance.currentOperationMode === enums.MarkerOperationMode.Awarding) {\r\n            var worklistBreadCrumbKey = 'key_breadcrumb_worklist';\r\n            var worklistBreadCrumbId = 'breadcrumb_worklist';\r\n            var worklistBreadCrumbText = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.worklist-for') + this.getFormattedQIGName();\r\n            if (isMarkingCheckMode) {\r\n                // in marking check worklist we need 'worklist' element as clickable and with different text\r\n                worklistBreadCrumbKey = 'key_breadcrumb_markCheck_worklist';\r\n                worklistBreadCrumbId = 'breadcrumb_markCheck_worklist';\r\n                worklistBreadCrumbText = localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.worklist');\r\n            }\r\n            breadCrumbProps = {\r\n                key: worklistBreadCrumbKey,\r\n                id: worklistBreadCrumbId,\r\n                selectedLanguage: localeStore.instance.Locale,\r\n                container: enums.PageContainers.WorkList,\r\n                isClickable: isMarkingCheckMode,\r\n                breadCrumbString: worklistBreadCrumbText,\r\n                isA3Logo: false,\r\n                navigateTo: enums.PageContainers.WorkList\r\n            };\r\n            _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            if (isMarkingCheckMode) {\r\n                // Once in markingcheck worklist the breadcrumb structure will be : Home / Worklist / Marking Check\r\n                // Marking Check will not be clickable\r\n                // On clicking Worklist, will navigate to logged in examiner's My Marking screen.\r\n                breadCrumbProps = {\r\n                    key: 'key_breadcrumb_markCheck_worklist_markingCheck',\r\n                    id: 'breadcrumb_markCheck_worklist_markingCheck',\r\n                    selectedLanguage: localeStore.instance.Locale,\r\n                    container: enums.PageContainers.WorkList,\r\n                    isClickable: false,\r\n                    breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.marking-check'),\r\n                    isA3Logo: false\r\n                };\r\n                _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            }\r\n        }\r\n        else {\r\n            breadCrumbProps = {\r\n                key: 'key_breadcrumb_Team',\r\n                id: 'breadcrumb_Team',\r\n                selectedLanguage: localeStore.instance.Locale,\r\n                container: enums.PageContainers.WorkList,\r\n                isClickable: true,\r\n                breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.team'),\r\n                navigateTo: enums.PageContainers.TeamManagement,\r\n                isA3Logo: false\r\n            };\r\n            _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n            breadCrumbProps = {\r\n                key: 'key_breadcrumb_Team_Examiner',\r\n                id: 'breadcrumb_Team_Examiner',\r\n                selectedLanguage: localeStore.instance.Locale,\r\n                container: enums.PageContainers.WorkList,\r\n                isClickable: false,\r\n                breadCrumbString: examinerStore.instance.getMarkerInformation.formattedExaminerName,\r\n                isA3Logo: false\r\n            };\r\n            _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        }\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for Reports\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForReports = function (_breadCrumbElements) {\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.Reports);\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_reports',\r\n            id: 'breadcrumb_reports',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: enums.PageContainers.Reports,\r\n            isClickable: false,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.reports'),\r\n            navigateTo: enums.PageContainers.None,\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for Awarding\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForAwarding = function (_breadCrumbElements, pageContainer) {\r\n        if (pageContainer === void 0) { pageContainer = enums.PageContainers.None; }\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.StandardisationSetup);\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_awarding',\r\n            id: 'breadcrumb_awarding',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: enums.PageContainers.Awarding,\r\n            isClickable: pageContainer === enums.PageContainers.Response ? true : false,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.awarding'),\r\n            navigateTo: enums.PageContainers.Awarding,\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    /**\r\n     * This method will return BreadCrumb for Standardisation Setup\r\n     */\r\n    BreadCrumbHelper.getbreadCrumbForStandardisationSetup = function (_breadCrumbElements) {\r\n        // adding home breadCrumb item.\r\n        this.pushHomeBreadCrumbItem(_breadCrumbElements, enums.PageContainers.StandardisationSetup);\r\n        var breadCrumbProps = {\r\n            key: 'key_breadcrumb_standardisationsetup',\r\n            id: 'breadcrumb_standardisationsetup',\r\n            selectedLanguage: localeStore.instance.Locale,\r\n            container: enums.PageContainers.StandardisationSetup,\r\n            isClickable: false,\r\n            breadCrumbString: localeStore.instance.TranslateText('generic.navigation-bar.breadcrumbs.standardisation-setup-for')\r\n                + this.getFormattedQIGName(),\r\n            navigateTo: enums.PageContainers.None,\r\n            isA3Logo: false\r\n        };\r\n        _breadCrumbElements.push(React.createElement(BreadCrumbItem, breadCrumbProps));\r\n        return _breadCrumbElements;\r\n    };\r\n    return BreadCrumbHelper;\r\n}());\r\nmodule.exports = BreadCrumbHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdHkvYnJlYWRjcnVtYi9icmVhZGNydW1iaGVscGVyLnRzP2FmMTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmltcG9ydCBlbnVtcyA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvdXRpbGl0eS9lbnVtcycpO1xuaW1wb3J0IG5hdmlnYXRpb25TdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9uYXZpZ2F0aW9uL25hdmlnYXRpb25zdG9yZScpO1xuaW1wb3J0IHVzZXJJbmZvU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvdXNlcmluZm8vdXNlcmluZm9zdG9yZScpO1xuaW1wb3J0IHFpZ1N0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3FpZ3NlbGVjdG9yL3FpZ3N0b3JlJyk7XG5pbXBvcnQgQnJlYWRDcnVtYkl0ZW0gPSByZXF1aXJlKCcuLi8uLi9jb21wb25lbnRzL2JyZWFkY3J1bWIvYnJlYWRjcnVtYml0ZW0nKTtcbmltcG9ydCBicmVhZENydW1iSXRlbUluZm8gPSByZXF1aXJlKCcuL2JyZWFkY3J1bWJpdGVtaW5mbycpO1xuaW1wb3J0IGxvY2FsZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL2xvY2FsZS9sb2NhbGVzdG9yZScpO1xuaW1wb3J0IGV4YW1pbmVyU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbWFya2VyaW5mb3JtYXRpb24vZXhhbWluZXJzdG9yZScpO1xuaW1wb3J0IHRlYW1NYW5hZ2VtZW50U3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvdGVhbW1hbmFnZW1lbnQvdGVhbW1hbmFnZW1lbnRzdG9yZScpO1xuaW1wb3J0IHdvcmtsaXN0U3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvd29ya2xpc3Qvd29ya2xpc3RzdG9yZScpO1xuaW1wb3J0IHN0cmluZ0Zvcm1hdEhlbHBlciA9IHJlcXVpcmUoJy4uL3N0cmluZ2Zvcm1hdC9zdHJpbmdmb3JtYXRoZWxwZXInKTtcbmltcG9ydCBzdGFuZGFyZGlzYXRpb25TZXR1cFN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3N0YW5kYXJkaXNhdGlvbnNldHVwL3N0YW5kYXJkaXNhdGlvbnNldHVwc3RvcmUnKTtcbmltcG9ydCByZXNwb25zZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3Jlc3BvbnNlL3Jlc3BvbnNlc3RvcmUnKTtcbmltcG9ydCBhd2FyZGluZ1N0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL2F3YXJkaW5nL2F3YXJkaW5nc3RvcmUnKTtcblxuLyoqXG4gKiBCcmVhZENydW1iIGhlbHBlclxuICovXG5jbGFzcyBCcmVhZENydW1iSGVscGVyIHtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIEJyZWFkQ3J1bWIgdHJhaWwgb2JqZWN0XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBnZXRCcmVhZENydW1iVHJhaWwoKTogQXJyYXk8SlNYLkVsZW1lbnQ+IHtcblxuICAgICAgICBsZXQgX2JyZWFkQ3J1bWJJdGVtOiBicmVhZENydW1iSXRlbUluZm8gPSBuYXZpZ2F0aW9uU3RvcmUuaW5zdGFuY2UuYnJlYWRDcnVtYkl0ZW07XG4gICAgICAgIGxldCBfYnJlYWRDcnVtYkVsZW1lbnRzOiBBcnJheTxKU1guRWxlbWVudD4gPSBuZXcgQXJyYXk8SlNYLkVsZW1lbnQ+KCk7XG5cbiAgICAgICAgc3dpdGNoIChfYnJlYWRDcnVtYkl0ZW0uY29udGFpbmVyKSB7XG4gICAgICAgICAgICBjYXNlIGVudW1zLlBhZ2VDb250YWluZXJzLkxvZ2luOlxuICAgICAgICAgICAgY2FzZSBlbnVtcy5QYWdlQ29udGFpbmVycy5RaWdTZWxlY3RvcjpcbiAgICAgICAgICAgIGNhc2UgZW51bXMuUGFnZUNvbnRhaW5lcnMuQWRtaW5TdXBwb3J0OlxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0YnJlYWRDcnVtYkZvclFpZ1NlbGVjdG9yKF9icmVhZENydW1iRWxlbWVudHMsIF9icmVhZENydW1iSXRlbS5jb250YWluZXIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBlbnVtcy5QYWdlQ29udGFpbmVycy5Xb3JrTGlzdDpcbiAgICAgICAgICAgICAgICBpZiAocWlnU3RvcmUuaW5zdGFuY2Uuc2VsZWN0ZWRRSUdGb3JNYXJrZXJPcGVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRicmVhZENydW1iRm9yV29ya0xpc3QoX2JyZWFkQ3J1bWJFbGVtZW50cyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRicmVhZENydW1iRm9yUWlnU2VsZWN0b3IoX2JyZWFkQ3J1bWJFbGVtZW50cywgX2JyZWFkQ3J1bWJJdGVtLmNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBlbnVtcy5QYWdlQ29udGFpbmVycy5SZXNwb25zZTpcbiAgICAgICAgICAgICAgICBpZiAodXNlckluZm9TdG9yZS5pbnN0YW5jZS5jdXJyZW50T3BlcmF0aW9uTW9kZSA9PT0gZW51bXMuTWFya2VyT3BlcmF0aW9uTW9kZS5Bd2FyZGluZykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldGJyZWFkQ3J1bWJGb3JBd2FyZGluZyhfYnJlYWRDcnVtYkVsZW1lbnRzLCBfYnJlYWRDcnVtYkl0ZW0uY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHFpZ1N0b3JlLmluc3RhbmNlLnNlbGVjdGVkUUlHRm9yTWFya2VyT3BlcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0YnJlYWRDcnVtYkZvclJlc3BvbnNlKF9icmVhZENydW1iRWxlbWVudHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgZW51bXMuUGFnZUNvbnRhaW5lcnMuTWVzc2FnZTpcbiAgICAgICAgICAgICAgICB0aGlzLmdldGJyZWFkQ3J1bWJGb3JNZXNzYWdlKF9icmVhZENydW1iRWxlbWVudHMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBlbnVtcy5QYWdlQ29udGFpbmVycy5SZXBvcnRzOlxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0YnJlYWRDcnVtYkZvclJlcG9ydHMoX2JyZWFkQ3J1bWJFbGVtZW50cyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGVudW1zLlBhZ2VDb250YWluZXJzLlRlYW1NYW5hZ2VtZW50OlxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0YnJlYWRDcnVtYkZvclRlYW1NYW5hZ2VtZW50KF9icmVhZENydW1iRWxlbWVudHMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBlbnVtcy5QYWdlQ29udGFpbmVycy5TdGFuZGFyZGlzYXRpb25TZXR1cDpcbiAgICAgICAgICAgICAgICB0aGlzLmdldGJyZWFkQ3J1bWJGb3JTdGFuZGFyZGlzYXRpb25TZXR1cChfYnJlYWRDcnVtYkVsZW1lbnRzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgZW51bXMuUGFnZUNvbnRhaW5lcnMuQXdhcmRpbmc6XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRicmVhZENydW1iRm9yQXdhcmRpbmcoX2JyZWFkQ3J1bWJFbGVtZW50cyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9icmVhZENydW1iRWxlbWVudHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IEZvcm1hdHRlZCBRSUcgTmFtZSBiYXNlZCBvbiBDQ1xuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIGdldEZvcm1hdHRlZFFJR05hbWUoKSB7XG4gICAgICAgIHJldHVybiBzdHJpbmdGb3JtYXRIZWxwZXIuZm9ybWF0QXdhcmRpbmdCb2R5UUlHKFxuICAgICAgICAgICAgcWlnU3RvcmUuaW5zdGFuY2Uuc2VsZWN0ZWRRSUdGb3JNYXJrZXJPcGVyYXRpb24ubWFya1NjaGVtZUdyb3VwTmFtZSxcbiAgICAgICAgICAgIHFpZ1N0b3JlLmluc3RhbmNlLnNlbGVjdGVkUUlHRm9yTWFya2VyT3BlcmF0aW9uLmFzc2Vzc21lbnRDb2RlLFxuICAgICAgICAgICAgcWlnU3RvcmUuaW5zdGFuY2Uuc2VsZWN0ZWRRSUdGb3JNYXJrZXJPcGVyYXRpb24uc2Vzc2lvbk5hbWUsXG4gICAgICAgICAgICBxaWdTdG9yZS5pbnN0YW5jZS5zZWxlY3RlZFFJR0Zvck1hcmtlck9wZXJhdGlvbi5jb21wb25lbnRJZCxcbiAgICAgICAgICAgIHFpZ1N0b3JlLmluc3RhbmNlLnNlbGVjdGVkUUlHRm9yTWFya2VyT3BlcmF0aW9uLnF1ZXN0aW9uUGFwZXJOYW1lLFxuICAgICAgICAgICAgcWlnU3RvcmUuaW5zdGFuY2Uuc2VsZWN0ZWRRSUdGb3JNYXJrZXJPcGVyYXRpb24uYXNzZXNzbWVudE5hbWUsXG4gICAgICAgICAgICBxaWdTdG9yZS5pbnN0YW5jZS5zZWxlY3RlZFFJR0Zvck1hcmtlck9wZXJhdGlvbi5jb21wb25lbnROYW1lLFxuICAgICAgICAgICAgc3RyaW5nRm9ybWF0SGVscGVyLmdldE92ZXJ2aWV3UUlHTmFtZUZvcm1hdCgpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHB1c2ggaG9tZSBicmVhZGNydW1iIGl0ZW0gdG8gYnJlYWRDcnVtYkVsZW1lbnRzIGFycmF5LlxuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIHB1c2hIb21lQnJlYWRDcnVtYkl0ZW0oX2JyZWFkQ3J1bWJFbGVtZW50czogQXJyYXk8SlNYLkVsZW1lbnQ+LCBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzKSB7XG4gICAgICAgIGxldCBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9ob21lJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9ob21lJyxcbiAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U6IGxvY2FsZVN0b3JlLmluc3RhbmNlLkxvY2FsZSxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgICAgICAgaXNDbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICBuYXZpZ2F0ZVRvOiBlbnVtcy5QYWdlQ29udGFpbmVycy5RaWdTZWxlY3RvcixcbiAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmc6IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1iYXIuYnJlYWRjcnVtYnMuaG9tZScpLFxuICAgICAgICAgICAgaXNBM0xvZ286IGZhbHNlXG4gICAgICAgIH07XG5cbiAgICAgICAgX2JyZWFkQ3J1bWJFbGVtZW50cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnJlYWRDcnVtYkl0ZW0sIGJyZWFkQ3J1bWJQcm9wcykpO1xuXG4gICAgICAgIHJldHVybiBfYnJlYWRDcnVtYkVsZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIEJyZWFkQ3J1bWIgZm9yIE1lc3NhZ2VcbiAgICAgKi9cbiAgICBwcml2YXRlIHN0YXRpYyBnZXRicmVhZENydW1iRm9yTWVzc2FnZShfYnJlYWRDcnVtYkVsZW1lbnRzOiBBcnJheTxKU1guRWxlbWVudD4pIHtcbiAgICAgICAgLy8gYWRkaW5nIGhvbWUgYnJlYWRDcnVtYiBpdGVtLlxuICAgICAgICB0aGlzLnB1c2hIb21lQnJlYWRDcnVtYkl0ZW0oX2JyZWFkQ3J1bWJFbGVtZW50cywgZW51bXMuUGFnZUNvbnRhaW5lcnMuTWVzc2FnZSk7XG5cbiAgICAgICAgbGV0IGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgIGtleTogJ2tleV9icmVhZGNydW1iX21lc3NhZ2UnLFxuICAgICAgICAgICAgaWQ6ICdicmVhZGNydW1iX21lc3NhZ2UnLFxuICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgY29udGFpbmVyOiBlbnVtcy5QYWdlQ29udGFpbmVycy5NZXNzYWdlLFxuICAgICAgICAgICAgaXNDbGlja2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy5pbmJveCcpLFxuICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuTm9uZSxcbiAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICB9O1xuXG4gICAgICAgIF9icmVhZENydW1iRWxlbWVudHMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KEJyZWFkQ3J1bWJJdGVtLCBicmVhZENydW1iUHJvcHMpKTtcblxuICAgICAgICByZXR1cm4gX2JyZWFkQ3J1bWJFbGVtZW50cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBCcmVhZENydW1iIGZvciBRaWdTZWxlY3RvclxuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIGdldGJyZWFkQ3J1bWJGb3JRaWdTZWxlY3RvcihfYnJlYWRDcnVtYkVsZW1lbnRzOiBBcnJheTxKU1guRWxlbWVudD4sXG4gICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnNcbiAgICApIHtcbiAgICAgICAgbGV0IGlzQ2xpY2thYmxlOiBib29sZWFuID0gdHJ1ZTtcbiAgICAgICAgaWYgKGNvbnRhaW5lciA9PT0gZW51bXMuUGFnZUNvbnRhaW5lcnMuTG9naW4gfHxcbiAgICAgICAgICAgIGNvbnRhaW5lciA9PT0gZW51bXMuUGFnZUNvbnRhaW5lcnMuUWlnU2VsZWN0b3IgfHxcbiAgICAgICAgICAgIChjb250YWluZXIgPT09IGVudW1zLlBhZ2VDb250YWluZXJzLldvcmtMaXN0ICYmXG4gICAgICAgICAgICAgICAgIXFpZ1N0b3JlLmluc3RhbmNlLnNlbGVjdGVkUUlHRm9yTWFya2VyT3BlcmF0aW9uKSkge1xuICAgICAgICAgICAgaXNDbGlja2FibGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYnJlYWRDcnVtYlByb3BzID0ge1xuICAgICAgICAgICAga2V5OiAna2V5X2JyZWFkY3J1bWJfcWlnJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9xaWcnLFxuICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgICAgICAgICBpc0NsaWNrYWJsZTogaXNDbGlja2FibGUsXG4gICAgICAgICAgICBpc0EzTG9nbzogdHJ1ZVxuICAgICAgICB9O1xuXG4gICAgICAgIF9icmVhZENydW1iRWxlbWVudHMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KEJyZWFkQ3J1bWJJdGVtLCBicmVhZENydW1iUHJvcHMpKTtcblxuICAgICAgICByZXR1cm4gX2JyZWFkQ3J1bWJFbGVtZW50cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBCcmVhZENydW1iIGZvciBUZWFtTWFuYWdlbWVudFxuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIGdldGJyZWFkQ3J1bWJGb3JUZWFtTWFuYWdlbWVudChfYnJlYWRDcnVtYkVsZW1lbnRzOiBBcnJheTxKU1guRWxlbWVudD4pIHtcbiAgICAgICAgLy8gYWRkaW5nIGhvbWUgYnJlYWRDcnVtYiBpdGVtLlxuICAgICAgICB0aGlzLnB1c2hIb21lQnJlYWRDcnVtYkl0ZW0oX2JyZWFkQ3J1bWJFbGVtZW50cywgZW51bXMuUGFnZUNvbnRhaW5lcnMuVGVhbU1hbmFnZW1lbnQpO1xuXG4gICAgICAgIGxldCBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9UZWFtJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl90ZWFtJyxcbiAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U6IGxvY2FsZVN0b3JlLmluc3RhbmNlLkxvY2FsZSxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuVGVhbU1hbmFnZW1lbnQsXG4gICAgICAgICAgICBpc0NsaWNrYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0XG4gICAgICAgICAgICAgICAgKCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLnRlYW0tbWFuYWdlbWVudC1mb3InKSArIHRoaXMuZ2V0Rm9ybWF0dGVkUUlHTmFtZSgpLFxuICAgICAgICAgICAgaXNBM0xvZ286IGZhbHNlXG4gICAgICAgIH07XG5cbiAgICAgICAgX2JyZWFkQ3J1bWJFbGVtZW50cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnJlYWRDcnVtYkl0ZW0sIGJyZWFkQ3J1bWJQcm9wcykpO1xuXG4gICAgICAgIHJldHVybiBfYnJlYWRDcnVtYkVsZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIEJyZWFkQ3J1bWIgZm9yIFJlc3BvbnNlXG4gICAgICovXG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2V0YnJlYWRDcnVtYkZvclJlc3BvbnNlKF9icmVhZENydW1iRWxlbWVudHM6IEFycmF5PEpTWC5FbGVtZW50Pikge1xuICAgICAgICBsZXQgYnJlYWRDcnVtYlByb3BzOiBhbnk7XG5cbiAgICAgICAgbGV0IGlzTWFya2luZ0NoZWNrTW9kZSA9IHdvcmtsaXN0U3RvcmUuaW5zdGFuY2UuaXNNYXJraW5nQ2hlY2tNb2RlO1xuXG4gICAgICAgIC8vIGFkZGluZyBob21lIGJyZWFkQ3J1bWIgaXRlbS5cbiAgICAgICAgdGhpcy5wdXNoSG9tZUJyZWFkQ3J1bWJJdGVtKF9icmVhZENydW1iRWxlbWVudHMsIGVudW1zLlBhZ2VDb250YWluZXJzLlJlc3BvbnNlKTtcblxuICAgICAgICBpZiAodXNlckluZm9TdG9yZS5pbnN0YW5jZS5jdXJyZW50T3BlcmF0aW9uTW9kZSA9PT0gZW51bXMuTWFya2VyT3BlcmF0aW9uTW9kZS5NYXJraW5nXG4gICAgICAgICAgICB8fCB1c2VySW5mb1N0b3JlLmluc3RhbmNlLmN1cnJlbnRPcGVyYXRpb25Nb2RlID09PSBlbnVtcy5NYXJrZXJPcGVyYXRpb25Nb2RlLkF3YXJkaW5nKSB7XG5cbiAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9yZXNwb25zZScsXG4gICAgICAgICAgICAgICAgaWQ6ICdicmVhZGNydW1iX3Jlc3BvbnNlJyxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICAgICAgY29udGFpbmVyOiBlbnVtcy5QYWdlQ29udGFpbmVycy5SZXNwb25zZSxcbiAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLndvcmtsaXN0JyksXG4gICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuV29ya0xpc3QsXG4gICAgICAgICAgICAgICAgaXNBM0xvZ286IGZhbHNlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgICAgIGlmIChpc01hcmtpbmdDaGVja01vZGUpIHtcblxuICAgICAgICAgICAgICAgIC8vIE9uY2UgaW4gbWFya2luZ2NoZWNrIHdvcmtsaXN0IHRoZSBicmVhZGNydW1iIHN0cnVjdHVyZSB3aWxsIGJlIDogSG9tZSAvIFdvcmtsaXN0IC8gTWFya2luZyBDaGVja1xuICAgICAgICAgICAgICAgIC8vIE1hcmtpbmcgQ2hlY2sgd2lsbCBiZSBjbGlja2FibGUgYW5kIHdpbGwgbmF2aWdhdGUgdG8gTWFya2luZ0NoZWNrIFdvcmtsaXN0LlxuICAgICAgICAgICAgICAgIC8vIE9uIGNsaWNraW5nIFdvcmtsaXN0LCB3aWxsIG5hdmlnYXRlIHRvIGxvZ2dlZCBpbiBleGFtaW5lcidzIE15IE1hcmtpbmcgc2NyZWVuLlxuXG4gICAgICAgICAgICAgICAgYnJlYWRDcnVtYlByb3BzID0ge1xuICAgICAgICAgICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9tYXJrQ2hlY2tfd29ya2xpc3RfbWFya2luZ0NoZWNrJyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICdicmVhZGNydW1iX21hcmtDaGVja193b3JrbGlzdF9tYXJraW5nQ2hlY2snLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgIGlzQ2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLm1hcmtpbmctY2hlY2snKSxcbiAgICAgICAgICAgICAgICAgICAgaXNBM0xvZ286IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0ZVRvOiBlbnVtcy5QYWdlQ29udGFpbmVycy5NYXJraW5nQ2hlY2tFeGFtaW5lcnNXb3JrTGlzdFxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIGlmICh1c2VySW5mb1N0b3JlLmluc3RhbmNlLmN1cnJlbnRPcGVyYXRpb25Nb2RlID09PSBlbnVtcy5NYXJrZXJPcGVyYXRpb25Nb2RlLlN0YW5kYXJkaXNhdGlvblNldHVwKSB7XG5cbiAgICAgICAgICAgIGxldCBicmVhZENydW1iU3RyaW5nOiBzdHJpbmc7XG4gICAgICAgICAgICBsZXQgaWQ6IHN0cmluZztcbiAgICAgICAgICAgIGxldCBuYXZpZ2F0ZVRvOiBlbnVtcy5QYWdlQ29udGFpbmVycyA9IGVudW1zLlBhZ2VDb250YWluZXJzLlN0YW5kYXJkaXNhdGlvblNldHVwO1xuICAgICAgICAgICAgc3dpdGNoIChzdGFuZGFyZGlzYXRpb25TZXR1cFN0b3JlLmluc3RhbmNlLnNlbGVjdGVkU3RhbmRhcmRpc2F0aW9uU2V0dXBXb3JrTGlzdCkge1xuICAgICAgICAgICAgICAgIGNhc2UgZW51bXMuU3RhbmRhcmRpc2F0aW9uU2V0dXAuU2VsZWN0UmVzcG9uc2U6XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFuZGFyZGlzYXRpb25TZXR1cFN0b3JlLmluc3RhbmNlLnNlbGVjdGVkVGFiSW5TZWxlY3RSZXNwb25zZSA9PT0gZW51bXMuU3RhbmRhcmRpc2F0aW9uU2Vzc2lvblRhYi5DdXJyZW50U2Vzc2lvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZyA9IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1iYXIuYnJlYWRjcnVtYnMuc2VsZWN0LXJlc3BvbnNlcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQgPSAnYnJlYWRjcnVtYl9zZWxlY3RfcmVzcG9uc2VzJztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmcgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLnByZXZpb3VzLXNlc3Npb24nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkID0gJ2JyZWFkY3J1bWJfcmV1c2Vfc2VsZWN0X3Jlc3BvbnNlcyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBlbnVtcy5TdGFuZGFyZGlzYXRpb25TZXR1cC5VbkNsYXNzaWZpZWRSZXNwb25zZTpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZyA9IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1iYXIuYnJlYWRjcnVtYnMudW5jbGFzc2lmaWVkJyk7XG4gICAgICAgICAgICAgICAgICAgIGlkID0gJ2JyZWFkY3J1bWJfdW5jbGFzc2lmaWVkJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBlbnVtcy5TdGFuZGFyZGlzYXRpb25TZXR1cC5DbGFzc2lmaWVkUmVzcG9uc2U6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmcgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLmNsYXNzaWZpZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgaWQgPSAnYnJlYWRjcnVtYl9jbGFzc2lmaWVkJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBlbnVtcy5TdGFuZGFyZGlzYXRpb25TZXR1cC5Qcm92aXNpb25hbFJlc3BvbnNlOlxuICAgICAgICAgICAgICAgICAgICAvLyBJZiByZXNwb25zZSBpcyBmcm9tIHNlYXJjaGVkUmVzcG9uc2VEYXRhIHdlIGhhdmUgdG8gY2hlY2sgd2hldGhlciB0aGUgcmVzcG9uc2Ugb3duZXIgYW5kIGxvZ2dlZCBpbiB1c2VyIGFyZSBzYW1lXG4gICAgICAgICAgICAgICAgICAgIC8vIElmIHRoZXkgYXJlIG5vdCB3ZSBoYXZlIHRvIHNob3cgdGhlIGJyZWFkQ3J1bWIgYXMgSW5ib3hcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlU3RvcmUuaW5zdGFuY2Uuc2VhcmNoZWRSZXNwb25zZURhdGEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlU3RvcmUuaW5zdGFuY2Uuc2VhcmNoZWRSZXNwb25zZURhdGEubG9nZ2VkSW5FeGFtaW5lclJvbGVJZFxuICAgICAgICAgICAgICAgICAgICAgICAgIT09IHJlc3BvbnNlU3RvcmUuaW5zdGFuY2Uuc2VhcmNoZWRSZXNwb25zZURhdGEuZXhhbWluZXJSb2xlSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmcgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLmluYm94Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZCA9ICdicmVhZGNydW1iX21lc3NhZ2UnO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUbyA9IGVudW1zLlBhZ2VDb250YWluZXJzLk1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nID0gbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy5wcm92aXNpb25hbCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQgPSAnYnJlYWRjcnVtYl9wcm92aXNpb25hbCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBrZXk6ICdrZXlfJyArIGlkLFxuICAgICAgICAgICAgICAgIGlkOiBpZCxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICAgICAgY29udGFpbmVyOiBlbnVtcy5QYWdlQ29udGFpbmVycy5SZXNwb25zZSxcbiAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBicmVhZENydW1iU3RyaW5nLFxuICAgICAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBuYXZpZ2F0ZVRvOiBuYXZpZ2F0ZVRvXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0ZWFtTWFuYWdlbWVudFN0b3JlICYmIHRlYW1NYW5hZ2VtZW50U3RvcmUuaW5zdGFuY2UuaXNSZWRpcmVjdEZyb21FeGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgICBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogJ2tleV9icmVhZGNydW1iX3Jlc3BvbnNlX3RlYW0nLFxuICAgICAgICAgICAgICAgICAgICBpZDogJ2JyZWFkY3J1bWJfdGVhbV9yZXNwb25zZV90ZWFtJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzLlJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy50ZWFtLW1hbmFnZW1lbnQnKSxcbiAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuVGVhbU1hbmFnZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICAgICAga2V5OiAna2V5X2JyZWFkY3J1bWJfcmVzcG9uc2VfdGVhbScsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl90ZWFtX3Jlc3BvbnNlX3RlYW0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgIGlzQ2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdnZW5lcmljLm5hdmlnYXRpb24tYmFyLmJyZWFkY3J1bWJzLnRlYW0nKSxcbiAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuVGVhbU1hbmFnZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgICAgICAgICBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogJ2tleV9icmVhZGNydW1iX3Jlc3BvbnNlX2V4YW1pbmVyJyxcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICdicmVhZGNydW1iX3RlYW1fcmVzcG9uc2VfZXhhbWluZXInLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgIGlzQ2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBicmVhZENydW1iU3RyaW5nOiBleGFtaW5lclN0b3JlLmluc3RhbmNlLmdldE1hcmtlckluZm9ybWF0aW9uLmZvcm1hdHRlZEV4YW1pbmVyTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuV29ya0xpc3QsXG4gICAgICAgICAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBfYnJlYWRDcnVtYkVsZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIEJyZWFkQ3J1bWIgZm9yIFdvcmtMaXN0XG4gICAgICovXG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2V0YnJlYWRDcnVtYkZvcldvcmtMaXN0KF9icmVhZENydW1iRWxlbWVudHM6IEFycmF5PEpTWC5FbGVtZW50Pikge1xuICAgICAgICBsZXQgaXNNYXJraW5nQ2hlY2tNb2RlID0gd29ya2xpc3RTdG9yZS5pbnN0YW5jZS5pc01hcmtpbmdDaGVja01vZGU7XG5cbiAgICAgICAgbGV0IGJyZWFkQ3J1bWJQcm9wcztcblxuICAgICAgICAvLyBhZGRpbmcgaG9tZSBicmVhZENydW1iIGl0ZW0uXG4gICAgICAgIHRoaXMucHVzaEhvbWVCcmVhZENydW1iSXRlbShfYnJlYWRDcnVtYkVsZW1lbnRzLCBlbnVtcy5QYWdlQ29udGFpbmVycy5Xb3JrTGlzdCk7XG5cbiAgICAgICAgaWYgKHVzZXJJbmZvU3RvcmUuaW5zdGFuY2UuY3VycmVudE9wZXJhdGlvbk1vZGUgPT09IGVudW1zLk1hcmtlck9wZXJhdGlvbk1vZGUuTWFya2luZ1xuICAgICAgICAgICAgfHwgdXNlckluZm9TdG9yZS5pbnN0YW5jZS5jdXJyZW50T3BlcmF0aW9uTW9kZSA9PT0gZW51bXMuTWFya2VyT3BlcmF0aW9uTW9kZS5Bd2FyZGluZykge1xuXG4gICAgICAgICAgICBsZXQgd29ya2xpc3RCcmVhZENydW1iS2V5OiBzdHJpbmcgPSAna2V5X2JyZWFkY3J1bWJfd29ya2xpc3QnO1xuICAgICAgICAgICAgbGV0IHdvcmtsaXN0QnJlYWRDcnVtYklkOiBzdHJpbmcgPSAnYnJlYWRjcnVtYl93b3JrbGlzdCc7XG4gICAgICAgICAgICBsZXQgd29ya2xpc3RCcmVhZENydW1iVGV4dDogc3RyaW5nID0gbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dFxuICAgICAgICAgICAgICAgICgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy53b3JrbGlzdC1mb3InKSArIHRoaXMuZ2V0Rm9ybWF0dGVkUUlHTmFtZSgpO1xuXG4gICAgICAgICAgICBpZiAoaXNNYXJraW5nQ2hlY2tNb2RlKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBpbiBtYXJraW5nIGNoZWNrIHdvcmtsaXN0IHdlIG5lZWQgJ3dvcmtsaXN0JyBlbGVtZW50IGFzIGNsaWNrYWJsZSBhbmQgd2l0aCBkaWZmZXJlbnQgdGV4dFxuICAgICAgICAgICAgICAgIHdvcmtsaXN0QnJlYWRDcnVtYktleSA9ICdrZXlfYnJlYWRjcnVtYl9tYXJrQ2hlY2tfd29ya2xpc3QnO1xuICAgICAgICAgICAgICAgIHdvcmtsaXN0QnJlYWRDcnVtYklkID0gJ2JyZWFkY3J1bWJfbWFya0NoZWNrX3dvcmtsaXN0JztcbiAgICAgICAgICAgICAgICB3b3JrbGlzdEJyZWFkQ3J1bWJUZXh0ID0gbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy53b3JrbGlzdCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICAgICAga2V5OiB3b3JrbGlzdEJyZWFkQ3J1bWJLZXksXG4gICAgICAgICAgICAgICAgaWQ6IHdvcmtsaXN0QnJlYWRDcnVtYklkLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U6IGxvY2FsZVN0b3JlLmluc3RhbmNlLkxvY2FsZSxcbiAgICAgICAgICAgICAgICBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzLldvcmtMaXN0LFxuICAgICAgICAgICAgICAgIGlzQ2xpY2thYmxlOiBpc01hcmtpbmdDaGVja01vZGUsXG4gICAgICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogd29ya2xpc3RCcmVhZENydW1iVGV4dCxcbiAgICAgICAgICAgICAgICBpc0EzTG9nbzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuV29ya0xpc3RcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9icmVhZENydW1iRWxlbWVudHMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KEJyZWFkQ3J1bWJJdGVtLCBicmVhZENydW1iUHJvcHMpKTtcblxuICAgICAgICAgICAgaWYgKGlzTWFya2luZ0NoZWNrTW9kZSkge1xuXG4gICAgICAgICAgICAgICAgLy8gT25jZSBpbiBtYXJraW5nY2hlY2sgd29ya2xpc3QgdGhlIGJyZWFkY3J1bWIgc3RydWN0dXJlIHdpbGwgYmUgOiBIb21lIC8gV29ya2xpc3QgLyBNYXJraW5nIENoZWNrXG4gICAgICAgICAgICAgICAgLy8gTWFya2luZyBDaGVjayB3aWxsIG5vdCBiZSBjbGlja2FibGVcbiAgICAgICAgICAgICAgICAvLyBPbiBjbGlja2luZyBXb3JrbGlzdCwgd2lsbCBuYXZpZ2F0ZSB0byBsb2dnZWQgaW4gZXhhbWluZXIncyBNeSBNYXJraW5nIHNjcmVlbi5cblxuICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICAgICAga2V5OiAna2V5X2JyZWFkY3J1bWJfbWFya0NoZWNrX3dvcmtsaXN0X21hcmtpbmdDaGVjaycsXG4gICAgICAgICAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9tYXJrQ2hlY2tfd29ya2xpc3RfbWFya2luZ0NoZWNrJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzLldvcmtMaXN0LFxuICAgICAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmc6IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1iYXIuYnJlYWRjcnVtYnMubWFya2luZy1jaGVjaycpLFxuICAgICAgICAgICAgICAgICAgICBpc0EzTG9nbzogZmFsc2VcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgX2JyZWFkQ3J1bWJFbGVtZW50cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnJlYWRDcnVtYkl0ZW0sIGJyZWFkQ3J1bWJQcm9wcykpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9UZWFtJyxcbiAgICAgICAgICAgICAgICBpZDogJ2JyZWFkY3J1bWJfVGVhbScsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuV29ya0xpc3QsXG4gICAgICAgICAgICAgICAgaXNDbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy50ZWFtJyksXG4gICAgICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuVGVhbU1hbmFnZW1lbnQsXG4gICAgICAgICAgICAgICAgaXNBM0xvZ286IGZhbHNlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgICAgIGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9UZWFtX0V4YW1pbmVyJyxcbiAgICAgICAgICAgICAgICBpZDogJ2JyZWFkY3J1bWJfVGVhbV9FeGFtaW5lcicsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRMYW5ndWFnZTogbG9jYWxlU3RvcmUuaW5zdGFuY2UuTG9jYWxlLFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuV29ya0xpc3QsXG4gICAgICAgICAgICAgICAgaXNDbGlja2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmc6IGV4YW1pbmVyU3RvcmUuaW5zdGFuY2UuZ2V0TWFya2VySW5mb3JtYXRpb24uZm9ybWF0dGVkRXhhbWluZXJOYW1lLFxuICAgICAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX2JyZWFkQ3J1bWJFbGVtZW50cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnJlYWRDcnVtYkl0ZW0sIGJyZWFkQ3J1bWJQcm9wcykpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9icmVhZENydW1iRWxlbWVudHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCByZXR1cm4gQnJlYWRDcnVtYiBmb3IgUmVwb3J0c1xuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIGdldGJyZWFkQ3J1bWJGb3JSZXBvcnRzKF9icmVhZENydW1iRWxlbWVudHM6IEFycmF5PEpTWC5FbGVtZW50Pikge1xuXG4gICAgICAgIC8vIGFkZGluZyBob21lIGJyZWFkQ3J1bWIgaXRlbS5cbiAgICAgICAgdGhpcy5wdXNoSG9tZUJyZWFkQ3J1bWJJdGVtKF9icmVhZENydW1iRWxlbWVudHMsIGVudW1zLlBhZ2VDb250YWluZXJzLlJlcG9ydHMpO1xuXG4gICAgICAgIGxldCBicmVhZENydW1iUHJvcHMgPSB7XG4gICAgICAgICAgICBrZXk6ICdrZXlfYnJlYWRjcnVtYl9yZXBvcnRzJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9yZXBvcnRzJyxcbiAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U6IGxvY2FsZVN0b3JlLmluc3RhbmNlLkxvY2FsZSxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogZW51bXMuUGFnZUNvbnRhaW5lcnMuUmVwb3J0cyxcbiAgICAgICAgICAgIGlzQ2xpY2thYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGJyZWFkQ3J1bWJTdHJpbmc6IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMubmF2aWdhdGlvbi1iYXIuYnJlYWRjcnVtYnMucmVwb3J0cycpLFxuICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuTm9uZSxcbiAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgcmV0dXJuIF9icmVhZENydW1iRWxlbWVudHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCByZXR1cm4gQnJlYWRDcnVtYiBmb3IgQXdhcmRpbmdcbiAgICAgKi9cbiAgICBwcml2YXRlIHN0YXRpYyBnZXRicmVhZENydW1iRm9yQXdhcmRpbmcoX2JyZWFkQ3J1bWJFbGVtZW50czogQXJyYXk8SlNYLkVsZW1lbnQ+LFxuICAgICAgICBwYWdlQ29udGFpbmVyOiBlbnVtcy5QYWdlQ29udGFpbmVycyA9IGVudW1zLlBhZ2VDb250YWluZXJzLk5vbmUpIHtcblxuICAgICAgICAvLyBhZGRpbmcgaG9tZSBicmVhZENydW1iIGl0ZW0uXG4gICAgICAgIHRoaXMucHVzaEhvbWVCcmVhZENydW1iSXRlbShfYnJlYWRDcnVtYkVsZW1lbnRzLCBlbnVtcy5QYWdlQ29udGFpbmVycy5TdGFuZGFyZGlzYXRpb25TZXR1cCk7XG5cbiAgICAgICAgbGV0IGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgIGtleTogJ2tleV9icmVhZGNydW1iX2F3YXJkaW5nJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9hd2FyZGluZycsXG4gICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzLkF3YXJkaW5nLFxuICAgICAgICAgICAgaXNDbGlja2FibGU6IHBhZ2VDb250YWluZXIgPT09IGVudW1zLlBhZ2VDb250YWluZXJzLlJlc3BvbnNlID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy5hd2FyZGluZycpLFxuICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuQXdhcmRpbmcsXG4gICAgICAgICAgICBpc0EzTG9nbzogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgX2JyZWFkQ3J1bWJFbGVtZW50cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnJlYWRDcnVtYkl0ZW0sIGJyZWFkQ3J1bWJQcm9wcykpO1xuXG4gICAgICAgIHJldHVybiBfYnJlYWRDcnVtYkVsZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIEJyZWFkQ3J1bWIgZm9yIFN0YW5kYXJkaXNhdGlvbiBTZXR1cFxuICAgICAqL1xuICAgIHByaXZhdGUgc3RhdGljIGdldGJyZWFkQ3J1bWJGb3JTdGFuZGFyZGlzYXRpb25TZXR1cChfYnJlYWRDcnVtYkVsZW1lbnRzOiBBcnJheTxKU1guRWxlbWVudD4pIHtcblxuICAgICAgICAvLyBhZGRpbmcgaG9tZSBicmVhZENydW1iIGl0ZW0uXG4gICAgICAgIHRoaXMucHVzaEhvbWVCcmVhZENydW1iSXRlbShfYnJlYWRDcnVtYkVsZW1lbnRzLCBlbnVtcy5QYWdlQ29udGFpbmVycy5TdGFuZGFyZGlzYXRpb25TZXR1cCk7XG5cbiAgICAgICAgbGV0IGJyZWFkQ3J1bWJQcm9wcyA9IHtcbiAgICAgICAgICAgIGtleTogJ2tleV9icmVhZGNydW1iX3N0YW5kYXJkaXNhdGlvbnNldHVwJyxcbiAgICAgICAgICAgIGlkOiAnYnJlYWRjcnVtYl9zdGFuZGFyZGlzYXRpb25zZXR1cCcsXG4gICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBsb2NhbGVTdG9yZS5pbnN0YW5jZS5Mb2NhbGUsXG4gICAgICAgICAgICBjb250YWluZXI6IGVudW1zLlBhZ2VDb250YWluZXJzLlN0YW5kYXJkaXNhdGlvblNldHVwLFxuICAgICAgICAgICAgaXNDbGlja2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgYnJlYWRDcnVtYlN0cmluZzogbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5uYXZpZ2F0aW9uLWJhci5icmVhZGNydW1icy5zdGFuZGFyZGlzYXRpb24tc2V0dXAtZm9yJylcbiAgICAgICAgICAgICAgICArIHRoaXMuZ2V0Rm9ybWF0dGVkUUlHTmFtZSgpLFxuICAgICAgICAgICAgbmF2aWdhdGVUbzogZW51bXMuUGFnZUNvbnRhaW5lcnMuTm9uZSxcbiAgICAgICAgICAgIGlzQTNMb2dvOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBfYnJlYWRDcnVtYkVsZW1lbnRzLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChCcmVhZENydW1iSXRlbSwgYnJlYWRDcnVtYlByb3BzKSk7XG5cbiAgICAgICAgcmV0dXJuIF9icmVhZENydW1iRWxlbWVudHM7XG4gICAgfVxufVxuXG5leHBvcnQgPSBCcmVhZENydW1iSGVscGVyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy91dGlsaXR5L2JyZWFkY3J1bWIvYnJlYWRjcnVtYmhlbHBlci50cyJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7O0FBRUE7QUFDQTtBQUFBO0FBa2RBO0FBaGRBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBU0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 378:
/* no static exports found */
/* all exports used */
/*!*****************************************************!*\
  !*** ./src/utility/breadcrumb/historyitemhelper.ts ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * Helper for History item\r\n */\r\nvar HistoryItemHelper = /** @class */ (function () {\r\n    function HistoryItemHelper() {\r\n    }\r\n    /**\r\n     * Gets Standardisation Setup Link Text\r\n     * @param qigId\r\n     */\r\n    HistoryItemHelper.getStandardisationSetupLinkText = function (qigId) {\r\n        var qigSummary = qigStore.instance.getQigSummary(qigId);\r\n        var isStandardisationSetupButtonVisible = qigStore.instance.isStandardisationSetupButtonVisible(qigSummary);\r\n        var isStandardisationSetupLinkVisible = qigStore.instance.isStandardisationSetupLinkVisible(qigSummary);\r\n        var linkName = '';\r\n        if (isStandardisationSetupButtonVisible) {\r\n            linkName = localeStore.instance.TranslateText('home.qig-data.standardisation-button');\r\n        }\r\n        else if (isStandardisationSetupLinkVisible) {\r\n            var stdSetupPermission = qigStore.instance.getSSUPermissionsData(qigId).role.permissions;\r\n            if (qigStore.instance.isQigHasBrowseScriptPermissionOnly(qigSummary)) {\r\n                linkName = localeStore.instance.TranslateText('home.qig-data.browse-standardisation-scripts');\r\n            }\r\n            else if (stdSetupPermission.editDefinitives) {\r\n                linkName = localeStore.instance.TranslateText('home.qig-data.manage-definitive-mark-link');\r\n            }\r\n            else if (stdSetupPermission.viewDefinitives) {\r\n                linkName = localeStore.instance.TranslateText('home.qig-data.view-definitive-mark-link');\r\n            }\r\n        }\r\n        return linkName;\r\n    };\r\n    return HistoryItemHelper;\r\n}());\r\nmodule.exports = HistoryItemHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdHkvYnJlYWRjcnVtYi9oaXN0b3J5aXRlbWhlbHBlci50cz8yOWJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbnVtcyA9IHJlcXVpcmUoJy4uLy4uL2NvbXBvbmVudHMvdXRpbGl0eS9lbnVtcycpO1xuaW1wb3J0IHFpZ1N1bW1hcnkgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvcWlnc2VsZWN0b3IvdHlwaW5ncy9xaWdzdW1tYXJ5Jyk7XG5pbXBvcnQgcWlnU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvcWlnc2VsZWN0b3IvcWlnc3RvcmUnKTtcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcbmltcG9ydCBwZXJtaXNzaW9ucyA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9zdGFuZGFyZGlzYXRpb25zZXR1cC90eXBpbmdzL3Blcm1pc3Npb25zJyk7XG5cbi8qKlxuICogSGVscGVyIGZvciBIaXN0b3J5IGl0ZW1cbiAqL1xuY2xhc3MgSGlzdG9yeUl0ZW1IZWxwZXIge1xuXG4gICAvKipcbiAgICAqIEdldHMgU3RhbmRhcmRpc2F0aW9uIFNldHVwIExpbmsgVGV4dFxuICAgICogQHBhcmFtIHFpZ0lkXG4gICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldFN0YW5kYXJkaXNhdGlvblNldHVwTGlua1RleHQocWlnSWQ6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGxldCBxaWdTdW1tYXJ5OiBxaWdTdW1tYXJ5ID0gcWlnU3RvcmUuaW5zdGFuY2UuZ2V0UWlnU3VtbWFyeShxaWdJZCk7XG4gICAgICAgIGxldCBpc1N0YW5kYXJkaXNhdGlvblNldHVwQnV0dG9uVmlzaWJsZTogYm9vbGVhbiA9IHFpZ1N0b3JlLmluc3RhbmNlLmlzU3RhbmRhcmRpc2F0aW9uU2V0dXBCdXR0b25WaXNpYmxlKHFpZ1N1bW1hcnkpO1xuICAgICAgICBsZXQgaXNTdGFuZGFyZGlzYXRpb25TZXR1cExpbmtWaXNpYmxlOiBib29sZWFuID0gcWlnU3RvcmUuaW5zdGFuY2UuaXNTdGFuZGFyZGlzYXRpb25TZXR1cExpbmtWaXNpYmxlKHFpZ1N1bW1hcnkpO1xuICAgICAgICBsZXQgbGlua05hbWU6IHN0cmluZyA9ICcnO1xuICAgICAgICBpZiAoaXNTdGFuZGFyZGlzYXRpb25TZXR1cEJ1dHRvblZpc2libGUpIHtcbiAgICAgICAgICAgIGxpbmtOYW1lID0gbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnaG9tZS5xaWctZGF0YS5zdGFuZGFyZGlzYXRpb24tYnV0dG9uJyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNTdGFuZGFyZGlzYXRpb25TZXR1cExpbmtWaXNpYmxlKSB7XG4gICAgICAgICAgICBsZXQgc3RkU2V0dXBQZXJtaXNzaW9uOiBwZXJtaXNzaW9ucyA9IHFpZ1N0b3JlLmluc3RhbmNlLmdldFNTVVBlcm1pc3Npb25zRGF0YShxaWdJZCkucm9sZS5wZXJtaXNzaW9ucztcbiAgICAgICAgICAgIGlmIChxaWdTdG9yZS5pbnN0YW5jZS5pc1FpZ0hhc0Jyb3dzZVNjcmlwdFBlcm1pc3Npb25Pbmx5KHFpZ1N1bW1hcnkpKSB7XG4gICAgICAgICAgICAgICAgbGlua05hbWUgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdob21lLnFpZy1kYXRhLmJyb3dzZS1zdGFuZGFyZGlzYXRpb24tc2NyaXB0cycpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGRTZXR1cFBlcm1pc3Npb24uZWRpdERlZmluaXRpdmVzKSB7XG4gICAgICAgICAgICAgICAgbGlua05hbWUgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdob21lLnFpZy1kYXRhLm1hbmFnZS1kZWZpbml0aXZlLW1hcmstbGluaycpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGRTZXR1cFBlcm1pc3Npb24udmlld0RlZmluaXRpdmVzKSB7XG4gICAgICAgICAgICAgICAgbGlua05hbWUgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdob21lLnFpZy1kYXRhLnZpZXctZGVmaW5pdGl2ZS1tYXJrLWxpbmsnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGlua05hbWU7XG4gICAgfVxufVxuXG5leHBvcnQgPSBIaXN0b3J5SXRlbUhlbHBlcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL3V0aWxpdHkvYnJlYWRjcnVtYi9oaXN0b3J5aXRlbWhlbHBlci50cyJdLCJtYXBwaW5ncyI6IjtBQUVBO0FBQ0E7QUFHQTs7QUFFQTtBQUNBO0FBQUE7QUF5QkE7QUF2QkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 380:
/* no static exports found */
/* all exports used */
/*!*********************************************************!*\
  !*** ./src/utility/genericvalidators/emailvalidator.ts ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * Email validator.\r\n */\r\nvar EmailValidator = /** @class */ (function () {\r\n    function EmailValidator() {\r\n    }\r\n    /**\r\n     * validate the email\r\n     * @param emailAddress\r\n     */\r\n    EmailValidator.prototype.ValidateEmail = function (emailAddress) {\r\n        /* tslint:disable max-line-length */\r\n        var EMAIL_REG_EX = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n        /* tslint:disable max-line-length */\r\n        if (EMAIL_REG_EX.test(emailAddress)) {\r\n            return (true);\r\n        }\r\n        return (false);\r\n    };\r\n    return EmailValidator;\r\n}());\r\nmodule.exports = EmailValidator;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzgwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdHkvZ2VuZXJpY3ZhbGlkYXRvcnMvZW1haWx2YWxpZGF0b3IudHM/ZWQzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRW1haWwgdmFsaWRhdG9yLlxyXG4gKi9cclxuY2xhc3MgRW1haWxWYWxpZGF0b3Ige1xyXG4gICAgLyoqXHJcbiAgICAgKiB2YWxpZGF0ZSB0aGUgZW1haWxcclxuICAgICAqIEBwYXJhbSBlbWFpbEFkZHJlc3NcclxuICAgICAqL1xyXG4gICAgcHVibGljIFZhbGlkYXRlRW1haWwoZW1haWxBZGRyZXNzOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICAvKiB0c2xpbnQ6ZGlzYWJsZSBtYXgtbGluZS1sZW5ndGggKi9cclxuICAgICAgICBsZXQgRU1BSUxfUkVHX0VYID0gL14oW2EtekEtWjAtOV9cXC5cXC1dKStcXEAoKFthLXpBLVowLTlcXC1dKStcXC4pKyhbYS16QS1aMC05XXsyLDR9KSskLztcclxuICAgICAgICAvKiB0c2xpbnQ6ZGlzYWJsZSBtYXgtbGluZS1sZW5ndGggKi9cclxuICAgICAgICBpZiAoRU1BSUxfUkVHX0VYLnRlc3QoZW1haWxBZGRyZXNzKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gKGZhbHNlKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0ID0gRW1haWxWYWxpZGF0b3I7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy91dGlsaXR5L2dlbmVyaWN2YWxpZGF0b3JzL2VtYWlsdmFsaWRhdG9yLnRzIl0sIm1hcHBpbmdzIjoiO0FBQUE7O0FBRUE7QUFDQTtBQUFBO0FBY0E7QUFiQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 457:
/* no static exports found */
/* all exports used */
/*!*************************************************!*\
  !*** ./src/components/message/messagepopup.tsx ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar MessagePriorityDropDown = __webpack_require__(/*! ./messageprioritydropdown */ 464);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar GenericButton = __webpack_require__(/*! ../utility/genericbutton */ 290);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar MessageBase = __webpack_require__(/*! ./messagebase */ 462);\r\nvar MessageEditor = __webpack_require__(/*! ./messageeditor */ 463);\r\nvar Subject = __webpack_require__(/*! ./subject */ 466);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar QigDropDown = __webpack_require__(/*! ../utility/dropdown */ 467);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar keyDownHelper = __webpack_require__(/*! ../../utility/generic/keydownhelper */ 258);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar TeamListPopup = __webpack_require__(/*! ./teamlistpopup */ 478);\r\nvar configurablecharacteristicshelper = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicshelper */ 233);\r\nvar configurablecharacteristicsnames = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicsnames */ 234);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\nvar MessagePopup = /** @class */ (function (_super) {\r\n    __extends(MessagePopup, _super);\r\n    /**\r\n     * Constructor Messagepopup\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function MessagePopup(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isShowTeamListPopup = false;\r\n        _this._isEntireTeamSelected = false;\r\n        _this._mandatoryMessagesFromMarkingToolCC = false;\r\n        _this.doTriggerMessageOpenEvent = false;\r\n        /**\r\n         * This method will render QIG section for Compose, Reply and Forward message types\r\n         */\r\n        _this.renderQigSection = function () {\r\n            switch (_this.props.messageType) {\r\n                case enums.MessageType.InboxCompose:\r\n                    return (React.createElement(\"div\", { className: 'message-qig' },\r\n                        React.createElement(\"span\", { className: 'dim-text msg-qig-label', id: 'qig-dropdown-label' }, localeStore.instance.TranslateText('messaging.compose-message.question-group') + ':'),\r\n                        React.createElement(QigDropDown, { dropDownType: enums.DropDownType.QIG, id: 'select_qig', style: _this.state.qigDropDownStyle, className: 'dropdown-wrap message-qig-name', selectedItem: _this.selectedQig, isOpen: _this.clickedDropDown === enums.DropDownType.QIG ? _this.isQigDropDownOpen : undefined, items: _this.props.qigItemsList, onClick: _this.onQigDropDownClick, onSelect: _this.onQigItemSelected, title: localeStore.instance.TranslateText('messaging.compose-message.question-group-tooltip') })));\r\n                case enums.MessageType.InboxForward:\r\n                case enums.MessageType.InboxReply:\r\n                case enums.MessageType.WorklistCompose:\r\n                case enums.MessageType.TeamCompose:\r\n                    return (React.createElement(\"div\", { className: 'message-qig' },\r\n                        React.createElement(\"span\", { className: 'dim-text msg-qig-label', id: 'question-group-text' }, localeStore.instance.TranslateText('messaging.compose-message.question-group') + ':'),\r\n                        React.createElement(\"div\", { className: 'message-qig-name', id: 'selected-qig-name' }, _this.selectedQig)));\r\n            }\r\n        };\r\n        /**\r\n         * This method will return associtated response section for Forward and Reply message types\r\n         */\r\n        _this.renderAssociatedResponseSection = function () {\r\n            if ((_this.props.messageType === enums.MessageType.InboxForward || _this.props.messageType === enums.MessageType.InboxReply)\r\n                && (_this.props.responseId != null && _this.props.responseId !== '' && _this.props.responseId !== undefined)) {\r\n                return (React.createElement(\"div\", { className: 'clearfix padding-bottom-10' },\r\n                    React.createElement(\"div\", { className: 'comp-resp-id shift-left' },\r\n                        React.createElement(\"span\", { className: 'dim-text', id: 'associated-response-text' }, localeStore.instance.TranslateText('messaging.compose-message.associated-response') + ':'),\r\n                        React.createElement(\"div\", { className: 'message-resonse-id', id: 'associated-response-id' }, messageHelper.getMarkingModeText(_this.props.selectedMsgDetails.markingModeId, _this.props.selectedMsgDetails.isElectronicStandardisationTeamMember) + _this.props.responseId))));\r\n            }\r\n        };\r\n        /**\r\n         * This method will call on qig dropdown select\r\n         */\r\n        _this.onQigItemSelected = function (selectedItem) {\r\n            // resetting to standard message priority while qig selected\r\n            _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n            _this.props.onQigItemSelected(selectedItem);\r\n            var selectedQigItem = _this.props.qigItemsList.filter(function (x) { return x.id === selectedItem; });\r\n            var qigId = selectedItem;\r\n            var examinerRoleId = selectedQigItem[0].examinerRoleId;\r\n            var args = {\r\n                examinerRoleId: examinerRoleId,\r\n                qigId: qigId\r\n            };\r\n            messagingActionCreator.getTeamDetails(args);\r\n        };\r\n        /**\r\n         * On navigate away from inbox\r\n         */\r\n        _this.onNavigateAwayFromInbox = function (navigateTo) {\r\n            if ((navigateTo === enums.SaveAndNavigate.toReplyMessage || navigateTo === enums.SaveAndNavigate.toForwardMessage ||\r\n                navigateTo === enums.SaveAndNavigate.newMessageButtonClick)\r\n                && !messageHelper.isMessagePanelEdited(_this.props.messageType, _this.toFieldValues, _this.toFieldIds)) {\r\n                _this.props.onResetPopupCallback(navigateTo);\r\n            }\r\n            else {\r\n                _this.onNavigateAwayFromResponse(navigateTo);\r\n            }\r\n        };\r\n        /**\r\n         *  This will set the required variables\r\n         */\r\n        _this.onOpen = function (messageType) {\r\n            // if tinymce is not loaded we need to skip this method and retrigger this after editor is loaded\r\n            if (!_this.state.isTinyMCELoaded) {\r\n                _this.doTriggerMessageOpenEvent = true;\r\n                _this.msgType = messageType;\r\n                return;\r\n            }\r\n            // if message type is inbox compose or worklist compose then set the default content for setting default fonts\r\n            if (messageType === enums.MessageType.InboxCompose || messageType === enums.MessageType.WorklistCompose ||\r\n                messageType === enums.MessageType.TeamCompose) {\r\n                _this.messageBody = messageHelper.getMessageContent(messageType);\r\n                if (_this.isMessagePopupMinimized === true) {\r\n                    _this.onMaximizeMessagePanel();\r\n                }\r\n            }\r\n            // if message type is work list compose then set supervisior details in to address fields.\r\n            if (messageType === enums.MessageType.WorklistCompose || messageType === enums.MessageType.TeamCompose) {\r\n                _this._selectedTeamList = new Array();\r\n                _this.toFieldIds = new Array();\r\n                _this.toFieldValues = new Array();\r\n                _this.toFieldIds.push(_this.props.supervisorId);\r\n                _this.toFieldValues.push(_this.props.supervisorName);\r\n                _this._selectedTeamList.push(_this.props.supervisorName);\r\n            }\r\n            // Fix for defect 54276. Reply forward message details has to be set only once. \r\n            if (messageType === enums.MessageType.InboxReply || messageType === enums.MessageType.InboxForward) {\r\n                _this.setInboxForwardReplyMessageDetails();\r\n            }\r\n            // Fix for defect 54276. Reply forward message details has to be set only once. \r\n            if (messageType === enums.MessageType.InboxReply || messageType === enums.MessageType.InboxForward) {\r\n                _this.setInboxForwardReplyMessageDetails();\r\n            }\r\n            // Fix for defect 54276. Reply forward message details has to be set only once. \r\n            if (messageType === enums.MessageType.InboxReply || messageType === enums.MessageType.InboxForward) {\r\n                _this.setInboxForwardReplyMessageDetails();\r\n            }\r\n            _this.setState({ renderedOn: Date.now() });\r\n            // enable send button\r\n            _this.enableDisableSendButton();\r\n        };\r\n        /**\r\n         * Method fired to minimize the message panel.\r\n         */\r\n        _this.onMinimizeMessagePanel = function () {\r\n            // added as part of defect #29269\r\n            if (htmlUtilities.isIPadDevice) {\r\n                htmlUtilities.setFocusToElement('message-subject');\r\n                htmlUtilities.blurElement('message-subject');\r\n            }\r\n            _this.isMessagePopupMinimized = true;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Method fired to maximize the message panel.\r\n         */\r\n        _this.onMaximizeMessagePanel = function () {\r\n            _this.isMessagePopupMinimized = false;\r\n            _this.setState({ renderedOn: Date.now() });\r\n            // enable send button\r\n            _this.enableDisableSendButton();\r\n        };\r\n        /**\r\n         * Method fired to close the message panel.\r\n         */\r\n        _this.onMessagePanelClose = function () {\r\n            keyDownHelper.instance.Activate(enums.MarkEntryDeactivator.Messaging);\r\n            _this.isMessagePopupMinimized = false;\r\n            _this.messageSubject = '';\r\n            if (_this.selectedQigItemId && _this.selectedQigItemId !== 0) {\r\n                var selectedQigItem = _this.props.qigItemsList.filter(function (x) { return x.id === _this.selectedQigItemId; });\r\n                if (selectedQigItem && selectedQigItem.length > 0) {\r\n                    var qigId = _this.selectedQigItemId;\r\n                    var examinerRoleId = selectedQigItem[0].examinerRoleId;\r\n                    messagingActionCreator.clearTeamSelection(examinerRoleId);\r\n                }\r\n            }\r\n            _this._selectedTeamList = new Array();\r\n            _this._isEntireTeamSelected = false;\r\n            /**\r\n             * Defect 64542 fix: setting isShowTeamListPopup to false to prevent TeamList Popup from persisting\r\n             * when closing and opening a new message with only 1 QIG item\r\n             */\r\n            _this.isShowTeamListPopup = false;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * This method is handling the letious popup events.\r\n         */\r\n        _this.onPopUpDisplayEvent = function (popUpType, popUpActionType) {\r\n            switch (popUpType) {\r\n                case enums.PopUpType.DiscardMessage:\r\n                case enums.PopUpType.DiscardMessageNavigateAway:\r\n                    switch (popUpActionType) {\r\n                        case enums.PopUpActionType.Yes:\r\n                            popupHelper.handlePopUpEvents(popUpType, popUpActionType, _this.onDiscardMessageConfirmed);\r\n                            break;\r\n                        case enums.PopUpActionType.No:\r\n                            popupHelper.handlePopUpEvents(popUpType, popUpActionType, _this.onDiscardMessageCancelled);\r\n                            break;\r\n                    }\r\n                    break;\r\n                case enums.PopUpType.DiscardOnNewMessageButtonClick:\r\n                    switch (popUpActionType) {\r\n                        case enums.PopUpActionType.Show:\r\n                            _this.isMessagePopupMinimized = false;\r\n                            _this.setState({ renderedOn: Date.now() });\r\n                            break;\r\n                        case enums.PopUpActionType.Yes:\r\n                            popupHelper.handlePopUpEvents(popUpType, popUpActionType, _this.onDiscardNewPopupConfirmed);\r\n                            break;\r\n                        case enums.PopUpActionType.No:\r\n                            //Reset the navigate to variable when the user chooses to stay on the message panel\r\n                            _this.navigateTo = enums.SaveAndNavigate.none;\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n        _this.onDiscardNewPopupConfirmed = function () {\r\n            if (_this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick) {\r\n                _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n                _this.messageSubject = '';\r\n                _this.messageBody = '';\r\n                _this.isDropDownOpen = undefined;\r\n                _this.isQigDropDownOpen = undefined;\r\n                _this.toFieldValues = null;\r\n                _this.toFieldIds = null;\r\n                _this._selectedTeamList = new Array();\r\n                _this._isEntireTeamSelected = false;\r\n                tinymce.activeEditor.setContent('');\r\n                _this.enableDisableSendButton();\r\n                _this.props.onResetPopupCallback(_this.navigateTo);\r\n            }\r\n            else {\r\n                _this.props.onResetPopupCallback(_this.navigateTo);\r\n            }\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n        };\r\n        /**\r\n         *  Callback function for dropdown click\r\n         */\r\n        _this.onQigDropDownClick = function (dropDown, width) {\r\n            if (width) {\r\n                var style = {};\r\n                style.minWidth = width;\r\n                _this.setState({\r\n                    qigDropDownStyle: style\r\n                });\r\n            }\r\n            _this.onDropDownClick(dropDown);\r\n        };\r\n        _this.showToAddressList = function () {\r\n            _this.isShowTeamListPopup = true;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        _this.hideToAddressList = function () {\r\n            _this.setState({ isshowToAddressList: false });\r\n        };\r\n        _this.saveToAddressList = function () {\r\n            _this.setState({ isshowToAddressList: false });\r\n        };\r\n        /**\r\n         * Handles the action event on team list Received.\r\n         */\r\n        _this.updatedTeamListReceived = function (isSaved) {\r\n            if (isSaved === void 0) { isSaved = false; }\r\n            _this.toFieldValues = new Array();\r\n            _this.toFieldIds = new Array();\r\n            _this._selectedTeamList = new Array();\r\n            _this._isEntireTeamSelected = false;\r\n            _this.isSubordinateSelected = false;\r\n            var teams = messageStore.instance.teamDetails;\r\n            if (teams && teams.team) {\r\n                if (teams.team.toTeam) {\r\n                    _this._isEntireTeamSelected = true;\r\n                    _this.isSubordinateSelected = true;\r\n                }\r\n                else {\r\n                    if (teams.team.parent && teams.team.parent.isChecked) {\r\n                        _this._selectedTeamList.push(teams.team.parent.fullName + ';');\r\n                    }\r\n                    if (teams.team.subordinates.length > 0) {\r\n                        _this.getSelectedSubordinateList(teams.team.subordinates);\r\n                    }\r\n                }\r\n                // the logged in user has subordinates, check the store for new TO list\r\n                // if there are no subordinates, the the supervisor details (if any) will be populated via props\r\n                if (messageStore.instance.teamDetails.team.subordinates &&\r\n                    messageStore.instance.teamDetails.team.subordinates.length > 0) {\r\n                    _this.populateToField(teams.team);\r\n                }\r\n                _this.isShowTeamListPopup = false;\r\n                if (isSaved && _this.priorityDropDownSelectedItem === enums.MessagePriority.Mandatory &&\r\n                    !_this.isSubordinateSelected) {\r\n                    messagingActionCreator.displayMandatoryValidationPopup(true);\r\n                }\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n        };\r\n        /**\r\n         * Populates the To Fields based on the values in the store\r\n         */\r\n        _this.populateToField = function (team) {\r\n            if (team) {\r\n                // Add Parent Examiner of the current examiner if the parent is selected\r\n                if (team.isCurrentExaminer && team.parent && team.parent.isChecked) {\r\n                    _this.toFieldIds.push(team.parent.examinerId);\r\n                    _this.toFieldValues.push(team.parent.fullName);\r\n                }\r\n                if (!team.isCurrentExaminer && team.isChecked) {\r\n                    _this.toFieldIds.push(team.examinerId);\r\n                    _this.toFieldValues.push(team.fullName);\r\n                }\r\n                for (var _i = 0, _a = team.subordinates; _i < _a.length; _i++) {\r\n                    var subTeam = _a[_i];\r\n                    _this.populateToField(subTeam);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Handles the action event on To address list Received.\r\n         */\r\n        _this.teamListReceived = function () {\r\n            var teams = messageStore.instance.teamDetails;\r\n            var qigId = _this.props.selectedQigItemId;\r\n            _this._disableToButtonForStandardisationQig = false;\r\n            //Flag to identify whether the qig is in standardisation setup progress\r\n            var selectedQig = _this.props.qigItemsList.filter(function (x) { return x.id === _this.selectedQigItemId; });\r\n            var coordinationComplete = selectedQig[0].coordinationComplete;\r\n            if (teams && teams.team.subordinates) {\r\n                _this._isEntireTeamSelected = teams.team.toTeam;\r\n                _this.toFieldValues = new Array();\r\n                _this.toFieldIds = new Array();\r\n                _this._selectedTeamList = new Array();\r\n                if (_this.props.messageType === enums.MessageType.InboxReply) {\r\n                    _this.toFieldIds.push(_this.props.selectedMessage.fromExaminerId);\r\n                    _this.toFieldValues.push(_this.props.selectedMessage.examinerDetails.fullName);\r\n                    _this._selectedTeamList.push(_this.props.selectedMessage.examinerDetails.fullName);\r\n                    _this.isSubordinateSelected = _this.isReplyToSubordinate(teams.team.subordinates);\r\n                }\r\n                else if (!coordinationComplete) {\r\n                    // If the message is against standardisationsetup qig or response the receiver \r\n                    // should be stm parent else all work as existing\r\n                    if (teams.team.stmParent) {\r\n                        _this.toFieldIds.push(teams.team.stmParent.examinerId);\r\n                        _this.toFieldValues.push(teams.team.stmParent.fullName);\r\n                        _this._selectedTeamList.push(teams.team.stmParent.fullName);\r\n                        _this.isShowTeamListPopup = false;\r\n                        _this.isSubordinateSelected = false;\r\n                        // Disabling button if the user sends message against standardisation response or Qig\r\n                        _this._disableToButtonForStandardisationQig = true;\r\n                    }\r\n                }\r\n                else if (teams.team.subordinates.length === 0) {\r\n                    if (teams.team.parent) {\r\n                        _this.setMessagePanelToTabForParent(teams.team.parent);\r\n                    }\r\n                }\r\n            }\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * Handles the action event on To address list Received.\r\n         */\r\n        _this.messagePriorityUpdate = function () {\r\n            _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * Set the selected language state upon successfull confirmation from locale store.\r\n         */\r\n        _this.languageChanged = function () {\r\n            _this.setState({\r\n                renderedOn: Date.now()\r\n            });\r\n        };\r\n        /**\r\n         * Handles the action event on To address list Received.\r\n         */\r\n        _this.isTinyMCELoaded = function (isLoaded) {\r\n            _this.setState({\r\n                isTinyMCELoaded: isLoaded\r\n            });\r\n        };\r\n        // Set the default states\r\n        _this.state = {\r\n            renderedOn: 0,\r\n            qigDropDownStyle: {},\r\n            isTinyMCELoaded: false\r\n        };\r\n        _this._selectedTeamList = new Array();\r\n        _this.teamListReceived = _this.teamListReceived.bind(_this);\r\n        _this._mandatoryMessagesFromMarkingToolCC = configurablecharacteristicshelper.getCharacteristicValue(configurablecharacteristicsnames.MandatoryMessagesFromMarkingTool).toLowerCase() === 'true' ? true : false;\r\n        _this.doShowMandatoryMessagePriority = _this.doShowMandatoryMessagePriority.bind(_this);\r\n        _this.doHideToButton = _this.doHideToButton.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    MessagePopup.prototype.render = function () {\r\n        var _this = this;\r\n        var addressListPopup = this.isShowTeamListPopup ? (React.createElement(TeamListPopup, { isShowTeamListPopup: this.isShowTeamListPopup, id: 'teamlist-popup', key: 'teamlist-popup', selectedLanguage: this.props.selectedLanguage })) : null;\r\n        var toAddressListPopup = (React.createElement(\"div\", null,\r\n            React.createElement(\"button\", { className: 'secondary rounded popup-nav to-address-btn', \"aria-haspopup\": 'true', \"data-popup\": 'addressListPopUp', onClick: this.showToAddressList, id: 'messageToButton', key: 'messageToButton_key', disabled: this.doDisableToButton() }, localeStore.instance.TranslateText('messaging.compose-message.to-button')),\r\n            addressListPopup));\r\n        var _showMandatoryMessagePriority = this.doShowMandatoryMessagePriority();\r\n        var _doHideToButton = this.doHideToButton();\r\n        return (React.createElement(\"div\", { className: classNames('popup full-width popup-overlay  messaging', { 'open': this.props.isOpen }, { 'minimized': this.isMessagePopupMinimized }), id: 'composeMessage', role: 'dialog', \"aria-labelledby\": 'popup2Title', \"aria-describedby\": 'popup2Desc' },\r\n            React.createElement(\"div\", { className: 'popup-wrap compose-new-msg' },\r\n                React.createElement(\"div\", { className: 'popup-content', id: 'popup2Desc' },\r\n                    React.createElement(\"div\", { className: 'comp-msg-top' },\r\n                        React.createElement(\"div\", { className: 'qig-menu-holder' },\r\n                            this.renderQigSection(),\r\n                            React.createElement(\"div\", { className: 'set-priority' },\r\n                                React.createElement(MessagePriorityDropDown, { id: 'select_priority', dropDownType: enums.DropDownType.Priority, className: 'dropdown-wrap align-right', selectedItem: this.getPriorityDropDownItem(this.priorityDropDownSelectedItem), isOpen: this.clickedDropDown === enums.DropDownType.Priority ? this.isDropDownOpen : undefined, items: [{\r\n                                            id: enums.MessagePriority.Standard,\r\n                                            name: this.getPriorityDropDownItem(enums.MessagePriority.Standard)\r\n                                        },\r\n                                        {\r\n                                            id: enums.MessagePriority.Important,\r\n                                            name: this.getPriorityDropDownItem(enums.MessagePriority.Important)\r\n                                        },\r\n                                        _showMandatoryMessagePriority ? {\r\n                                            id: enums.MessagePriority.Mandatory,\r\n                                            name: this.getPriorityDropDownItem(enums.MessagePriority.Mandatory)\r\n                                        } : null], onClick: this.onDropDownClick, onSelect: this.onSelect }))),\r\n                        this.renderAssociatedResponseSection(),\r\n                        React.createElement(\"div\", { className: 'msg-recipient-wrap' },\r\n                            React.createElement(\"div\", { className: 'rec-address-label', id: 'message-popup-to-label' }, _doHideToButton ?\r\n                                localeStore.instance.TranslateText('messaging.compose-message.to-button') + ':' :\r\n                                toAddressListPopup),\r\n                            React.createElement(\"div\", { className: 'recipiants-list-wrap' }, this._isEntireTeamSelected ?\r\n                                React.createElement(\"span\", { className: 'recipiant-name', id: 'message-recipiant-name' }, localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.entire-team') + ';') :\r\n                                this._selectedTeamList.map(function (item, index) {\r\n                                    return React.createElement(\"span\", { className: 'recipiant-name', key: 'recipiant-name' + index.toString() }, item);\r\n                                }))),\r\n                        React.createElement(\"div\", { className: 'comp-subject-wrap' },\r\n                            React.createElement(\"label\", { htmlFor: 'message-subject', id: 'subject-label-popup', className: 'comp-subject-label' }, localeStore.instance.TranslateText('messaging.compose-message.subject') + ':'),\r\n                            React.createElement(Subject, { id: 'message-subject', key: 'key-message-subject', outerClass: 'subject-input-wrap', refName: 'subjectInput', hasFocus: (this.props.messageType === enums.MessageType.InboxCompose ||\r\n                                    this.props.messageType === enums.MessageType.WorklistCompose ||\r\n                                    this.props.messageType === enums.MessageType.TeamCompose), className: 'subject-input', onChange: this.handleSubjectChange, maxLength: 120, isVisible: this.props.isOpen, value: this.messageSubject }))),\r\n                    React.createElement(\"div\", { className: 'comp-msg-bottom', ref: 'msgEditor' },\r\n                        React.createElement(\"div\", { className: 'msg-editor' },\r\n                            React.createElement(MessageEditor, { htmlContent: this.messageBody, id: this.msgEditorId, key: 'key-' + this.msgEditorId, hasFocus: messageHelper.hasFocus(this.props.messageType), \"aria-label\": this.msgEditorId, toggleSaveButtonState: this.toggleSaveButtonState, selectedLanguage: this.props.selectedLanguage, isTinyMCELoaded: this.isTinyMCELoaded })))),\r\n                React.createElement(\"div\", { className: 'popup-header compose-msg-header' },\r\n                    React.createElement(\"h3\", { id: 'popup2Title', className: 'shift-left comp-msg-title' }, messageHelper.getMessageHeader(this.props.messageType)),\r\n                    React.createElement(\"div\", { className: 'shift-left comp-msg-butons' },\r\n                        React.createElement(GenericButton, { id: 'message_send_btn', key: 'key_message_send_btn', className: 'button primary rounded', title: localeStore.instance.TranslateText('messaging.compose-message.send-button-tooltip'), content: localeStore.instance.TranslateText('messaging.compose-message.send-button'), disabled: this.isSendButtonDisabled || this.isShowTeamListPopup, onClick: function () { _this.messageSendValidationCheck(_this.props.messageType); } })),\r\n                    React.createElement(\"div\", { className: 'shift-right minimize-message' },\r\n                        React.createElement(\"a\", { href: 'javascript:void(0)', className: 'minimize-message-link', id: 'message-minimize', title: localeStore.instance.TranslateText('messaging.compose-message.minimise-icon-tooltip'), onClick: this.onMinimize },\r\n                            React.createElement(\"span\", { className: 'minimize-icon lite' }, localeStore.instance.TranslateText('messaging.compose-message.minimise-icon-tooltip'))),\r\n                        React.createElement(\"a\", { href: 'javascript:void(0)', className: 'maximize-message-link', id: 'message-maximize', title: localeStore.instance.TranslateText('messaging.compose-message.maximise-icon-tooltip'), onClick: this.onMaximize },\r\n                            React.createElement(\"span\", { className: 'maxmize-icon lite' }, localeStore.instance.TranslateText('messaging.compose-message.maximise-icon-tooltip'))),\r\n                        React.createElement(\"a\", { href: 'javascript:void(0)', className: 'close-message-link', title: localeStore.instance.TranslateText('messaging.compose-message.close-icon-tooltip'), id: 'message-close', onClick: this.onMessageClose },\r\n                            React.createElement(\"span\", { className: 'close-icon lite' }, localeStore.instance.TranslateText('messaging.compose-message.close-icon-tooltip'))))))));\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    MessagePopup.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.SEND_MESSAGE_SUCCESS_EVENT, this.resetAndCloseMessagePanel);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.onOpen);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_NAVIGATE_EVENT, this.onNavigateAwayFromInbox);\r\n        messageStore.instance.addListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        window.addEventListener('click', this._boundHandleOnClick);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_MINIMIZE_EVENT, this.onMinimizeMessagePanel);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_MAXIMIZE_EVENT, this.onMaximizeMessagePanel);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_NAVIGATION_EVENT, this.onNavigateFromMessagePanel);\r\n        messageStore.instance.addListener(messageStore.MessageStore.UPDATE_TEAM_LIST_RECEIVED, this.updatedTeamListReceived);\r\n        messageStore.instance.addListener(messageStore.MessageStore.TEAM_LIST_RECEIVED, this.teamListReceived);\r\n        messageStore.instance.addListener(messageStore.MessageStore.UPDATE_MESSAGE_PRIORITY_EVENT, this.messagePriorityUpdate);\r\n        teamManagementStore.instance.addListener(teamManagementStore.TeamManagementStore.APPROVAL_MANAGEMENT_ACTION_EXECUTED, this.examinerValidation);\r\n        applicationStore.instance.addListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n        localeStore.instance.addListener(localeStore.LocaleStore.LOCALE_CHANGE_EVENT, this.languageChanged);\r\n        // Set the variables from props.\r\n        if (this.props.messageType === enums.MessageType.TeamCompose) {\r\n            this.selectedQig = this.props.selectedQigItem;\r\n            this.selectedQigItemId = this.props.selectedQigItemId;\r\n            this.questionPaperPartId = this.props.questionPaperPartId;\r\n            this.onOpen(enums.MessageType.TeamCompose);\r\n        }\r\n    };\r\n    /**\r\n     * Component will unmount\r\n     */\r\n    MessagePopup.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.SEND_MESSAGE_SUCCESS_EVENT, this.resetAndCloseMessagePanel);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.onOpen);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_NAVIGATE_EVENT, this.onNavigateAwayFromInbox);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        window.removeEventListener('click', this._boundHandleOnClick);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_MINIMIZE_EVENT, this.onMinimizeMessagePanel);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_MAXIMIZE_EVENT, this.onMaximizeMessagePanel);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_NAVIGATION_EVENT, this.onNavigateFromMessagePanel);\r\n        keyDownHelper.instance.Activate(enums.MarkEntryDeactivator.Messaging);\r\n        if (messageStore.instance.messageViewAction !== enums.MessageViewAction.None) {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.None);\r\n        }\r\n        messageStore.instance.removeListener(messageStore.MessageStore.UPDATE_TEAM_LIST_RECEIVED, this.updatedTeamListReceived);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.TEAM_LIST_RECEIVED, this.teamListReceived);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.UPDATE_MESSAGE_PRIORITY_EVENT, this.messagePriorityUpdate);\r\n        teamManagementStore.instance.removeListener(teamManagementStore.TeamManagementStore.APPROVAL_MANAGEMENT_ACTION_EXECUTED, this.examinerValidation);\r\n        applicationStore.instance.removeListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n        localeStore.instance.removeListener(localeStore.LocaleStore.LOCALE_CHANGE_EVENT, this.languageChanged);\r\n    };\r\n    /**\r\n     * Component will receive props\r\n     * @param {Props} nextProps\r\n     */\r\n    MessagePopup.prototype.componentWillReceiveProps = function (nextProps) {\r\n        // Defect 44392 fix - select a qig text in message area is not getting localized upon changing language \r\n        if (nextProps.selectedQigItemId > 0) {\r\n            this.selectedQig = nextProps.selectedQigItem;\r\n        }\r\n        else {\r\n            this.selectedQig = localeStore.instance.TranslateText('messaging.compose-message.select-qig-placeholder');\r\n        }\r\n        this.selectedQigItemId = nextProps.selectedQigItemId;\r\n        this.questionPaperPartId = nextProps.questionPaperPartId;\r\n        // to close teamlist popup while opening new message\r\n        if (this.selectedQigItemId === 0) {\r\n            this.isShowTeamListPopup = false;\r\n        }\r\n    };\r\n    /**\r\n     * Set Inbox Forward and Replay Message details\r\n     */\r\n    MessagePopup.prototype.setInboxForwardReplyMessageDetails = function () {\r\n        keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.Messaging);\r\n        // set messageSubject for reply and forward messages\r\n        if ((this.props.messageType === enums.MessageType.InboxForward || this.props.messageType === enums.MessageType.InboxReply)\r\n            && this.props.isReplyOrForwardClicked && this.props.selectedMessage) {\r\n            // reset isMessagePopupMinimized variable\r\n            this.isMessagePopupMinimized = false;\r\n            this.messageSubject = messageHelper.getSubjectContent(this.props.messageType, this.props.subject);\r\n            this.priorityDropDownSelectedItem = this.props.priorityDropDownSelectedItem;\r\n            this.messageBody = this.props.messageBody;\r\n            var qigId_1 = this.props.selectedQigItemId;\r\n            var examinerRoleId = this.props.qigItemsList.filter(function (x) { return x.id === qigId_1; })[0].examinerRoleId;\r\n            var args = {\r\n                examinerRoleId: examinerRoleId,\r\n                qigId: qigId_1\r\n            };\r\n            // get the teamdetails to find whether atleast one subordinate is\r\n            // selected(for displaying mandatory priority options)\r\n            messagingActionCreator.getTeamDetails(args);\r\n        }\r\n    };\r\n    /**\r\n     * Component did update\r\n     */\r\n    MessagePopup.prototype.componentDidUpdate = function () {\r\n        // enable or disable send button while changing QIG dropdown\r\n        if (this.props.isOpen) {\r\n            this.enableDisableSendButton();\r\n        }\r\n        if (this.doTriggerMessageOpenEvent) {\r\n            this.doTriggerMessageOpenEvent = false;\r\n            this.onOpen(this.msgType);\r\n        }\r\n    };\r\n    /**\r\n     * To avoid the qigs in which the selected examiner has no supervisor\r\n     * @param {Array<Item>} qigItemsList\r\n     * @returns\r\n     */\r\n    MessagePopup.prototype.filterQigItems = function (qigItemsList) {\r\n        return qigItemsList.filter(function (x) { return x.parentExaminerId !== 0; });\r\n    };\r\n    /**\r\n     * To show madatory message priority option in dropdown\r\n     */\r\n    MessagePopup.prototype.doShowMandatoryMessagePriority = function () {\r\n        var _this = this;\r\n        var isMandatoryPriorityAvailable = false;\r\n        // Mandatory Message Priority is availability only if :\r\n        // 1. It is a TeamCompose as TeamCompose is always to subordinates. OR\r\n        // 2. If not WorklistCompose as WorklistCompose will be always to Supervisor. AND\r\n        //      (i).[QIG is not selected.] OR\r\n        //      (ii).[If QIG is selected AND there are no selected examiners.] OR\r\n        //      (iii).[If QIG is selected AND there are selected examiners AND atleast one subordinate is selected.]\r\n        // PS : ResponseCompose Scenarios are handled in message.tsx\r\n        if (this.props.messageType === enums.MessageType.TeamCompose ||\r\n            (this.props.messageType !== enums.MessageType.WorklistCompose &&\r\n                (this.selectedQigItemId === 0 ||\r\n                    (this.selectedQigItemId > 0 && this._selectedTeamList && this._selectedTeamList.length === 0) ||\r\n                    (this.selectedQigItemId > 0 && this._selectedTeamList && this._selectedTeamList.length > 0 && this.isSubordinateSelected)))) {\r\n            isMandatoryPriorityAvailable = true;\r\n        }\r\n        if (this.props.qigItemsList.length > 0 && this.selectedQigItemId > 0) {\r\n            var selectedQig = this.props.qigItemsList.filter(function (x) { return x.id === _this.selectedQigItemId; });\r\n            var currentExaminerApprovalStatus = selectedQig[0].approvalStatusId;\r\n            if (currentExaminerApprovalStatus === enums.ExaminerApproval.NotApproved ||\r\n                currentExaminerApprovalStatus === enums.ExaminerApproval.Suspended) {\r\n                isMandatoryPriorityAvailable = false;\r\n            }\r\n        }\r\n        return this._mandatoryMessagesFromMarkingToolCC && isMandatoryPriorityAvailable;\r\n    };\r\n    /**\r\n     * show or hide 'To' button\r\n     */\r\n    MessagePopup.prototype.doHideToButton = function () {\r\n        var _subordinates = null;\r\n        if (messageStore.instance.teamDetails &&\r\n            messageStore.instance.teamDetails.team &&\r\n            messageStore.instance.teamDetails.team.subordinates) {\r\n            _subordinates = messageStore.instance.teamDetails.team.subordinates;\r\n        }\r\n        return ((_subordinates && _subordinates.length) === 0 ||\r\n            this.props.messageType === enums.MessageType.InboxReply ||\r\n            this.props.messageType === enums.MessageType.WorklistCompose ||\r\n            this.props.messageType === enums.MessageType.TeamCompose);\r\n    };\r\n    /**\r\n     * Get selected subordinated list.\r\n     */\r\n    MessagePopup.prototype.getSelectedSubordinateList = function (teamList) {\r\n        var that = this;\r\n        teamList.map(function (examinerInfo) {\r\n            if (examinerInfo.isChecked) {\r\n                that.isSubordinateSelected = true;\r\n                that._selectedTeamList.push(examinerInfo.fullName + ';');\r\n            }\r\n            if (examinerInfo.subordinates.length > 0) {\r\n                that.getSelectedSubordinateList(examinerInfo.subordinates);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Ensure Reply is done to a subordinate.\r\n     */\r\n    MessagePopup.prototype.isReplyToSubordinate = function (teamList) {\r\n        // Suboridinates of the current examiner will be passed here\r\n        // If the selectedMessage.fromExaminerId is one among them, set isSubordinate as true.\r\n        var that = this;\r\n        var isSubordinate = false;\r\n        teamList.map(function (examinerInfo) {\r\n            if (examinerInfo.examinerId === that.props.selectedMessage.fromExaminerId) {\r\n                isSubordinate = true;\r\n            }\r\n            if (examinerInfo.subordinates.length > 0) {\r\n                that.isReplyToSubordinate(examinerInfo.subordinates);\r\n            }\r\n        });\r\n        return isSubordinate;\r\n    };\r\n    /**\r\n     * This method will set message panel property for sending message to the parent\r\n     */\r\n    MessagePopup.prototype.setMessagePanelToTabForParent = function (parent) {\r\n        this.toFieldIds.push(parent.examinerId);\r\n        this.toFieldValues.push(parent.fullName);\r\n        this._selectedTeamList.push(parent.fullName);\r\n        this.isSubordinateSelected = false;\r\n    };\r\n    /**\r\n     * check to enable to button\r\n     */\r\n    MessagePopup.prototype.doDisableToButton = function () {\r\n        if (this.selectedQigItemId === 0 ||\r\n            !messageStore.instance.teamDetails ||\r\n            messageStore.instance.teamDetails.team.subordinates.length === 0 || this._disableToButtonForStandardisationQig) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return MessagePopup;\r\n}(MessageBase));\r\nmodule.exports = MessagePopup;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 459:
/* no static exports found */
/* all exports used */
/*!********************************************************************!*\
  !*** ./src/components/utility/message/messagetranslationhelper.ts ***!
  \********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar stringHelper = __webpack_require__(/*! ../../../utility/generic/stringhelper */ 254);\r\nvar messageHelper = __webpack_require__(/*! ./messagehelper */ 283);\r\nvar constants = __webpack_require__(/*! ../constants */ 241);\r\nvar messageTranslationHandlerConstants = __webpack_require__(/*! ../messagetranslationhandlerconstants */ 520);\r\nvar enums = __webpack_require__(/*! ../enums */ 225);\r\nvar MessageTranslationHelper = /** @class */ (function () {\r\n    function MessageTranslationHelper() {\r\n    }\r\n    /**\r\n     * This method will return the translated content for translatable system messages from language json file other wise it will return\r\n     * the normal message contents.\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getTranslatedContent = function (message) {\r\n        var translatedMessageContent;\r\n        // if examBodyMessageTypeId is null then return loaded subject and content\r\n        if (!message.examBodyMessageTypeId || message.examBodyMessageTypeId === enums.SystemMessage.None) {\r\n            translatedMessageContent = {\r\n                subject: message.subject,\r\n                content: message.messageBody,\r\n                firstLine: message.examinerMessageBodyFirstLine\r\n            };\r\n        }\r\n        else {\r\n            translatedMessageContent = this.translate(message.examBodyMessageTypeId, this.getParameterForMessageTranslation(message));\r\n            if (translatedMessageContent.subject === undefined || translatedMessageContent.content === undefined) {\r\n                translatedMessageContent.subject = message.subject;\r\n                translatedMessageContent.content = message.messageBody;\r\n                translatedMessageContent.firstLine = message.examinerMessageBodyFirstLine;\r\n            }\r\n        }\r\n        return translatedMessageContent;\r\n    };\r\n    /**\r\n     * Returns the translated message contents\r\n     * @param systemMessageType\r\n     * @param parameters: string array for replacing place holders\r\n     */\r\n    MessageTranslationHelper.translate = function (systemMessageType, parameters) {\r\n        var subject;\r\n        var content;\r\n        if (systemMessageType !== null && systemMessageType !== enums.SystemMessage.None) {\r\n            // if system message is Automated marker message and metadata is offHold then we have to display offHold message content\r\n            var contentKey = systemMessageType === enums.SystemMessage.AutomatedMarkerMessage ?\r\n                parameters[1].trim() === 'OnHold' ? '.content-removed' : parameters[1].trim() === 'Removed' ?\r\n                    '.content-permanently-removed' : '.content-replaced' : '.content';\r\n            subject = stringHelper.format(localeStore.instance.TranslateText('messaging.system-messages.' + systemMessageType + '.subject'), parameters);\r\n            content = stringHelper.format(localeStore.instance.TranslateText('messaging.system-messages.' + systemMessageType + contentKey), parameters);\r\n        }\r\n        return { subject: subject, content: content, firstLine: this.getMessageBodyFirstLine(content) };\r\n    };\r\n    /**\r\n     * Return the from examiner name or 'System Message' text\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getExaminerName = function (message) {\r\n        var examinerFullName;\r\n        var systemMessageType = !message.examBodyMessageTypeId ? enums.SystemMessage.None :\r\n            message.examBodyMessageTypeId;\r\n        // system messages having their From username shown as system message\r\n        switch (systemMessageType) {\r\n            case enums.SystemMessage.AutomaticSamplingCompleted:\r\n            case enums.SystemMessage.DeAllocationRemarkResponseRemoved:\r\n            case enums.SystemMessage.MarkingInstructionUpdated:\r\n            case enums.SystemMessage.MarkingInstructionUploaded:\r\n            case enums.SystemMessage.RIGRemoved:\r\n            case enums.SystemMessage.RemarkDeleted:\r\n            case enums.SystemMessage.GracePeriodUpdate:\r\n            case enums.SystemMessage.RefreshMarkingTargets:\r\n                examinerFullName = localeStore.instance.TranslateText('messaging.message-lists.message-detail.system-message');\r\n                break;\r\n            default:\r\n                examinerFullName = message.examinerDetails.fullName;\r\n        }\r\n        return examinerFullName;\r\n    };\r\n    /**\r\n     * This method will returns the build replacing parameters\r\n     * @param message: message contents\r\n     */\r\n    MessageTranslationHelper.getParameterForMessageTranslation = function (message) {\r\n        var parameters = new Array();\r\n        var systemMessageType = !message.examBodyMessageTypeId ? enums.SystemMessage.None :\r\n            message.examBodyMessageTypeId;\r\n        switch (systemMessageType) {\r\n            // QIG\r\n            case enums.SystemMessage.AutoApprovedMarker:\r\n            case enums.SystemMessage.AutoApprovedReviewer:\r\n            case enums.SystemMessage.AutoApprovedSystem:\r\n            case enums.SystemMessage.ConditionallyApprovedMarker:\r\n            case enums.SystemMessage.ConditionallyApprovedReviewer:\r\n            case enums.SystemMessage.ConditionallyApprovedSystem:\r\n            case enums.SystemMessage.AutoSuspendMarker:\r\n            case enums.SystemMessage.AutoSuspendReviewer:\r\n            case enums.SystemMessage.CheckMyMarks:\r\n            case enums.SystemMessage.LockedExaminerWithDrawn:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            case enums.SystemMessage.MarkingInstructionUpdated:\r\n            case enums.SystemMessage.MarkingInstructionUploaded:\r\n                parameters.push(this.getMarkingInstructionParameters(message));\r\n                break;\r\n            // Display ID\r\n            case enums.SystemMessage.AutomatedMarkerMessage:\r\n            case enums.SystemMessage.ZoningExceptionRaised:\r\n            case enums.SystemMessage.ZoningExceptionResolved:\r\n                parameters.push(this.getDisplayId(message));\r\n                parameters.push(message.bodyMetadata);\r\n                break;\r\n            case enums.SystemMessage.CandidateFeedUpdated:\r\n                parameters.push(this.getDisplayId(message));\r\n                break;\r\n            // QIG and DisplayId\r\n            case enums.SystemMessage.RIGRemoved:\r\n                parameters.push(this.getDisplayId(message));\r\n                // pushing the qig name\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            // QIG and Targets\r\n            case enums.SystemMessage.RefreshMarkingTargets:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                // pushing targets\r\n                var targets = this.getTargets(message);\r\n                parameters.push(targets);\r\n                break;\r\n            case enums.SystemMessage.GracePeriodUpdate:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                // pushing grace period details\r\n                var gracePeriodDetails = new Array();\r\n                gracePeriodDetails = this.getGracePeriodDetails(message);\r\n                for (var i = 0; i < gracePeriodDetails.length; i++) {\r\n                    parameters.push(gracePeriodDetails[i]);\r\n                }\r\n                break;\r\n            // Approval status required current, from and to\r\n            case enums.SystemMessage.IndirectSubordinateStatusUpdate:\r\n                // pushing approval status\r\n                var statusDetails = new Array();\r\n                statusDetails = this.getStatus(message);\r\n                for (var i = 0; i < statusDetails.length; i++) {\r\n                    parameters.push(statusDetails[i]);\r\n                }\r\n                break;\r\n            // DisplayID and question item.\r\n            case enums.SystemMessage.RemarkDeleted:\r\n                parameters.push(this.getDisplayId(message));\r\n                // push mark scheme group name\r\n                parameters.push(messageHelper.getMarkSchemeGroupName(message));\r\n                break;\r\n            case enums.SystemMessage.DeAllocationRemarkResponseRemoved:\r\n                // pushing the qig name\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            case enums.SystemMessage.MarksChecked:\r\n                parameters.push(messageHelper.getMarkSchemeGroupName(message));\r\n                break;\r\n            case enums.SystemMessage.RemarkRequestedCompleted:\r\n                // parameters are not required as per current template\r\n                break;\r\n            // 9 - Message Template is not available\r\n            case enums.SystemMessage.RefreshQuestionPaperStructure:\r\n            // 15 - Message Template is not available\r\n            case enums.SystemMessage.AutomaticSamplingCompleted:\r\n            // 27 - Message Template is not available\r\n            case enums.SystemMessage.TakeResponse:\r\n                // pushing take response details\r\n                var takeResponseDetails = new Array();\r\n                takeResponseDetails = this.getMetaDataDetails(message);\r\n                for (var i = 0; i < takeResponseDetails.length; i++) {\r\n                    parameters.push(takeResponseDetails[i]);\r\n                }\r\n                break;\r\n        }\r\n        return parameters;\r\n    };\r\n    /**\r\n     * Returns message body first line based on the no of words\r\n     * @param messageBody\r\n     * @param noOfWords\r\n     */\r\n    MessageTranslationHelper.getMessageBodyFirstLine = function (messageBody) {\r\n        var messageBodyFirstLine = '';\r\n        if (messageBody !== undefined || messageBody !== '') {\r\n            messageBodyFirstLine = messageBody.split(' ', constants.MAX_MESSAGE_BODY_FIRST_LINE_WORDS).join(' ');\r\n        }\r\n        return messageBodyFirstLine;\r\n    };\r\n    /**\r\n     * Get targets from message metadata for RefreshMarkingTargets system message\r\n     * Marking Target update handler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getTargets = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var targets = bodyMetaParameters[messageTranslationHandlerConstants.TARGETS_DICTIONARY].split(',');\r\n        var target;\r\n        for (var i = 0; i < targets.length; i++) {\r\n            if (targets[i] !== '') {\r\n                target = targets[i].replace('TargetType_', '');\r\n                switch (target) {\r\n                    case 'STMStandardisationMarking':\r\n                        target = 'ES_TeamApproval';\r\n                        break;\r\n                    case 'SecondStandardisation':\r\n                        target = 'SecondStandardisation';\r\n                        break;\r\n                    case 'Live':\r\n                        target = 'LiveMarking';\r\n                        break;\r\n                    case 'Standardisation':\r\n                        target = 'Approval';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                targetCollection.push(localeStore.instance.TranslateText('generic.marking-modes.' + target));\r\n            }\r\n        }\r\n        var remarkTargets = bodyMetaParameters[messageTranslationHandlerConstants.REMARKTARGETS_DICTIONARY].split(',');\r\n        for (var i = 0; i < remarkTargets.length; i++) {\r\n            if (remarkTargets[i] !== '') {\r\n                targetCollection.push(localeStore.instance.TranslateText('generic.remark-types.long-names.' + remarkTargets[i]));\r\n            }\r\n        }\r\n        // return comma seperated targets\r\n        return targetCollection.join(', ');\r\n    };\r\n    /**\r\n     * Get Indirect Subordinate status from message metadata for IndirectSubordinateStatusUpdate system message\r\n     * IndirectSubordinateStatusUpdateHandler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getStatus = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var markerName = bodyMetaParameters[messageTranslationHandlerConstants.MARKER];\r\n        targetCollection.push(markerName);\r\n        var oldApprovalStatus = parseInt(bodyMetaParameters[messageTranslationHandlerConstants.OLD_STATUS]);\r\n        targetCollection.push(localeStore.instance.TranslateText('generic.approval-statuses.' +\r\n            enums.getEnumString(enums.ExaminerApproval, oldApprovalStatus)));\r\n        var newApprovalStatus = parseInt(bodyMetaParameters[messageTranslationHandlerConstants.NEW_STATUS]);\r\n        targetCollection.push(localeStore.instance.TranslateText('generic.approval-statuses.' +\r\n            enums.getEnumString(enums.ExaminerApproval, newApprovalStatus)));\r\n        return targetCollection;\r\n    };\r\n    /**\r\n     * get details from the body metadata string.\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMetaDataDetails = function (message) {\r\n        var dataCollection = new Array();\r\n        var metaDataDetails = this.getMessageBodyMetaParameters(message, '#', ':');\r\n        if (metaDataDetails) {\r\n            var displayID = parseFloat(metaDataDetails[messageTranslationHandlerConstants.DISPLAY_ID]);\r\n            dataCollection.push(displayID.toString());\r\n            var worklistType = metaDataDetails[messageTranslationHandlerConstants.WORKLIST_TYPE];\r\n            dataCollection.push(worklistType.toString());\r\n            var exceptionType = metaDataDetails[messageTranslationHandlerConstants.EXCEPTION_TYPE];\r\n            dataCollection.push(exceptionType.toString());\r\n            var seniorExaminerName = metaDataDetails[messageTranslationHandlerConstants.SENIOR_EXAMINER_NAME];\r\n            dataCollection.push(seniorExaminerName.toString());\r\n        }\r\n        return dataCollection;\r\n    };\r\n    /**\r\n     * Get Grace period details from message metadata for grace period update system message\r\n     * IndirectSubordinateStatusUpdateHandler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getGracePeriodDetails = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var oldGracePeriod = parseFloat(bodyMetaParameters[messageTranslationHandlerConstants.OLD_GRACE_PERIOD]);\r\n        targetCollection.push(oldGracePeriod.toString());\r\n        var newGracePeriod = parseFloat(bodyMetaParameters[messageTranslationHandlerConstants.NEW_GRACE_PERIOD]);\r\n        targetCollection.push(newGracePeriod.toString());\r\n        return targetCollection;\r\n    };\r\n    /**\r\n     * This method will process message metadata string\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMessageBodyMetaParameters = function (message, splitter1, splitter2) {\r\n        var bodyMetaParameters = new Object();\r\n        if (message.bodyMetadata != null && message.bodyMetadata !== undefined) {\r\n            var pairs = message.bodyMetadata.split(splitter1);\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                if (pairs[i].trim().length === 0) {\r\n                    continue;\r\n                }\r\n                var bits = pairs[i].split(splitter2);\r\n                if (bits.length < 2 || bits[0].length === 0) {\r\n                    continue;\r\n                }\r\n                bodyMetaParameters[bits[0]] = bits[1];\r\n            }\r\n        }\r\n        return bodyMetaParameters;\r\n    };\r\n    /**\r\n     * This will return the displayId with prefix '6'\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getDisplayId = function (message) {\r\n        return '6' + message.relatedResponseDisplayId.toString();\r\n    };\r\n    /**\r\n     * This will return string for particular enum value from resource file\r\n     * @param sampleReivewComment\r\n     */\r\n    MessageTranslationHelper.getCustomEnumString = function (sampleReivewComment, buttonType) {\r\n        switch (buttonType) {\r\n            case enums.ButtonType.Sampling:\r\n                return localeStore.instance.\r\n                    TranslateText('team-management.response.supervisor-sampling-comments.' + sampleReivewComment);\r\n            case enums.ButtonType.SetAsReviewed:\r\n                return localeStore.instance.\r\n                    TranslateText('team-management.response.review-comments.' + sampleReivewComment);\r\n        }\r\n    };\r\n    /**\r\n     * gets the message body parameters for marking instructions file upload mandatory message\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMarkingInstructionParameters = function (message) {\r\n        var bodyMetaData = message.bodyMetadata.split('|');\r\n        // if message body metadata has 4 items then it is in QIG level, and has one more parameter to represent QIG name\r\n        if (bodyMetaData.length === 4) {\r\n            return (bodyMetaData[0] + ' - ' + bodyMetaData[1] + ' - ' + bodyMetaData[2]);\r\n        }\r\n        else if (bodyMetaData.length === 3) {\r\n            return (bodyMetaData[0] + ' - ' + bodyMetaData[1]);\r\n        }\r\n    };\r\n    return MessageTranslationHelper;\r\n}());\r\nmodule.exports = MessageTranslationHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 462:
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./src/components/message/messagebase.ts ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar popUpDisplayActionCreator = __webpack_require__(/*! ../../actions/popupdisplay/popupdisplayactioncreator */ 328);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar qualityfeedbackHelper = __webpack_require__(/*! ../../utility/qualityfeedback/qualityfeedbackhelper */ 309);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar teamManagementActionCreator = __webpack_require__(/*! ../../actions/teammanagement/teammanagementactioncreator */ 263);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\nvar Immutable = __webpack_require__(/*! immutable */ 40);\r\nvar MessageBase = /** @class */ (function (_super) {\r\n    __extends(MessageBase, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageBase(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isSelectedItemClicked = false;\r\n        _this.navigateTo = enums.SaveAndNavigate.none;\r\n        _this.msgEditorId = 'msg-tinymce-editor';\r\n        _this._boundHandleOnClick = null;\r\n        _this.isSubordinateSelected = false;\r\n        _this.sendMessageActionInProgress = false;\r\n        _this.messageType = enums.MessageType.None;\r\n        /**\r\n         * Callback function for dropdown select\r\n         */\r\n        _this.onSelect = function (selectedItem, event) {\r\n            _this.priorityDropDownSelectedItem = selectedItem;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         *  Callback function for dropdown click\r\n         */\r\n        _this.onDropDownClick = function (dropDown) {\r\n            _this.clickedDropDown = dropDown;\r\n            _this.isSelectedItemClicked = true;\r\n            if (_this.clickedDropDown === enums.DropDownType.Priority) {\r\n                _this.isQigDropDownOpen = undefined;\r\n                _this.isDropDownOpen = _this.isDropDownOpen === undefined ? true : !_this.isDropDownOpen;\r\n            }\r\n            else if (_this.clickedDropDown === enums.DropDownType.QIG) {\r\n                _this.isDropDownOpen = undefined;\r\n                _this.isQigDropDownOpen = _this.isQigDropDownOpen === undefined ? true : !_this.isQigDropDownOpen;\r\n            }\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Handle click events on the window and collapse priority selection dropdown\r\n         * @param {any} source - The source element\r\n         */\r\n        _this.handleOnClick = function () {\r\n            if (!_this.isSelectedItemClicked && ((_this.isDropDownOpen !== undefined && _this.isDropDownOpen)\r\n                || (_this.isQigDropDownOpen !== undefined && _this.isQigDropDownOpen))) {\r\n                // collapse the priority dropdown\r\n                _this.isDropDownOpen = false;\r\n                _this.isQigDropDownOpen = false;\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n            else {\r\n                _this.isSelectedItemClicked = false;\r\n            }\r\n        };\r\n        /**\r\n         *  This will return the localised string for message priority dropdown\r\n         */\r\n        _this.getPriorityDropDownItem = function (dropDownItem) {\r\n            var localisedDropDownItem;\r\n            switch (dropDownItem) {\r\n                case enums.MessagePriority.Important:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.important');\r\n                    break;\r\n                case enums.MessagePriority.Mandatory:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.mandatory');\r\n                    break;\r\n                default:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.standard');\r\n                    break;\r\n            }\r\n            return localisedDropDownItem;\r\n        };\r\n        /**\r\n         * Method fired when the message is closed.\r\n         */\r\n        _this.onMessageClose = function () {\r\n            // Show discard message if content edited; or just close the panel.\r\n            if (_this.isMessagePanelEdited) {\r\n                messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n                if (_this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick\r\n                    || _this.navigateTo === enums.SaveAndNavigate.toReplyMessage\r\n                    || _this.navigateTo === enums.SaveAndNavigate.toForwardMessage) {\r\n                    popUpDisplayActionCreator.popUpDisplay(enums.PopUpType.DiscardOnNewMessageButtonClick, enums.PopUpActionType.Show, enums.SaveAndNavigate.none, {\r\n                        popupContent: localeStore.instance.TranslateText('messaging.compose-message.discard-message-dialog.body-start-new-message-while-composing')\r\n                    });\r\n                }\r\n                else if (_this.navigateTo === enums.SaveAndNavigate.toNewResponseMessageCompose) {\r\n                    popUpDisplayActionCreator.popUpDisplay(enums.PopUpType.DiscardOnNewMessageButtonClick, enums.PopUpActionType.Show, enums.SaveAndNavigate.none, {\r\n                        popupContent: localeStore.instance.TranslateText('marking.response.discard-message-or-exception-dialog.body')\r\n                    });\r\n                }\r\n                else {\r\n                    var messageType = _this.navigateTo !== enums.SaveAndNavigate.none\r\n                        ? enums.PopUpType.DiscardMessageNavigateAway : enums.PopUpType.DiscardMessage;\r\n                    popUpDisplayActionCreator.popUpDisplay(messageType, enums.PopUpActionType.Show, messageStore.instance.navigateFrom, {\r\n                        popupContent: (_this.navigateTo === enums.SaveAndNavigate.messageWithInResponse ?\r\n                            localeStore.instance.TranslateText('marking.response.discard-message-or-exception-dialog.body') : undefined)\r\n                    });\r\n                }\r\n            }\r\n            else if (_this.navigateTo !== enums.SaveAndNavigate.none && _this.navigateTo !== enums.SaveAndNavigate.messageWithInResponse\r\n                && _this.navigateTo !== enums.SaveAndNavigate.newMessageButtonClick) {\r\n                // hide the message panel and navigate away\r\n                _this.onDiscardMessageConfirmed();\r\n            }\r\n            else if (_this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick) {\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n                _this.isMessagePopupMinimized = false;\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n            else {\r\n                // Close the Message Panel.\r\n                _this.resetAndCloseMessagePanel();\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n            }\r\n        };\r\n        /**\r\n         * Navigate away from current response.\r\n         */\r\n        _this.onNavigateAwayFromResponse = function (navigateTo) {\r\n            _this.navigateTo = navigateTo;\r\n            _this.onMessageClose();\r\n        };\r\n        /**\r\n         * Reset message panel and close\r\n         */\r\n        _this.resetAndCloseMessagePanel = function () {\r\n            _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n            _this.toFieldValues = null;\r\n            _this.toFieldIds = null;\r\n            _this.messageSubject = '';\r\n            _this.messageBody = '';\r\n            _this.isDropDownOpen = undefined;\r\n            _this.isQigDropDownOpen = undefined;\r\n            _this.props.closeMessagePanel(_this.navigateTo);\r\n            _this.selectedQigItemId = undefined;\r\n            _this.questionPaperPartId = undefined;\r\n            messageHelper.handleSubjectChange(_this.messageSubject);\r\n            _this.sendMessageActionInProgress = false;\r\n            // updating message component with default values\r\n            // this enable or Disable send button will call setState\r\n            _this.enableDisableSendButton();\r\n            // Need to Update the UI (Subject box in the message, after closing the message : Bug 28224\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Method fired when discard message is confirmed.\r\n         */\r\n        _this.onDiscardMessageConfirmed = function (actionFromCombinedPopup, navigateTo) {\r\n            if (actionFromCombinedPopup === void 0) { actionFromCombinedPopup = false; }\r\n            if (navigateTo === void 0) { navigateTo = enums.SaveAndNavigate.none; }\r\n            // If message panel is not edited, no need to change the UI while logout\r\n            if (_this.isMessagePanelEdited) {\r\n                // Close the Message Panel.\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n            else if (!_this.isMessagePanelEdited && _this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick) {\r\n                messagingActionCreator.messageAction(enums.MessageViewAction.Open);\r\n            }\r\n            else {\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n            // on message close navigate away from response scenario\r\n            if (_this.navigateTo !== enums.SaveAndNavigate.none && _this.navigateTo !== enums.SaveAndNavigate.messageWithInResponse\r\n                && _this.navigateTo !== enums.SaveAndNavigate.toNewResponseMessageCompose &&\r\n                !(_this.navigateTo === enums.SaveAndNavigate.toResponse && qualityfeedbackHelper.isResponseNavigationBlocked())) {\r\n                if (_this.navigateTo === enums.SaveAndNavigate.toSupervisorRemark) {\r\n                    // Response Going from readonly mode to marking. Reset the message related values from response screen.\r\n                    _this.resetAndCloseMessagePanel();\r\n                }\r\n                // if navigate away from Resposne then close the response and move to worklist.\r\n                popupHelper.navigateAway(_this.navigateTo);\r\n            }\r\n            else if (actionFromCombinedPopup) {\r\n                popupHelper.navigateAway(navigateTo);\r\n            }\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n        };\r\n        /**\r\n         * Method fired when discard message is cancelled.\r\n         */\r\n        _this.onDiscardMessageCancelled = function () {\r\n            // reset navigate away from response\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n            messageHelper.handleSubjectChange(_this.messageSubject);\r\n        };\r\n        /**\r\n         * Handles changes in the message panel subject section.\r\n         * @param e\r\n         */\r\n        _this.handleSubjectChange = function (subject) {\r\n            _this.messageSubject = subject;\r\n            _this.enableDisableSendButton();\r\n            messageHelper.handleSubjectChange(subject);\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Enable and disable send button on tinyMCE editor change.\r\n         */\r\n        _this.toggleSaveButtonState = function () {\r\n            _this.enableDisableSendButton();\r\n        };\r\n        /**\r\n         * Method fired when the message panel is minimized.\r\n         */\r\n        _this.onMinimize = function () {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.Minimize);\r\n        };\r\n        /**\r\n         * Method fired when the message panel is maximized.\r\n         */\r\n        _this.onMaximize = function () {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n        };\r\n        /**\r\n         * This method will call on message send button click\r\n         */\r\n        _this.onMessageSend = function (messageType) {\r\n            _this.enableDisableSendButton();\r\n            var candidateScriptId = undefined;\r\n            var markGroupId = undefined;\r\n            var esMarkGroupId = undefined;\r\n            _this.messageBody = tinymce.get(_this.msgEditorId).getContent();\r\n            switch (messageType) {\r\n                case enums.MessageType.ResponseCompose:\r\n                case enums.MessageType.ResponseReply:\r\n                case enums.MessageType.ResponseForward:\r\n                    // selected Qig id for compose message in response screen\r\n                    _this.selectedQigItemId = qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId;\r\n                    _this.questionPaperPartId = qigStore.instance.selectedQIGForMarkerOperation.questionPaperPartId;\r\n                    var openedResponseDetails = _this.props.responseId ?\r\n                        markerOperationModeFactory.operationMode.openedResponseDetails(_this.props.responseId.toString()) : null;\r\n                    var isEsResponse = (worklistStore.instance.currentWorklistType === enums.WorklistType.standardisation\r\n                        || worklistStore.instance.currentWorklistType === enums.WorklistType.practice ||\r\n                        worklistStore.instance.currentWorklistType === enums.WorklistType.secondstandardisation\r\n                        || markerOperationModeFactory.operationMode.isStandardisationSetupMode) ? true : false;\r\n                    if (openedResponseDetails) {\r\n                        candidateScriptId = openedResponseDetails.candidateScriptId;\r\n                        if (markerOperationModeFactory.operationMode.isStandardisationSetupMode) {\r\n                            esMarkGroupId = openedResponseDetails.esMarkGroupId;\r\n                        }\r\n                        else {\r\n                            markGroupId = isEsResponse ? undefined : openedResponseDetails.markGroupId;\r\n                            esMarkGroupId = isEsResponse ? openedResponseDetails.markGroupId : undefined;\r\n                        }\r\n                    }\r\n                    break;\r\n                // Not setting candidateScriptId, markGroupId, esMarkGroupId if composing message from response and worklist\r\n                // since not associated with any particular response.\r\n                case enums.MessageType.InboxCompose:\r\n                case enums.MessageType.WorklistCompose:\r\n                    break;\r\n                default:\r\n                    var currentMessageDetails = _this.props.selectedMsgDetails;\r\n                    if (currentMessageDetails !== undefined && currentMessageDetails !== null) {\r\n                        candidateScriptId = currentMessageDetails.candidateScriptId;\r\n                        markGroupId = currentMessageDetails.markGroupId;\r\n                        esMarkGroupId = currentMessageDetails.esMarkGroupId;\r\n                    }\r\n                    break;\r\n            }\r\n            // fetching currently selected qig's examiner roleId\r\n            var examinerRoleId = 0;\r\n            var msg = messageStore.instance.messagesMarkSchemes;\r\n            if (msg) {\r\n                msg.forEach(function (message) {\r\n                    if (message.markSchemeGroupId === _this.selectedQigItemId) {\r\n                        examinerRoleId = message.examinerRoleId;\r\n                    }\r\n                });\r\n            }\r\n            var toTeam = messageStore.instance.teamDetails ? messageStore.instance.teamDetails.team.toTeam : false;\r\n            messagingActionCreator.sendExaminerMessage(_this.toFieldIds, _this.messageBody, _this.messageSubject, _this.questionPaperPartId, _this.props.responseId, _this.priorityDropDownSelectedItem, _this.selectedQigItemId, candidateScriptId, markGroupId, esMarkGroupId, toTeam, examinerRoleId);\r\n        };\r\n        /**\r\n         * Navigating away from message panel when the pop up is opened\r\n         */\r\n        _this.onNavigateFromMessagePanel = function (messageNavigationArguments) {\r\n            if (messageNavigationArguments.hasMessageContainsDirtyValue === undefined) {\r\n                // Should be possible to open the response, If the message composed from Team management\r\n                if (_this.isMessagePanelEdited) {\r\n                    messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n                    // To maximise the message panel when the discard popup is shown\r\n                    _this.isMessagePopupMinimized = false;\r\n                    _this.setState({ renderedOn: Date.now() });\r\n                    messageNavigationArguments.hasMessageContainsDirtyValue = true;\r\n                    messagingActionCreator.canMessageNavigate(messageNavigationArguments);\r\n                }\r\n                else if (!messageNavigationArguments.canNavigate) {\r\n                    messagingActionCreator.messageAction(enums.MessageViewAction.Close);\r\n                    messageNavigationArguments.hasMessageContainsDirtyValue = false;\r\n                    if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newException) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.newExceptionButtonClick;\r\n                    }\r\n                    else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.exceptionWithInResponse) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.exceptionWithInResponse;\r\n                    }\r\n                    else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newExceptionFromMediaErrorDialog) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.newExceptionFromMediaErrorDialog;\r\n                    }\r\n                    _this.resetAndCloseMessagePanel();\r\n                    messageNavigationArguments.canNavigate = true;\r\n                    messagingActionCreator.canMessageNavigate(messageNavigationArguments);\r\n                }\r\n            }\r\n            else if (messageNavigationArguments.hasMessageContainsDirtyValue && messageNavigationArguments.canNavigate) {\r\n                _this.isMessagePopupMinimized = false;\r\n                if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newException) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.newExceptionButtonClick;\r\n                }\r\n                else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.exceptionWithInResponse) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.exceptionWithInResponse;\r\n                }\r\n                else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newExceptionFromMediaErrorDialog) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.newExceptionFromMediaErrorDialog;\r\n                }\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n        };\r\n        /**\r\n         * checks whether the supervisor examiner is valid to send a message or not\r\n         */\r\n        _this.messageSendValidationCheck = function (messageType) {\r\n            _this.sendMessageActionInProgress = true;\r\n            _this.messageType = messageType;\r\n            // While in SEP view we need to check whether the supervisor examiner is valid to send a message to subordinate examiner\r\n            if (markerOperationModeFactory.operationMode.isHelpExaminersView) {\r\n                _this.enableDisableSendButton();\r\n                var dataCollection = new Array();\r\n                var examinerSEPAction = {\r\n                    examinerRoleId: qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId,\r\n                    markSchemeGroupId: qigStore.instance.getSelectedQIGForTheLoggedInUser.markSchemeGroupId,\r\n                    requestedByExaminerRoleId: qigStore.instance.getSelectedQIGForTheLoggedInUser.examinerRoleId\r\n                };\r\n                dataCollection.push(examinerSEPAction);\r\n                var examinerSEPActions = Immutable.List(dataCollection);\r\n                var doSEPApprovalManagementActionArgument = {\r\n                    actionIdentifier: enums.SEPAction.SendMessage,\r\n                    examiners: examinerSEPActions\r\n                };\r\n                teamManagementActionCreator.ExecuteApprovalManagementAction(doSEPApprovalManagementActionArgument);\r\n            }\r\n            else {\r\n                _this.onMessageSend(_this.messageType);\r\n            }\r\n        };\r\n        /**\r\n         * To check whether the examiner is valid to send a message\r\n         */\r\n        _this.examinerValidation = function (actionIdentifier) {\r\n            // No need to handle, If user clicks help examiners and immidietly navigated to inbox\r\n            if (_this.props.messageType === enums.MessageType.InboxCompose) {\r\n                return;\r\n            }\r\n            // If there is no failure code then the supervisor examiner is valid to send a message\r\n            if (actionIdentifier === enums.SEPAction.SendMessage) {\r\n                _this.onMessageSend(_this.messageType);\r\n            }\r\n        };\r\n        /**\r\n         * enable send button state on offline\r\n         */\r\n        _this.onOnlineStatusChanged = function () {\r\n            if (!applicationStore.instance.isOnline) {\r\n                _this.toggleSaveButtonState();\r\n            }\r\n        };\r\n        _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n        _this.isSendButtonDisabled = true;\r\n        _this.messageSubject = '';\r\n        _this.messageBody = '';\r\n        _this._boundHandleOnClick = _this.handleOnClick.bind(_this);\r\n        _this.isSubordinateSelected = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MessageBase.prototype, \"isMessagePanelEdited\", {\r\n        /**\r\n         * Returns a boolean indicating whether the message panel is edited.\r\n         */\r\n        get: function () {\r\n            return messageHelper.isMessagePanelEdited(this.props.messageType, this.toFieldValues, this.toFieldIds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets the enable/disable status of send button.\r\n     */\r\n    MessageBase.prototype.enableDisableSendButton = function () {\r\n        var currentSendButtonStatusAfterChange = true;\r\n        var activeEditorgetContentLength = 0;\r\n        // if sending message is in progress no need to execute logic to enabling/ disabling button\r\n        if (!this.sendMessageActionInProgress) {\r\n            var activeEditor = tinymce.get(this.msgEditorId);\r\n            //Defect Id:48277 First time active Editor does not contains 'Body' Then throws exception 'Body Undefined'\r\n            if (activeEditor && activeEditor.contentDocument != null) {\r\n                activeEditorgetContentLength = activeEditor.getContent({ format: 'text' }).trim().length;\r\n            }\r\n            if (this.props.messageType === enums.MessageType.InboxCompose ||\r\n                this.props.messageType === enums.MessageType.ResponseCompose\r\n                || this.props.messageType === enums.MessageType.WorklistCompose ||\r\n                this.props.messageType === enums.MessageType.ResponseReply\r\n                || this.props.messageType === enums.MessageType.ResponseForward ||\r\n                this.props.messageType === enums.MessageType.TeamCompose) {\r\n                currentSendButtonStatusAfterChange = !(this.messageSubject.trim().length > 0 &&\r\n                    (this.toFieldIds && this.toFieldIds.length > 0)\r\n                    && (this.toFieldValues && this.toFieldValues.length > 0)\r\n                    && (activeEditorgetContentLength > 0 ||\r\n                        messageHelper._isPasteEnabled));\r\n            }\r\n            else if (this.props.messageType === enums.MessageType.InboxForward ||\r\n                this.props.messageType === enums.MessageType.InboxReply) {\r\n                currentSendButtonStatusAfterChange = !(this.messageSubject.trim().length > 0\r\n                    && (this.toFieldIds && this.toFieldIds.length > 0)\r\n                    && (this.toFieldValues && this.toFieldValues.length > 0)\r\n                    && this.selectedQigItemId > 1\r\n                    && (activeEditorgetContentLength > 0\r\n                        || messageHelper._isPasteEnabled));\r\n            }\r\n        }\r\n        else {\r\n            // disable send button when send message action is in progress if the application is online\r\n            currentSendButtonStatusAfterChange = applicationStore.instance.isOnline;\r\n        }\r\n        if (this.isSendButtonDisabled !== currentSendButtonStatusAfterChange) {\r\n            this.isSendButtonDisabled = currentSendButtonStatusAfterChange;\r\n            // It is noticed due to render in same time, state change not happening. Add some extra time for rendering.\r\n            this.setState({ renderedOn: Date.now() + 10 });\r\n        }\r\n        // Reset setPasteEnabledAction as false after the paste action fired.\r\n        messageHelper.setPasteEnabledAction(false);\r\n    };\r\n    return MessageBase;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageBase;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 463:
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./src/components/message/messageeditor.tsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar TINYMCE = __webpack_require__(/*! react-tinymce */ 45);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar urls = __webpack_require__(/*! ../../dataservices/base/urls */ 266);\r\nvar messageEditorConstants = __webpack_require__(/*! ../utility/messageeditorconstants */ 325);\r\nvar localeHelper = __webpack_require__(/*! ../../utility/locale/localehelper */ 281);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar MessageEditor = /** @class */ (function (_super) {\r\n    __extends(MessageEditor, _super);\r\n    /**\r\n     * Constructor messageeditor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function MessageEditor(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isEditorInitialised = false;\r\n        _this.lastTap = 0;\r\n        _this.contentStyle = htmlUtilities.isIPadDevice ?\r\n            '.mce-content-body{word-break: break-word;font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + '; list-style-position: inside;}' + 'p{ margin:0; padding:0;}'\r\n            : htmlUtilities.isIE ? '.mce-content-body{font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + ';} p{ margin:0; padding:0;}' :\r\n                '.mce-content-body{font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                    '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + '; list-style-position: inside; } p{ margin:0; padding:0;}';\r\n        /**\r\n         * This will block the double-tap zoom in ipad\r\n         */\r\n        _this.blockDoubleTapZoom = function (e) {\r\n            var currentTime = new Date().getTime();\r\n            var tapLength = currentTime - _this.lastTap;\r\n            if (tapLength < 500 && tapLength > 0) {\r\n                e.preventDefault();\r\n            }\r\n            _this.lastTap = currentTime;\r\n        };\r\n        /**\r\n         * This will block the pinch-to-zoom in ipad\r\n         */\r\n        _this.blockPinchToZoom = function (e) {\r\n            if (e.touches.length > 1) {\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        _this.onKeyup = function (o, e) {\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        _this.onEditorInit = function (o, e) {\r\n            _this.activeEditor.on('SetContent', _this.onSetContent);\r\n            // Set the height of the iFrame section in the tiny mce as 100% for supporting the height calculation in css.\r\n            document.getElementById('msg-tinymce-editor_ifr').style.height = '100%';\r\n            if (htmlUtilities.isIPadDevice) {\r\n                document.getElementById('msg-tinymce-editor_ifr').setAttribute('scrolling', 'no');\r\n            }\r\n            _this.isEditorInitialised = true;\r\n            if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n                e.getWin().document.documentElement.addEventListener('touchend', _this.blockDoubleTapZoom);\r\n                e.getWin().document.documentElement.addEventListener('touchstart', _this.blockPinchToZoom);\r\n            }\r\n        };\r\n        _this.onRemove = function (o, e) {\r\n            if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n                e.getWin().document.documentElement.removeEventListener('touchend', _this.blockDoubleTapZoom);\r\n                e.getWin().document.documentElement.removeEventListener('touchstart', _this.blockPinchToZoom);\r\n            }\r\n        };\r\n        /**\r\n         * Simulate window click while clicking on tinyMCE editor to close opened priority drop down and user option panel.\r\n         */\r\n        _this.onClick = function (o, e) {\r\n            // we have to close opened priority drop down and user options (logout options) while clicking on outside that. TinyMCE editor was\r\n            // preventing the click event to propagate outside so closing of those things are not happening while clicking on TinyMCE editor.\r\n            var event = document.createEvent('MouseEvents');\r\n            event.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\r\n            window.dispatchEvent(event);\r\n        };\r\n        _this.onPaste = function (o, e) {\r\n            // find the clipboard data from any possible (window.clipboarddata is for ie)\r\n            var clipBoardData = (o.clipboardData || window.clipboardData ||\r\n                (o.originalEvent && o.originalEvent.clipboardData));\r\n            // set getdata argument - 'text' is only for ie11 and other device/browsers need 'text/plain'\r\n            var getDataArgument = htmlUtilities.isIE11 ? 'text' : 'text/plain';\r\n            // If you paste text into the editor with mouse by right- click\r\n            // TinyMCE's onPaste event is fired, but text is not available via .getContent().\r\n            // So that checking the clipboard data item when the user pasting the text via mouse by right- click.\r\n            if (clipBoardData && clipBoardData.getData(getDataArgument).trim() !== '') {\r\n                messageHelper.setPasteEnabledAction(true);\r\n            }\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        /**\r\n         * This method will enable the send button when hyperlink is added.\r\n         */\r\n        _this.onSetContent = function (e) {\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        /**\r\n         * This method will clear tinyMCE content\r\n         */\r\n        _this.onMessagePanelClose = function () {\r\n            _this.activeEditor.setContent('');\r\n        };\r\n        /**\r\n         * This method will set focus to tinyMCE editor\r\n         */\r\n        _this.setFocus = function () {\r\n            if (_this.state.scriptLoaded) {\r\n                if (_this.activeEditor && _this.isEditorInitialised && _this.props.hasFocus) {\r\n                    // this will set dom focus to tinymce editor\r\n                    _this.activeEditor.focus();\r\n                }\r\n            }\r\n        };\r\n        //initialize state\r\n        _this.state = {\r\n            scriptLoaded: false,\r\n            renderedOn: 0\r\n        };\r\n        _this.onRemove = _this.onRemove.bind(_this);\r\n        _this.onEditorInit = _this.onEditorInit.bind(_this);\r\n        _this.onSetContent = _this.onSetContent.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Component did mount\r\n     */\r\n    MessageEditor.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        this.setFocus();\r\n    };\r\n    /**\r\n     * Component will mount\r\n     */\r\n    MessageEditor.prototype.componentWillMount = function () {\r\n        var url = htmlUtilities.getFullUrl(urls.TINYMCE_URL);\r\n        // If tinyMCE script is not loaded then load that\r\n        if (!htmlUtilities.isScriptLoaded(url)) {\r\n            var script = document.createElement('script');\r\n            script.src = url;\r\n            script.async = true;\r\n            script.onload = (this.dependenciesLoaded.bind(this));\r\n            document.body.appendChild(script);\r\n        }\r\n        else {\r\n            this.dependenciesLoaded();\r\n        }\r\n    };\r\n    /**\r\n     * component will unmount\r\n     */\r\n    MessageEditor.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        if (tinymce.get(this.props.id)) {\r\n            tinymce.remove('#' + this.props.id);\r\n        }\r\n    };\r\n    /**\r\n     * Component did update\r\n     */\r\n    MessageEditor.prototype.componentDidUpdate = function () {\r\n        this.setFocus();\r\n    };\r\n    /**\r\n     * Render component\r\n     */\r\n    MessageEditor.prototype.render = function () {\r\n        if (this.state.scriptLoaded) {\r\n            var selectedLang = localeHelper.getAwardingBodyLocale(this.props.selectedLanguage);\r\n            var editorConfig = {\r\n                menubar: false,\r\n                statusbar: false,\r\n                renderedOn: Date.now(),\r\n                plugins: messageEditorConstants.TINYMCE_PLUGINS,\r\n                toolbar: messageEditorConstants.TINYMCE_TOOLBAR,\r\n                fontsize_formats: messageEditorConstants.TINYMCE_FONTSIZES,\r\n                font_formats: messageEditorConstants.TINYMCE_FONTS,\r\n                language: selectedLang,\r\n                browser_spellcheck: true,\r\n                content_style: this.contentStyle,\r\n                default_link_target: '_blank',\r\n                target_list: false,\r\n                invalid_elements: 'embed'\r\n            };\r\n            return (React.createElement(TINYMCE, { content: this.props.htmlContent, id: this.props.id, theme: messageEditorConstants.TINYMCE_THEME, config: editorConfig, onKeyup: this.onKeyup, onPaste: this.onPaste, onInit: this.onEditorInit, onClick: this.onClick, onRemove: this.onRemove }));\r\n        }\r\n        else {\r\n            //show loading icon if script is not loaded\r\n            return (React.createElement(\"div\", null));\r\n        }\r\n    };\r\n    /**\r\n     * Method to load dependencies\r\n     */\r\n    MessageEditor.prototype.dependenciesLoaded = function () {\r\n        if (this.props.isTinyMCELoaded) {\r\n            this.props.isTinyMCELoaded(true);\r\n        }\r\n        this.setState({ scriptLoaded: true });\r\n    };\r\n    Object.defineProperty(MessageEditor.prototype, \"activeEditor\", {\r\n        /**\r\n         * This method will return the active editor\r\n         */\r\n        get: function () {\r\n            return tinymce.get(this.props.id);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageEditor;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageEditor;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlZWRpdG9yLnRzeD9iOWI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBSZWFjdERPTSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5jb25zdCBUSU5ZTUNFID0gcmVxdWlyZSgncmVhY3QtdGlueW1jZScpO1xyXG5pbXBvcnQgbWVzc2FnZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL21lc3NhZ2UvbWVzc2FnZXN0b3JlJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IGh0bWxVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2dlbmVyaWMvaHRtbHV0aWxpdGllcycpO1xyXG5pbXBvcnQgdXJscyA9IHJlcXVpcmUoJy4uLy4uL2RhdGFzZXJ2aWNlcy9iYXNlL3VybHMnKTtcclxuaW1wb3J0IG1lc3NhZ2VFZGl0b3JDb25zdGFudHMgPSByZXF1aXJlKCcuLi91dGlsaXR5L21lc3NhZ2VlZGl0b3Jjb25zdGFudHMnKTtcclxuZGVjbGFyZSBsZXQgdGlueW1jZTogYW55O1xyXG5pbXBvcnQgbG9jYWxlSGVscGVyID0gcmVxdWlyZSgnLi4vLi4vdXRpbGl0eS9sb2NhbGUvbG9jYWxlaGVscGVyJyk7XHJcbmltcG9ydCBtZXNzYWdlSGVscGVyID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9tZXNzYWdlL21lc3NhZ2VoZWxwZXInKTtcclxuXHJcbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIFByb3BzQmFzZSwgTG9jYWxlU2VsZWN0aW9uQmFzZSB7XHJcbiAgICBodG1sQ29udGVudDogc3RyaW5nO1xyXG4gICAgaGFzRm9jdXM6IGJvb2xlYW47XHJcbiAgICB0b2dnbGVTYXZlQnV0dG9uU3RhdGU6IEZ1bmN0aW9uO1xyXG4gICAgaXNUaW55TUNFTG9hZGVkPzogRnVuY3Rpb247XHJcbn1cclxuXHJcbmludGVyZmFjZSBTdGF0ZSB7XHJcbiAgICBzY3JpcHRMb2FkZWQ/OiBib29sZWFuO1xyXG4gICAgcmVuZGVyZWRPbj86IG51bWJlcjtcclxufVxyXG5cclxuXHJcbmNsYXNzIE1lc3NhZ2VFZGl0b3IgZXh0ZW5kcyBwdXJlUmVuZGVyQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xyXG5cclxuICAgIHByaXZhdGUgaXNFZGl0b3JJbml0aWFsaXNlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBsYXN0VGFwOiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBjb250ZW50U3R5bGU6IHN0cmluZyA9IGh0bWxVdGlsaXRpZXMuaXNJUGFkRGV2aWNlID9cclxuICAgICAgICAnLm1jZS1jb250ZW50LWJvZHl7d29yZC1icmVhazogYnJlYWstd29yZDtmb250LWZhbWlseTonICsgbWVzc2FnZUVkaXRvckNvbnN0YW50cy5USU5ZTUNFX0RFRkFVTFRfRk9OVCArXHJcbiAgICAgICAgJzsgZm9udC1zaXplOicgKyBtZXNzYWdlRWRpdG9yQ29uc3RhbnRzLlRJTllNQ0VfREVGQVVMVF9GT05UU0laRSArICc7IGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTt9JyArICdweyBtYXJnaW46MDsgcGFkZGluZzowO30nXHJcbiAgICAgICAgOiBodG1sVXRpbGl0aWVzLmlzSUUgPyAnLm1jZS1jb250ZW50LWJvZHl7Zm9udC1mYW1pbHk6JyArIG1lc3NhZ2VFZGl0b3JDb25zdGFudHMuVElOWU1DRV9ERUZBVUxUX0ZPTlQgK1xyXG4gICAgICAgICAgICAnOyBmb250LXNpemU6JyArIG1lc3NhZ2VFZGl0b3JDb25zdGFudHMuVElOWU1DRV9ERUZBVUxUX0ZPTlRTSVpFICsgJzt9IHB7IG1hcmdpbjowOyBwYWRkaW5nOjA7fScgOlxyXG4gICAgICAgICAgICAnLm1jZS1jb250ZW50LWJvZHl7Zm9udC1mYW1pbHk6JyArIG1lc3NhZ2VFZGl0b3JDb25zdGFudHMuVElOWU1DRV9ERUZBVUxUX0ZPTlQgK1xyXG4gICAgICAgICAgICAnOyBmb250LXNpemU6JyArIG1lc3NhZ2VFZGl0b3JDb25zdGFudHMuVElOWU1DRV9ERUZBVUxUX0ZPTlRTSVpFICsgJzsgbGlzdC1zdHlsZS1wb3NpdGlvbjogaW5zaWRlOyB9IHB7IG1hcmdpbjowOyBwYWRkaW5nOjA7fSc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvciBtZXNzYWdlZWRpdG9yXHJcbiAgICAgKiBAcGFyYW0gcHJvcHNcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMsIHN0YXRlOiBTdGF0ZSkge1xyXG4gICAgICAgIHN1cGVyKHByb3BzLCBzdGF0ZSk7XHJcblxyXG4gICAgICAgIC8vaW5pdGlhbGl6ZSBzdGF0ZVxyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIHNjcmlwdExvYWRlZDogZmFsc2UsXHJcbiAgICAgICAgICAgIHJlbmRlcmVkT246IDBcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLm9uUmVtb3ZlID0gdGhpcy5vblJlbW92ZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25FZGl0b3JJbml0ID0gdGhpcy5vbkVkaXRvckluaXQuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uU2V0Q29udGVudCA9IHRoaXMub25TZXRDb250ZW50LmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb21wb25lbnQgZGlkIG1vdW50XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgICBtZXNzYWdlU3RvcmUuaW5zdGFuY2UuYWRkTGlzdGVuZXIobWVzc2FnZVN0b3JlLk1lc3NhZ2VTdG9yZS5NRVNTQUdFX0NMT1NFX0VWRU5ULCB0aGlzLm9uTWVzc2FnZVBhbmVsQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuc2V0Rm9jdXMoKTtcclxuICAgIH1cclxuXHJcblx0LyoqXHJcblx0ICogQ29tcG9uZW50IHdpbGwgbW91bnRcclxuXHQgKi9cclxuICAgIHB1YmxpYyBjb21wb25lbnRXaWxsTW91bnQoKSB7XHJcbiAgICAgICAgbGV0IHVybDogc3RyaW5nID0gaHRtbFV0aWxpdGllcy5nZXRGdWxsVXJsKHVybHMuVElOWU1DRV9VUkwpO1xyXG4gICAgICAgIC8vIElmIHRpbnlNQ0Ugc2NyaXB0IGlzIG5vdCBsb2FkZWQgdGhlbiBsb2FkIHRoYXRcclxuICAgICAgICBpZiAoIWh0bWxVdGlsaXRpZXMuaXNTY3JpcHRMb2FkZWQodXJsKSkge1xyXG4gICAgICAgICAgICBjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICAgICAgICAgICAgc2NyaXB0LnNyYyA9IHVybDtcclxuICAgICAgICAgICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcclxuICAgICAgICAgICAgc2NyaXB0Lm9ubG9hZCA9ICh0aGlzLmRlcGVuZGVuY2llc0xvYWRlZC5iaW5kKHRoaXMpKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGVwZW5kZW5jaWVzTG9hZGVkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogY29tcG9uZW50IHdpbGwgdW5tb3VudFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICAgICAgbWVzc2FnZVN0b3JlLmluc3RhbmNlLnJlbW92ZUxpc3RlbmVyKG1lc3NhZ2VTdG9yZS5NZXNzYWdlU3RvcmUuTUVTU0FHRV9DTE9TRV9FVkVOVCwgdGhpcy5vbk1lc3NhZ2VQYW5lbENsb3NlKTtcclxuXHJcbiAgICAgICAgaWYgKHRpbnltY2UuZ2V0KHRoaXMucHJvcHMuaWQpKSB7XHJcbiAgICAgICAgICAgIHRpbnltY2UucmVtb3ZlKCcjJyArIHRoaXMucHJvcHMuaWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBvbmVudCBkaWQgdXBkYXRlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjb21wb25lbnREaWRVcGRhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1cygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyB3aWxsIGJsb2NrIHRoZSBkb3VibGUtdGFwIHpvb20gaW4gaXBhZFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGJsb2NrRG91YmxlVGFwWm9vbSA9IChlOiBhbnkpOiB2b2lkID0+IHtcclxuICAgICAgICBsZXQgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICBsZXQgdGFwTGVuZ3RoID0gY3VycmVudFRpbWUgLSB0aGlzLmxhc3RUYXA7XHJcbiAgICAgICAgaWYgKHRhcExlbmd0aCA8IDUwMCAmJiB0YXBMZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5sYXN0VGFwID0gY3VycmVudFRpbWU7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyB3aWxsIGJsb2NrIHRoZSBwaW5jaC10by16b29tIGluIGlwYWRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBibG9ja1BpbmNoVG9ab29tID0gKGU6IGFueSk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGlmIChlLnRvdWNoZXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbmRlciBjb21wb25lbnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbmRlcigpIHtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuc2NyaXB0TG9hZGVkKSB7XHJcbiAgICAgICAgICAgIGxldCBzZWxlY3RlZExhbmc6IHN0cmluZyA9IGxvY2FsZUhlbHBlci5nZXRBd2FyZGluZ0JvZHlMb2NhbGUodGhpcy5wcm9wcy5zZWxlY3RlZExhbmd1YWdlKTtcclxuICAgICAgICAgICAgbGV0IGVkaXRvckNvbmZpZyA9IHtcclxuICAgICAgICAgICAgICAgIG1lbnViYXI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3RhdHVzYmFyOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHJlbmRlcmVkT246IERhdGUubm93KCksXHJcbiAgICAgICAgICAgICAgICBwbHVnaW5zOiBtZXNzYWdlRWRpdG9yQ29uc3RhbnRzLlRJTllNQ0VfUExVR0lOUyxcclxuICAgICAgICAgICAgICAgIHRvb2xiYXI6IG1lc3NhZ2VFZGl0b3JDb25zdGFudHMuVElOWU1DRV9UT09MQkFSLFxyXG4gICAgICAgICAgICAgICAgZm9udHNpemVfZm9ybWF0czogbWVzc2FnZUVkaXRvckNvbnN0YW50cy5USU5ZTUNFX0ZPTlRTSVpFUyxcclxuICAgICAgICAgICAgICAgIGZvbnRfZm9ybWF0czogbWVzc2FnZUVkaXRvckNvbnN0YW50cy5USU5ZTUNFX0ZPTlRTLFxyXG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2U6IHNlbGVjdGVkTGFuZyxcclxuICAgICAgICAgICAgICAgIGJyb3dzZXJfc3BlbGxjaGVjazogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGNvbnRlbnRfc3R5bGU6IHRoaXMuY29udGVudFN0eWxlLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdF9saW5rX3RhcmdldDogJ19ibGFuaycsXHJcbiAgICAgICAgICAgICAgICB0YXJnZXRfbGlzdDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBpbnZhbGlkX2VsZW1lbnRzIDogJ2VtYmVkJ1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgPFRJTllNQ0VcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50PXt0aGlzLnByb3BzLmh0bWxDb250ZW50fVxyXG4gICAgICAgICAgICAgICAgICAgIGlkPXt0aGlzLnByb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lPXttZXNzYWdlRWRpdG9yQ29uc3RhbnRzLlRJTllNQ0VfVEhFTUV9XHJcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnPXtlZGl0b3JDb25maWd9XHJcbiAgICAgICAgICAgICAgICAgICAgb25LZXl1cD17dGhpcy5vbktleXVwfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uUGFzdGU9e3RoaXMub25QYXN0ZX1cclxuICAgICAgICAgICAgICAgICAgICBvbkluaXQ9e3RoaXMub25FZGl0b3JJbml0fVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25DbGlja31cclxuICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17dGhpcy5vblJlbW92ZX1cclxuICAgICAgICAgICAgICAgIC8+KTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy9zaG93IGxvYWRpbmcgaWNvbiBpZiBzY3JpcHQgaXMgbm90IGxvYWRlZFxyXG4gICAgICAgICAgICByZXR1cm4gKDxkaXY+PC9kaXY+KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgdG8gbG9hZCBkZXBlbmRlbmNpZXNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBkZXBlbmRlbmNpZXNMb2FkZWQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNUaW55TUNFTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaXNUaW55TUNFTG9hZGVkKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2NyaXB0TG9hZGVkOiB0cnVlIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25LZXl1cCA9IChvOiBhbnksIGU6IGFueSkgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMudG9nZ2xlU2F2ZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHByaXZhdGUgb25FZGl0b3JJbml0ID0gKG86IGFueSwgZTogYW55KSA9PiB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmVFZGl0b3Iub24oJ1NldENvbnRlbnQnLCB0aGlzLm9uU2V0Q29udGVudCk7XHJcblxyXG4gICAgICAgIC8vIFNldCB0aGUgaGVpZ2h0IG9mIHRoZSBpRnJhbWUgc2VjdGlvbiBpbiB0aGUgdGlueSBtY2UgYXMgMTAwJSBmb3Igc3VwcG9ydGluZyB0aGUgaGVpZ2h0IGNhbGN1bGF0aW9uIGluIGNzcy5cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXNnLXRpbnltY2UtZWRpdG9yX2lmcicpLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcclxuICAgICAgICBpZiAoaHRtbFV0aWxpdGllcy5pc0lQYWREZXZpY2UpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21zZy10aW55bWNlLWVkaXRvcl9pZnInKS5zZXRBdHRyaWJ1dGUoJ3Njcm9sbGluZycsICdubycpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pc0VkaXRvckluaXRpYWxpc2VkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgaWYgKGh0bWxVdGlsaXRpZXMuaXNJUGFkRGV2aWNlICYmIGh0bWxVdGlsaXRpZXMuZ2V0VXNlckRldmljZSgpLmJyb3dzZXIgPT09ICdTYWZhcmknKSB7XHJcbiAgICAgICAgICAgIGUuZ2V0V2luKCkuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5ibG9ja0RvdWJsZVRhcFpvb20pO1xyXG4gICAgICAgICAgICBlLmdldFdpbigpLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5ibG9ja1BpbmNoVG9ab29tKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHByaXZhdGUgb25SZW1vdmUgPSAobzogYW55LCBlOiBhbnkpID0+IHtcclxuICAgICAgICBpZiAoaHRtbFV0aWxpdGllcy5pc0lQYWREZXZpY2UgJiYgaHRtbFV0aWxpdGllcy5nZXRVc2VyRGV2aWNlKCkuYnJvd3NlciA9PT0gJ1NhZmFyaScpIHtcclxuICAgICAgICAgICAgZS5nZXRXaW4oKS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmJsb2NrRG91YmxlVGFwWm9vbSk7XHJcbiAgICAgICAgICAgIGUuZ2V0V2luKCkuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLmJsb2NrUGluY2hUb1pvb20pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTaW11bGF0ZSB3aW5kb3cgY2xpY2sgd2hpbGUgY2xpY2tpbmcgb24gdGlueU1DRSBlZGl0b3IgdG8gY2xvc2Ugb3BlbmVkIHByaW9yaXR5IGRyb3AgZG93biBhbmQgdXNlciBvcHRpb24gcGFuZWwuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGljayA9IChvOiBhbnksIGU6IGFueSkgPT4ge1xyXG4gICAgICAgIC8vIHdlIGhhdmUgdG8gY2xvc2Ugb3BlbmVkIHByaW9yaXR5IGRyb3AgZG93biBhbmQgdXNlciBvcHRpb25zIChsb2dvdXQgb3B0aW9ucykgd2hpbGUgY2xpY2tpbmcgb24gb3V0c2lkZSB0aGF0LiBUaW55TUNFIGVkaXRvciB3YXNcclxuICAgICAgICAvLyBwcmV2ZW50aW5nIHRoZSBjbGljayBldmVudCB0byBwcm9wYWdhdGUgb3V0c2lkZSBzbyBjbG9zaW5nIG9mIHRob3NlIHRoaW5ncyBhcmUgbm90IGhhcHBlbmluZyB3aGlsZSBjbGlja2luZyBvbiBUaW55TUNFIGVkaXRvci5cclxuICAgICAgICBsZXQgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnTW91c2VFdmVudHMnKTtcclxuICAgICAgICBldmVudC5pbml0TW91c2VFdmVudCgnY2xpY2snLCB0cnVlLCB0cnVlLCB3aW5kb3csIDAsIDAsIDAsIDgwLCAyMCwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIDAsIG51bGwpO1xyXG4gICAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcclxuICAgIH07XHJcblxyXG4gICAgcHJpdmF0ZSBvblBhc3RlID0gKG86IGFueSwgZTogYW55KSA9PiB7XHJcbiAgICAgICAgLy8gZmluZCB0aGUgY2xpcGJvYXJkIGRhdGEgZnJvbSBhbnkgcG9zc2libGUgKHdpbmRvdy5jbGlwYm9hcmRkYXRhIGlzIGZvciBpZSlcclxuICAgICAgICBsZXQgY2xpcEJvYXJkRGF0YTogYW55ID0gKG8uY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YSB8fFxyXG4gICAgICAgICAgICAoby5vcmlnaW5hbEV2ZW50ICYmIG8ub3JpZ2luYWxFdmVudC5jbGlwYm9hcmREYXRhKSk7XHJcblxyXG4gICAgICAgIC8vIHNldCBnZXRkYXRhIGFyZ3VtZW50IC0gJ3RleHQnIGlzIG9ubHkgZm9yIGllMTEgYW5kIG90aGVyIGRldmljZS9icm93c2VycyBuZWVkICd0ZXh0L3BsYWluJ1xyXG4gICAgICAgIGxldCBnZXREYXRhQXJndW1lbnQ6IHN0cmluZyA9IGh0bWxVdGlsaXRpZXMuaXNJRTExID8gJ3RleHQnIDogJ3RleHQvcGxhaW4nO1xyXG5cclxuICAgICAgICAvLyBJZiB5b3UgcGFzdGUgdGV4dCBpbnRvIHRoZSBlZGl0b3Igd2l0aCBtb3VzZSBieSByaWdodC0gY2xpY2tcclxuICAgICAgICAvLyBUaW55TUNFJ3Mgb25QYXN0ZSBldmVudCBpcyBmaXJlZCwgYnV0IHRleHQgaXMgbm90IGF2YWlsYWJsZSB2aWEgLmdldENvbnRlbnQoKS5cclxuICAgICAgICAvLyBTbyB0aGF0IGNoZWNraW5nIHRoZSBjbGlwYm9hcmQgZGF0YSBpdGVtIHdoZW4gdGhlIHVzZXIgcGFzdGluZyB0aGUgdGV4dCB2aWEgbW91c2UgYnkgcmlnaHQtIGNsaWNrLlxyXG4gICAgICAgIGlmIChjbGlwQm9hcmREYXRhICYmIGNsaXBCb2FyZERhdGEuZ2V0RGF0YShnZXREYXRhQXJndW1lbnQpLnRyaW0oKSAhPT0gJycpIHtcclxuICAgICAgICAgICAgbWVzc2FnZUhlbHBlci5zZXRQYXN0ZUVuYWJsZWRBY3Rpb24odHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucHJvcHMudG9nZ2xlU2F2ZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCBlbmFibGUgdGhlIHNlbmQgYnV0dG9uIHdoZW4gaHlwZXJsaW5rIGlzIGFkZGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uU2V0Q29udGVudCA9IChlOiBhbnkpID0+IHtcclxuICAgICAgICB0aGlzLnByb3BzLnRvZ2dsZVNhdmVCdXR0b25TdGF0ZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgY2xlYXIgdGlueU1DRSBjb250ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25NZXNzYWdlUGFuZWxDbG9zZSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLmFjdGl2ZUVkaXRvci5zZXRDb250ZW50KCcnKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIHNldCBmb2N1cyB0byB0aW55TUNFIGVkaXRvclxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNldEZvY3VzID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLnNjcmlwdExvYWRlZCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hY3RpdmVFZGl0b3IgJiYgdGhpcy5pc0VkaXRvckluaXRpYWxpc2VkICYmIHRoaXMucHJvcHMuaGFzRm9jdXMpIHtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBzZXQgZG9tIGZvY3VzIHRvIHRpbnltY2UgZWRpdG9yXHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjdGl2ZUVkaXRvci5mb2N1cygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIHRoZSBhY3RpdmUgZWRpdG9yXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0IGFjdGl2ZUVkaXRvcigpIHtcclxuICAgICAgICByZXR1cm4gdGlueW1jZS5nZXQodGhpcy5wcm9wcy5pZCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCA9IE1lc3NhZ2VFZGl0b3I7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VlZGl0b3IudHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQWVBO0FBQUE7QUFZQTs7OztBQUlBO0FBQ0E7QUFBQTtBQWZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWdFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxREE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE5TUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBdUJBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFhQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXVGQTtBQUhBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFBQTtBQUNBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 464:
/* no static exports found */
/* all exports used */
/*!************************************************************!*\
  !*** ./src/components/message/messageprioritydropdown.tsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/* tslint:disable:variable-name */\r\nvar ListItem = function (props) {\r\n    return React.createElement(\"li\", { role: 'menuitem' },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: function () { props.onSelect(props.item.id); } }, props.item.name));\r\n};\r\nvar List = function (props) { return (React.createElement(\"ul\", { id: props.id + '_drop-down-items', className: 'menu', role: 'menu', title: localeStore.instance.TranslateText('messaging.compose-message.priority.priority-tooltip'), \"aria-hidden\": 'true' }, props.items.map(function (item) { return (item !== null) ?\r\n    (React.createElement(ListItem, { key: 'key_drop_down_' + item.id, onSelect: props.onSelect, item: item })) :\r\n    null; }))); };\r\nvar DropDown = function (props) {\r\n    return (React.createElement(\"div\", { id: props.id + '_dropdown', className: classNames(props.className, { 'open': props.isOpen }, { 'close': props.isOpen === undefined ? false : !props.isOpen }), onClick: function () { props.onClick(props.dropDownType); } },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', id: props.id + '_component', className: 'menu-button' },\r\n            React.createElement(\"span\", { id: props.id + '_items' },\r\n                \" \",\r\n                props.selectedItem,\r\n                \" \"),\r\n            React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' })),\r\n        React.createElement(List, { id: props.id, key: 'key_drop_down_items', onSelect: props.onSelect, items: props.items })));\r\n};\r\nmodule.exports = DropDown;\r\n/* tslint:enable */ \r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkcm9wZG93bi50c3g/YTU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5sZXQgbG9jYWxlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbG9jYWxlL2xvY2FsZXN0b3JlJyk7XHJcblxyXG5pbnRlcmZhY2UgSXRlbSB7XHJcbiAgICBpZDogZW51bXMuTWVzc2FnZVByaW9yaXR5O1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgRHJvcERvd25JdGVtcyB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgZHJvcERvd25UeXBlOiBlbnVtcy5Ecm9wRG93blR5cGU7XHJcbiAgICBjbGFzc05hbWU6IHN0cmluZztcclxuICAgIGlzT3BlbjogYm9vbGVhbjtcclxuICAgIG9uQ2xpY2s6IEZ1bmN0aW9uO1xyXG4gICAgb25TZWxlY3Q6IEZ1bmN0aW9uO1xyXG4gICAgc2VsZWN0ZWRJdGVtOiBzdHJpbmc7XHJcbiAgICBpdGVtczogQXJyYXk8SXRlbT47XHJcbn1cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcbmNvbnN0IExpc3RJdGVtID0gKHByb3BzOiB7IG9uU2VsZWN0OiBGdW5jdGlvbiwgaXRlbTogSXRlbX0pID0+XHJcbiAgICA8bGkgcm9sZT0nbWVudWl0ZW0nPjxhIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKScgb25DbGljayA9IHsoKSA9PiB7IHByb3BzLm9uU2VsZWN0KHByb3BzLml0ZW0uaWQpOyB9IH0+eyBwcm9wcy5pdGVtLm5hbWUgfTwvYT48L2xpPjtcclxuY29uc3QgTGlzdCA9IChwcm9wczogeyBvblNlbGVjdDogRnVuY3Rpb24sIGl0ZW1zOiBBcnJheTxJdGVtPiwgaWQ6IHN0cmluZyB9KSA9PiAoXHJcbiAgICA8dWwgaWQ9e3Byb3BzLmlkICsgJ19kcm9wLWRvd24taXRlbXMnfSBjbGFzc05hbWU9J21lbnUnIHJvbGU9J21lbnUnXHJcbiAgICAgICAgdGl0bGU9e2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ21lc3NhZ2luZy5jb21wb3NlLW1lc3NhZ2UucHJpb3JpdHkucHJpb3JpdHktdG9vbHRpcCcpfSBhcmlhLWhpZGRlbj0ndHJ1ZScgPlxyXG4gICAgICAgIHsgcHJvcHMuaXRlbXMubWFwKChpdGVtOiBJdGVtKSA9PiAoaXRlbSAhPT0gbnVsbCkgP1xyXG4gICAgICAgICAgICAoPExpc3RJdGVtIGtleT0geydrZXlfZHJvcF9kb3duXycgKyBpdGVtLmlkfSBvblNlbGVjdD0ge3Byb3BzLm9uU2VsZWN0fSBpdGVtPXsgaXRlbSB9IC8+KSA6XHJcbiAgICAgICAgICAgIG51bGwpIH1cclxuICAgIDwvdWw+XHJcbik7XHJcblxyXG5jb25zdCBEcm9wRG93biA9IChwcm9wczogRHJvcERvd25JdGVtcykgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGlkPXtwcm9wcy5pZCArICdfZHJvcGRvd24nfSBjbGFzc05hbWU9e2NsYXNzTmFtZXMocHJvcHMuY2xhc3NOYW1lLCB7ICdvcGVuJzogcHJvcHMuaXNPcGVuIH0sXHJcbiAgICAgICAgICAgIHsgJ2Nsb3NlJzogcHJvcHMuaXNPcGVuID09PSB1bmRlZmluZWQgPyBmYWxzZSA6ICFwcm9wcy5pc09wZW4gfSkgfSBvbkNsaWNrID0geyAoKSA9PiB7IHByb3BzLm9uQ2xpY2socHJvcHMuZHJvcERvd25UeXBlKTsgfSB9PlxyXG4gICAgICAgICAgICA8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknIGlkPXtwcm9wcy5pZCArICdfY29tcG9uZW50J30gY2xhc3NOYW1lPSdtZW51LWJ1dHRvbic+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBpZCA9IHtwcm9wcy5pZCArICdfaXRlbXMnfSA+IHsgcHJvcHMuc2VsZWN0ZWRJdGVtIH0gPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBtZW51LWFycm93LWljb24nPjwvc3Bhbj5cclxuICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICA8TGlzdCBpZD17cHJvcHMuaWR9IGtleT17J2tleV9kcm9wX2Rvd25faXRlbXMnfSAgb25TZWxlY3Q9IHtwcm9wcy5vblNlbGVjdH0gaXRlbXMgPSB7IHByb3BzLml0ZW1zIH0vPlxyXG4gICAgICAgIDwvZGl2Pik7XHJcbn07XHJcblxyXG5leHBvcnQgPSBEcm9wRG93bjtcclxuXHJcbi8qIHRzbGludDplbmFibGUgKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkcm9wZG93bi50c3giXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFrQkE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFHQTtBQUNBOztBQUFBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 465:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/message/notificationcount.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/**\r\n * This is the count displays in red round in the Inbox Tab header and against QIG Name\r\n * @param props\r\n */\r\nvar messageTab = function (props) {\r\n    if (props.unReadMessageCount > 0) {\r\n        return (React.createElement(\"span\", { className: 'notification-count notification circle', id: 'unread-' + props.id }, props.unReadMessageCount));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = messageTab;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9ub3RpZmljYXRpb25jb3VudC50c3g/NjZmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5cclxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvbkNvdW50UHJvcHMgZXh0ZW5kcyBQcm9wc0Jhc2Uge1xyXG4gICAgdW5SZWFkTWVzc2FnZUNvdW50OiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGlzIGlzIHRoZSBjb3VudCBkaXNwbGF5cyBpbiByZWQgcm91bmQgaW4gdGhlIEluYm94IFRhYiBoZWFkZXIgYW5kIGFnYWluc3QgUUlHIE5hbWVcclxuICogQHBhcmFtIHByb3BzXHJcbiAqL1xyXG5jb25zdCBtZXNzYWdlVGFiOiBSZWFjdC5TdGF0ZWxlc3NDb21wb25lbnQ8Tm90aWZpY2F0aW9uQ291bnRQcm9wcz4gPSAocHJvcHM6IE5vdGlmaWNhdGlvbkNvdW50UHJvcHMpID0+IHtcclxuICAgIGlmIChwcm9wcy51blJlYWRNZXNzYWdlQ291bnQgPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdub3RpZmljYXRpb24tY291bnQgbm90aWZpY2F0aW9uIGNpcmNsZScgaWQgPSB7J3VucmVhZC0nICsgcHJvcHMuaWR9ID5cclxuICAgICAgICAgICAgICAgIHtwcm9wcy51blJlYWRNZXNzYWdlQ291bnR9XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCA9IG1lc3NhZ2VUYWI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL21lc3NhZ2Uvbm90aWZpY2F0aW9uY291bnQudHN4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 466:
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./src/components/message/subject.tsx ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar Subject = /** @class */ (function (_super) {\r\n    __extends(Subject, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function Subject(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        /**\r\n         * seting focus back to subject on message close for fixing cursor and onscreen keyboard displaying issue in ipad\r\n         * Defect: 24608\r\n         */\r\n        _this.closeMessage = function () {\r\n            if (_this.props.hasFocus && htmlUtilities.isIPadDevice) {\r\n                _this.setFocusOnSubject();\r\n                (_this.refs[_this.props.refName]).blur();\r\n            }\r\n            // close message callback function called\r\n            if (_this.props.callback) {\r\n                _this.props.callback();\r\n            }\r\n        };\r\n        /**\r\n         * This method will call on subject onChange event\r\n         */\r\n        _this.onChange = function (event) {\r\n            _this.props.onChange(event.target.value);\r\n        };\r\n        /**\r\n         * Set Focus to the input field if necessary\r\n         */\r\n        _this.setFocusOnSubject = function () {\r\n            if (_this.props.hasFocus) {\r\n                (_this.refs[_this.props.refName]).blur();\r\n                (_this.refs[_this.props.refName]).focus();\r\n            }\r\n        };\r\n        _this.onAnimationEnd = _this.onAnimationEnd.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Event on animation end\r\n     * @param event\r\n     */\r\n    Subject.prototype.onAnimationEnd = function (event) {\r\n        // If any child element has triggered the transion-end ignore it\r\n        var element = event.srcElement || event.target;\r\n        if (element.id !== 'messaging-panel') {\r\n            return;\r\n        }\r\n        // setting scroll top - fix for ipad issue #49587\r\n        if (htmlUtilities.isIPadDevice) {\r\n            window.scrollTo(0, 0);\r\n            document.body.scrollTop = 0;\r\n        }\r\n        this.setFocusOnSubject();\r\n    };\r\n    /**\r\n     * Render method\r\n     */\r\n    Subject.prototype.render = function () {\r\n        return (React.createElement(\"div\", { className: this.props.outerClass },\r\n            React.createElement(\"input\", { type: 'text', ref: this.props.refName, id: this.props.id, \"aria-label\": 'Subject', placeholder: this.props.placeHolder, className: this.props.className, maxLength: this.props.maxLength, value: this.props.value, onInput: this.onChange })));\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    Subject.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.closeMessage);\r\n        // While creating a message from worklist and Inbox, set the focus to subject\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.setFocusOnSubject);\r\n        this.messagingPanel = document.getElementsByClassName('messaging-panel').item(0);\r\n        if (this.messagingPanel) {\r\n            // While creating a message inside the response, set the focus to subject\r\n            this.messagingPanel.addEventListener('transitionend', this.onAnimationEnd);\r\n        }\r\n        // While composing a message from Team management. Set focus to subject\r\n        this.setFocusOnSubject();\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    Subject.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.closeMessage);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.setFocusOnSubject);\r\n        if (this.messagingPanel) {\r\n            this.messagingPanel.removeEventListener('transitionend', this.onAnimationEnd);\r\n        }\r\n    };\r\n    return Subject;\r\n}(pureRenderComponent));\r\nmodule.exports = Subject;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9zdWJqZWN0LnRzeD9hNzFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBSZWFjdERvbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBtZXNzYWdlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbWVzc2FnZS9tZXNzYWdlc3RvcmUnKTtcclxuaW1wb3J0IGh0bWxVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2dlbmVyaWMvaHRtbHV0aWxpdGllcycpO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgUHJvcHNCYXNlLCBMb2NhbGVTZWxlY3Rpb25CYXNlIHtcclxuICAgIG91dGVyQ2xhc3M6IHN0cmluZztcclxuICAgIHJlZk5hbWU6IHN0cmluZztcclxuICAgIGhhc0ZvY3VzOiBib29sZWFuO1xyXG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBwbGFjZUhvbGRlcj86IHN0cmluZztcclxuICAgIG1heExlbmd0aDogbnVtYmVyO1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIG9uQ2hhbmdlOiBGdW5jdGlvbjtcclxuICAgIGNhbGxiYWNrPzogRnVuY3Rpb247XHJcbiAgICBpc1Zpc2libGU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmNsYXNzIFN1YmplY3QgZXh0ZW5kcyBwdXJlUmVuZGVyQ29tcG9uZW50PFByb3BzLCBhbnk+IHtcclxuICAgIC8qIHByaXZhdGUgdmFyaWFibGUgdG8gbWFuYWdlIGV2ZW50IGxpc3RlbmVycyBmb3IgbWVzc2FnaW5nIHBhbmVsKi9cclxuICAgIHByaXZhdGUgbWVzc2FnaW5nUGFuZWw6IEVsZW1lbnQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBjb25zdHJ1Y3RvclxyXG4gICAgICogQHBhcmFtIHByb3BzXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzLCBzdGF0ZTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMsIHN0YXRlKTtcclxuICAgICAgICB0aGlzLm9uQW5pbWF0aW9uRW5kID0gdGhpcy5vbkFuaW1hdGlvbkVuZC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgb24gYW5pbWF0aW9uIGVuZFxyXG4gICAgICogQHBhcmFtIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25BbmltYXRpb25FbmQoZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICAgICAgLy8gSWYgYW55IGNoaWxkIGVsZW1lbnQgaGFzIHRyaWdnZXJlZCB0aGUgdHJhbnNpb24tZW5kIGlnbm9yZSBpdFxyXG4gICAgICAgIGxldCBlbGVtZW50OiBhbnkgPSBldmVudC5zcmNFbGVtZW50IHx8IGV2ZW50LnRhcmdldDtcclxuICAgICAgICBpZiAoZWxlbWVudC5pZCAhPT0gJ21lc3NhZ2luZy1wYW5lbCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gc2V0dGluZyBzY3JvbGwgdG9wIC0gZml4IGZvciBpcGFkIGlzc3VlICM0OTU4N1xyXG4gICAgICAgIGlmIChodG1sVXRpbGl0aWVzLmlzSVBhZERldmljZSkge1xyXG4gICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1c09uU3ViamVjdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5vdXRlckNsYXNzfT5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyByZWY9e3RoaXMucHJvcHMucmVmTmFtZX0gaWQ9e3RoaXMucHJvcHMuaWR9IGFyaWEtbGFiZWw9J1N1YmplY3QnXHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3RoaXMucHJvcHMucGxhY2VIb2xkZXJ9IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jbGFzc05hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoPXt0aGlzLnByb3BzLm1heExlbmd0aH0gdmFsdWU9e3RoaXMucHJvcHMudmFsdWV9IG9uSW5wdXQ9e3RoaXMub25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2Pik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgaW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgYWJvdXQgdG8gYmUgbW91bnRlZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgICAgbWVzc2FnZVN0b3JlLmluc3RhbmNlLmFkZExpc3RlbmVyKG1lc3NhZ2VTdG9yZS5NZXNzYWdlU3RvcmUuTUVTU0FHRV9DTE9TRV9FVkVOVCwgdGhpcy5jbG9zZU1lc3NhZ2UpO1xyXG5cclxuICAgICAgICAvLyBXaGlsZSBjcmVhdGluZyBhIG1lc3NhZ2UgZnJvbSB3b3JrbGlzdCBhbmQgSW5ib3gsIHNldCB0aGUgZm9jdXMgdG8gc3ViamVjdFxyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5hZGRMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLk1FU1NBR0VfT1BFTl9FVkVOVCwgdGhpcy5zZXRGb2N1c09uU3ViamVjdCk7XHJcbiAgICAgICAgdGhpcy5tZXNzYWdpbmdQYW5lbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21lc3NhZ2luZy1wYW5lbCcpLml0ZW0oMCk7XHJcbiAgICAgICAgaWYgKHRoaXMubWVzc2FnaW5nUGFuZWwpIHtcclxuICAgICAgICAgICAgLy8gV2hpbGUgY3JlYXRpbmcgYSBtZXNzYWdlIGluc2lkZSB0aGUgcmVzcG9uc2UsIHNldCB0aGUgZm9jdXMgdG8gc3ViamVjdFxyXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2luZ1BhbmVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCB0aGlzLm9uQW5pbWF0aW9uRW5kKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFdoaWxlIGNvbXBvc2luZyBhIG1lc3NhZ2UgZnJvbSBUZWFtIG1hbmFnZW1lbnQuIFNldCBmb2N1cyB0byBzdWJqZWN0XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1c09uU3ViamVjdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBmdW5jdGlvbiBnZXRzIGludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGFib3V0IHRvIGJlIG1vdW50ZWRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5yZW1vdmVMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLk1FU1NBR0VfQ0xPU0VfRVZFTlQsIHRoaXMuY2xvc2VNZXNzYWdlKTtcclxuICAgICAgICBtZXNzYWdlU3RvcmUuaW5zdGFuY2UucmVtb3ZlTGlzdGVuZXIobWVzc2FnZVN0b3JlLk1lc3NhZ2VTdG9yZS5NRVNTQUdFX09QRU5fRVZFTlQsIHRoaXMuc2V0Rm9jdXNPblN1YmplY3QpO1xyXG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2luZ1BhbmVsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWVzc2FnaW5nUGFuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHRoaXMub25BbmltYXRpb25FbmQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHNldGluZyBmb2N1cyBiYWNrIHRvIHN1YmplY3Qgb24gbWVzc2FnZSBjbG9zZSBmb3IgZml4aW5nIGN1cnNvciBhbmQgb25zY3JlZW4ga2V5Ym9hcmQgZGlzcGxheWluZyBpc3N1ZSBpbiBpcGFkXHJcbiAgICAgKiBEZWZlY3Q6IDI0NjA4XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2xvc2VNZXNzYWdlID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmhhc0ZvY3VzICYmIGh0bWxVdGlsaXRpZXMuaXNJUGFkRGV2aWNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0Rm9jdXNPblN1YmplY3QoKTtcclxuICAgICAgICAgICAgKCh0aGlzLnJlZnNbdGhpcy5wcm9wcy5yZWZOYW1lXSkgYXMgSFRNTElucHV0RWxlbWVudCkuYmx1cigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gY2xvc2UgbWVzc2FnZSBjYWxsYmFjayBmdW5jdGlvbiBjYWxsZWRcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5jYWxsYmFjaykge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLmNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgY2FsbCBvbiBzdWJqZWN0IG9uQ2hhbmdlIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DaGFuZ2UgPSAoZXZlbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgRm9jdXMgdG8gdGhlIGlucHV0IGZpZWxkIGlmIG5lY2Vzc2FyeVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNldEZvY3VzT25TdWJqZWN0ID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmhhc0ZvY3VzKSB7XHJcbiAgICAgICAgICAgICgodGhpcy5yZWZzW3RoaXMucHJvcHMucmVmTmFtZV0pIGFzIEhUTUxJbnB1dEVsZW1lbnQpLmJsdXIoKTtcclxuICAgICAgICAgICAgKCh0aGlzLnJlZnNbdGhpcy5wcm9wcy5yZWZOYW1lXSkgYXMgSFRNTElucHV0RWxlbWVudCkuZm9jdXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCA9IFN1YmplY3Q7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL3N1YmplY3QudHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFFQTtBQUNBO0FBZUE7QUFBQTtBQUlBOzs7O0FBSUE7QUFDQTtBQUFBO0FBaUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlGQTs7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWtDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 467:
/* no static exports found */
/* all exports used */
/*!*********************************************!*\
  !*** ./src/components/utility/dropdown.tsx ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\n/* tslint:disable:variable-name */\r\nvar ListItem = function (props) {\r\n    return React.createElement(\"li\", { role: 'menuitem' },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: function () { props.onSelect(props.item.id); } }, props.item.name));\r\n};\r\nvar List = function (props) { return (React.createElement(\"ul\", { id: 'drop-down-items', className: 'menu', role: 'menu', title: '', \"aria-hidden\": 'true', style: props.style }, props.items.map(function (item) { return React.createElement(ListItem, { key: 'key_drop_down_' + item.id, onSelect: props.onSelect, item: item }); }))); };\r\n/* tslint:enable */\r\nvar DropDown = /** @class */ (function (_super) {\r\n    __extends(DropDown, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function DropDown(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        /**\r\n         * This will find the width of the anchor tag and pass to parent for applying width style of menu ul\r\n         */\r\n        _this.onDropDownClick = function (dropdownType) {\r\n            var width = _this.refs.qigDropDown.getBoundingClientRect().width;\r\n            _this.props.onClick(dropdownType, width);\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    DropDown.prototype.render = function () {\r\n        var _this = this;\r\n        return (React.createElement(\"div\", { id: this.props.id + '_dropdown', title: this.props.title, className: classNames(this.props.className, { 'open': this.props.isOpen }, { 'close': this.props.isOpen === undefined ? false : !this.props.isOpen }), onClick: function () { _this.onDropDownClick(_this.props.dropDownType); } },\r\n            React.createElement(\"a\", { ref: 'qigDropDown', href: 'javascript:void(0)', id: this.props.id + '_component', className: 'menu-button' },\r\n                React.createElement(\"span\", { id: this.props.id + '_items' },\r\n                    \" \",\r\n                    this.props.selectedItem,\r\n                    \" \"),\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' })),\r\n            React.createElement(List, { key: 'key_drop_down_items', onSelect: this.props.onSelect, items: this.props.items, style: this.props.style })));\r\n    };\r\n    return DropDown;\r\n}(pureRenderComponent));\r\nmodule.exports = DropDown;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9kcm9wZG93bi50c3g/ZTY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgbG9jYWxlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbG9jYWxlL2xvY2FsZXN0b3JlJyk7XHJcblxyXG5pbnRlcmZhY2UgSXRlbSB7XHJcbiAgICBpZDogZW51bXMuTWVzc2FnZVByaW9yaXR5O1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIGRyb3BEb3duVHlwZTogZW51bXMuRHJvcERvd25UeXBlO1xyXG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBzdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcztcclxuICAgIGlzT3BlbjogYm9vbGVhbjtcclxuICAgIG9uQ2xpY2s6IEZ1bmN0aW9uO1xyXG4gICAgb25TZWxlY3Q6IEZ1bmN0aW9uO1xyXG4gICAgc2VsZWN0ZWRJdGVtOiBzdHJpbmc7XHJcbiAgICBpdGVtczogQXJyYXk8SXRlbT47XHJcbiAgICB0aXRsZTogc3RyaW5nO1xyXG59XHJcblxyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp2YXJpYWJsZS1uYW1lICovXHJcblxyXG5jb25zdCBMaXN0SXRlbSA9IChwcm9wczogeyBvblNlbGVjdDogRnVuY3Rpb24sIGl0ZW06IEl0ZW0gfSkgPT5cclxuICAgIDxsaSByb2xlPSdtZW51aXRlbSc+PGEgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApJyBvbkNsaWNrPXsoKSA9PiB7IHByb3BzLm9uU2VsZWN0KHByb3BzLml0ZW0uaWQpOyB9fT57cHJvcHMuaXRlbS5uYW1lfTwvYT48L2xpPjtcclxuY29uc3QgTGlzdCA9IChwcm9wczogeyBvblNlbGVjdDogRnVuY3Rpb24sIHN0eWxlOiBSZWFjdC5DU1NQcm9wZXJ0aWVzLCBpdGVtczogQXJyYXk8SXRlbT4gfSkgPT4gKFxyXG4gICAgPHVsIGlkPSdkcm9wLWRvd24taXRlbXMnIGNsYXNzTmFtZT0nbWVudScgcm9sZT0nbWVudScgdGl0bGU9JycgYXJpYS1oaWRkZW49J3RydWUnIHN0eWxlPXtwcm9wcy5zdHlsZX0+XHJcbiAgICAgICAge3Byb3BzLml0ZW1zLm1hcCgoaXRlbTogSXRlbSkgPT4gPExpc3RJdGVtIGtleT17J2tleV9kcm9wX2Rvd25fJyArIGl0ZW0uaWR9IG9uU2VsZWN0PXtwcm9wcy5vblNlbGVjdH0gaXRlbT17aXRlbX0gLz4pfVxyXG4gICAgPC91bD5cclxuKTtcclxuXHJcbi8qIHRzbGludDplbmFibGUgKi9cclxuXHJcbmNsYXNzIERyb3BEb3duIGV4dGVuZHMgcHVyZVJlbmRlckNvbXBvbmVudDxQcm9wcywgYW55PiB7XHJcblxyXG4gICAgcHJpdmF0ZSBzdHlsZTogUmVhY3QuQ1NTUHJvcGVydGllcztcclxuXHJcbiAgICAvKiogcmVmcyAqL1xyXG4gICAgcHVibGljIHJlZnM6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiAoRWxlbWVudCk7XHJcbiAgICAgICAgcWlnRHJvcERvd246IChIVE1MQW5jaG9yRWxlbWVudCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogY29uc3RydWN0b3JcclxuICAgICAqIEBwYXJhbSBwcm9wc1xyXG4gICAgICogQHBhcmFtIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBQcm9wcywgc3RhdGU6IGFueSkge1xyXG4gICAgICAgIHN1cGVyKHByb3BzLCBzdGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgY29tcG9uZW50XHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGlkPXt0aGlzLnByb3BzLmlkICsgJ19kcm9wZG93bid9XHJcbiAgICAgICAgICAgICAgICB0aXRsZT17dGhpcy5wcm9wcy50aXRsZX1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyh0aGlzLnByb3BzLmNsYXNzTmFtZSwgeyAnb3Blbic6IHRoaXMucHJvcHMuaXNPcGVuIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyAnY2xvc2UnOiB0aGlzLnByb3BzLmlzT3BlbiA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAhdGhpcy5wcm9wcy5pc09wZW4gfSl9IG9uQ2xpY2s9XHJcbiAgICAgICAgICAgICAgICB7KCkgPT4geyB0aGlzLm9uRHJvcERvd25DbGljayh0aGlzLnByb3BzLmRyb3BEb3duVHlwZSk7IH19PlxyXG4gICAgICAgICAgICAgICAgPGEgcmVmPSdxaWdEcm9wRG93bicgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApJyBpZD17dGhpcy5wcm9wcy5pZCArICdfY29tcG9uZW50J30gY2xhc3NOYW1lPSdtZW51LWJ1dHRvbic+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9e3RoaXMucHJvcHMuaWQgKyAnX2l0ZW1zJ30gPiB7dGhpcy5wcm9wcy5zZWxlY3RlZEl0ZW19IDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3Nwcml0ZS1pY29uIG1lbnUtYXJyb3ctaWNvbic+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICAgICAgPExpc3Qga2V5PXsna2V5X2Ryb3BfZG93bl9pdGVtcyd9IG9uU2VsZWN0PXt0aGlzLnByb3BzLm9uU2VsZWN0fSBpdGVtcz17dGhpcy5wcm9wcy5pdGVtc31cclxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17dGhpcy5wcm9wcy5zdHlsZX0gLz5cclxuICAgICAgICAgICAgPC9kaXY+KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgd2lsbCBmaW5kIHRoZSB3aWR0aCBvZiB0aGUgYW5jaG9yIHRhZyBhbmQgcGFzcyB0byBwYXJlbnQgZm9yIGFwcGx5aW5nIHdpZHRoIHN0eWxlIG9mIG1lbnUgdWxcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkRyb3BEb3duQ2xpY2sgPSAoZHJvcGRvd25UeXBlOiBlbnVtcy5Ecm9wRG93blR5cGUpID0+IHtcclxuICAgICAgICBsZXQgd2lkdGg6IG51bWJlciA9IHRoaXMucmVmcy5xaWdEcm9wRG93bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcclxuICAgICAgICB0aGlzLnByb3BzLm9uQ2xpY2soZHJvcGRvd25UeXBlLCB3aWR0aCk7XHJcbiAgICB9O1xyXG5cclxufVxyXG5cclxuZXhwb3J0ID0gRHJvcERvd247XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL3V0aWxpdHkvZHJvcGRvd24udHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQXFCQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFNQTtBQUVBO0FBQUE7QUFVQTs7OztBQUlBO0FBQ0E7QUFBQTtBQXdCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQTVCQTtBQUVBOzs7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQU1BO0FBQ0E7O0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFHQTtBQVVBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 468:
/* no static exports found */
/* all exports used */
/*!*******************************************************!*\
  !*** ./src/components/utility/search/searchpanel.tsx ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar searchPanel = function (props) {\r\n    if (!props.searchData.isVisible) {\r\n        return null;\r\n    }\r\n    var _divSearchResult;\r\n    if (props.isSearchResultTextVisible) {\r\n        _divSearchResult = (React.createElement(\"div\", { className: 'col-6-of-12 search-result-panel' },\r\n            React.createElement(\"p\", { className: 'searching-txt' },\r\n                React.createElement(\"span\", { className: 'searching-result-caption', id: 'search-result-caption' }, props.searchResultsFor + ' '),\r\n                React.createElement(\"span\", { className: 'bolder', id: 'search-result-caption-dots' },\r\n                    props.searchData.searchText,\r\n                    \"...\")),\r\n            React.createElement(\"span\", { className: 'loader text-middle' },\r\n                React.createElement(\"span\", { className: 'dot' }),\r\n                React.createElement(\"span\", { className: 'dot' }),\r\n                React.createElement(\"span\", { className: 'dot' }))));\r\n    }\r\n    else {\r\n        _divSearchResult = null;\r\n    }\r\n    return (React.createElement(\"div\", { className: classNames(props.searchWrapClass, {\r\n            'loading': props.searchData.isSearching !== undefined\r\n                ? props.searchData.isSearching\r\n                : false,\r\n            'search-complete': props.searchData.isSearching !== undefined\r\n                ? !props.searchData.isSearching\r\n                : false\r\n        }) },\r\n        _divSearchResult,\r\n        React.createElement(\"div\", { className: props.searchClassName },\r\n            React.createElement(\"div\", { className: 'relative' },\r\n                React.createElement(\"span\", { id: 'search-icon', className: 'search-link' },\r\n                    React.createElement(\"span\", { className: 'sprite-icon search-icon-small-grey' }, \"Search\")),\r\n                React.createElement(\"input\", { type: 'text', id: 'message-search', className: 'text-underline msg-search-input', onChange: onSearch, required: true, tabIndex: 1, placeholder: props.searchPlaceHolder, title: props.searchTooltip, disabled: props.isdisable, \"aria-label\": props.searchTooltip, autoComplete: 'off', value: props.searchData.searchText }),\r\n                React.createElement(\"a\", { id: 'search-close-link', href: 'javascript:void(0);', onClick: onSearchClear, className: 'close-link', title: props.searchCancel },\r\n                    React.createElement(\"span\", { className: 'sprite-icon search-close' }, \"Closed\")),\r\n                React.createElement(\"span\", { className: 'bar' })))));\r\n    /**\r\n     * Will call on search text change.\r\n     * @param e event\r\n     */\r\n    function onSearch(e) {\r\n        props.onSearch(e.target.value);\r\n    }\r\n    /**\r\n     * This method will clear the search contents.\r\n     */\r\n    function onSearchClear() {\r\n        props.onSearch('');\r\n    }\r\n};\r\nmodule.exports = searchPanel;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9zZWFyY2gvc2VhcmNocGFuZWwudHN4PzA0MWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxubGV0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMgZXh0ZW5kcyBMb2NhbGVTZWxlY3Rpb25CYXNlLCBQcm9wc0Jhc2Uge1xyXG5cdG9uU2VhcmNoOiBGdW5jdGlvbjtcclxuXHRzZWFyY2hEYXRhOiBTZWFyY2hEYXRhO1xyXG4gICAgaXNTZWFyY2hSZXN1bHRUZXh0VmlzaWJsZTogYm9vbGVhbjtcclxuICAgIGlzZGlzYWJsZT86IGJvb2xlYW47XHJcblx0c2VhcmNoUmVzdWx0c0Zvcjogc3RyaW5nO1xyXG5cdHNlYXJjaFBsYWNlSG9sZGVyOiBzdHJpbmc7XHJcblx0c2VhcmNoVG9vbHRpcDogc3RyaW5nO1xyXG5cdHNlYXJjaENhbmNlbDogc3RyaW5nO1xyXG5cdHNlYXJjaENsYXNzTmFtZTogc3RyaW5nO1xyXG5cdHNlYXJjaFdyYXBDbGFzczogc3RyaW5nO1xyXG59XHJcblxyXG5jb25zdCBzZWFyY2hQYW5lbCA9IChwcm9wczogUHJvcHMpID0+IHtcclxuXHRpZiAoIXByb3BzLnNlYXJjaERhdGEuaXNWaXNpYmxlKSB7XHJcblx0XHRyZXR1cm4gbnVsbDtcclxuXHR9XHJcblxyXG5cdGxldCBfZGl2U2VhcmNoUmVzdWx0OiBKU1guRWxlbWVudDtcclxuXHRpZiAocHJvcHMuaXNTZWFyY2hSZXN1bHRUZXh0VmlzaWJsZSkge1xyXG5cdFx0X2RpdlNlYXJjaFJlc3VsdCA9IChcclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbC02LW9mLTEyIHNlYXJjaC1yZXN1bHQtcGFuZWwnPlxyXG5cdFx0XHRcdDxwIGNsYXNzTmFtZT0nc2VhcmNoaW5nLXR4dCc+XHJcblx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J3NlYXJjaGluZy1yZXN1bHQtY2FwdGlvbicgaWQ9J3NlYXJjaC1yZXN1bHQtY2FwdGlvbic+XHJcblx0XHRcdFx0XHRcdHtwcm9wcy5zZWFyY2hSZXN1bHRzRm9yICsgJyAnfVxyXG5cdFx0XHRcdFx0PC9zcGFuPlxyXG5cdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdib2xkZXInIGlkPSdzZWFyY2gtcmVzdWx0LWNhcHRpb24tZG90cyc+e3Byb3BzLnNlYXJjaERhdGEuc2VhcmNoVGV4dH0uLi48L3NwYW4+XHJcblx0XHRcdFx0PC9wPlxyXG5cdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0nbG9hZGVyIHRleHQtbWlkZGxlJz5cclxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0nZG90Jz48L3NwYW4+XHJcblx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPlxyXG5cdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdkb3QnPjwvc3Bhbj5cclxuXHRcdFx0XHQ8L3NwYW4+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0X2RpdlNlYXJjaFJlc3VsdCA9IG51bGw7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdlxyXG5cdFx0XHRjbGFzc05hbWU9e2NsYXNzTmFtZXMocHJvcHMuc2VhcmNoV3JhcENsYXNzLCB7XHJcblx0XHRcdFx0J2xvYWRpbmcnOiBwcm9wcy5zZWFyY2hEYXRhLmlzU2VhcmNoaW5nICE9PSB1bmRlZmluZWRcclxuXHRcdFx0XHRcdD8gcHJvcHMuc2VhcmNoRGF0YS5pc1NlYXJjaGluZ1xyXG5cdFx0XHRcdFx0OiBmYWxzZSxcclxuXHRcdFx0XHQnc2VhcmNoLWNvbXBsZXRlJzogcHJvcHMuc2VhcmNoRGF0YS5pc1NlYXJjaGluZyAhPT0gdW5kZWZpbmVkXHJcblx0XHRcdFx0XHQ/ICFwcm9wcy5zZWFyY2hEYXRhLmlzU2VhcmNoaW5nXHJcblx0XHRcdFx0XHQ6IGZhbHNlXHJcblx0XHRcdH0pfT5cclxuXHJcblx0XHRcdHtfZGl2U2VhcmNoUmVzdWx0fVxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT17cHJvcHMuc2VhcmNoQ2xhc3NOYW1lfT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ncmVsYXRpdmUnPlxyXG5cdFx0XHRcdFx0PHNwYW4gaWQ9J3NlYXJjaC1pY29uJyBjbGFzc05hbWU9J3NlYXJjaC1saW5rJz5cclxuXHRcdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBzZWFyY2gtaWNvbi1zbWFsbC1ncmV5Jz5TZWFyY2g8L3NwYW4+XHJcblx0XHRcdFx0XHQ8L3NwYW4+XHJcblx0XHRcdFx0XHQ8aW5wdXRcclxuXHRcdFx0XHRcdFx0dHlwZT0ndGV4dCdcclxuXHRcdFx0XHRcdFx0aWQ9J21lc3NhZ2Utc2VhcmNoJ1xyXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9J3RleHQtdW5kZXJsaW5lIG1zZy1zZWFyY2gtaW5wdXQnXHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvblNlYXJjaH1cclxuXHRcdFx0XHRcdFx0cmVxdWlyZWRcclxuXHRcdFx0XHRcdFx0dGFiSW5kZXg9ezF9XHJcblx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPXtwcm9wcy5zZWFyY2hQbGFjZUhvbGRlcn1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e3Byb3BzLnNlYXJjaFRvb2x0aXB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtwcm9wcy5pc2Rpc2FibGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e3Byb3BzLnNlYXJjaFRvb2x0aXB9XHJcblx0XHRcdFx0XHRcdGF1dG9Db21wbGV0ZT0nb2ZmJ1xyXG5cdFx0XHRcdFx0XHR2YWx1ZT17cHJvcHMuc2VhcmNoRGF0YS5zZWFyY2hUZXh0fSAvPlxyXG5cdFx0XHRcdFx0PGFcclxuXHRcdFx0XHRcdFx0aWQ9J3NlYXJjaC1jbG9zZS1saW5rJ1xyXG5cdFx0XHRcdFx0XHRocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCk7J1xyXG5cdFx0XHRcdFx0XHRvbkNsaWNrPXtvblNlYXJjaENsZWFyfVxyXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9J2Nsb3NlLWxpbmsnXHJcblx0XHRcdFx0XHRcdHRpdGxlPXtwcm9wcy5zZWFyY2hDYW5jZWx9PlxyXG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J3Nwcml0ZS1pY29uIHNlYXJjaC1jbG9zZSc+Q2xvc2VkPC9zcGFuPlxyXG5cdFx0XHRcdFx0PC9hPlxyXG5cdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdiYXInPjwvc3Bhbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogV2lsbCBjYWxsIG9uIHNlYXJjaCB0ZXh0IGNoYW5nZS5cclxuICAgICAqIEBwYXJhbSBlIGV2ZW50XHJcbiAgICAgKi9cclxuXHRmdW5jdGlvbiBvblNlYXJjaChlOiBhbnkpIHtcclxuXHRcdHByb3BzLm9uU2VhcmNoKGUudGFyZ2V0LnZhbHVlKTtcclxuXHR9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIG1ldGhvZCB3aWxsIGNsZWFyIHRoZSBzZWFyY2ggY29udGVudHMuXHJcbiAgICAgKi9cclxuXHRmdW5jdGlvbiBvblNlYXJjaENsZWFyKCkge1xyXG5cdFx0cHJvcHMub25TZWFyY2goJycpO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCA9IHNlYXJjaFBhbmVsO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy91dGlsaXR5L3NlYXJjaC9zZWFyY2hwYW5lbC50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFhQTtBQU1BO0FBRUE7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 478:
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./src/components/message/teamlistpopup.tsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar GenericButton = __webpack_require__(/*! ../utility/genericbutton */ 290);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar TeamListTreeview = __webpack_require__(/*! ./teamlisttreeview */ 479);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\n/**\r\n * TeamListPopup section contain team list\r\n * @param props\r\n * @param state\r\n */\r\nvar TeamListPopup = /** @class */ (function (_super) {\r\n    __extends(TeamListPopup, _super);\r\n    /**\r\n     * Constructor Messagepopup\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function TeamListPopup(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isShowAddressPopup = false;\r\n        _this.isToTeamChecked = false;\r\n        _this.prevPageY = 0;\r\n        _this.allowUp = false;\r\n        _this.allowDown = false;\r\n        /**\r\n         * event handler for touch start\r\n         */\r\n        _this.onTouchStart = function (event) {\r\n            _this.prevPageY = (event.changedTouches) ? event.changedTouches[0].pageY : 0;\r\n            var content = _this.teamListRef;\r\n            _this.allowUp = (content.scrollTop > 0);\r\n            _this.allowDown = (content.scrollTop <= content.scrollHeight - content.clientHeight);\r\n        };\r\n        /**\r\n         * event handler for touch move\r\n         */\r\n        _this.onTouchMove = function (event) {\r\n            setTimeout(function () {\r\n                event.preventDefault();\r\n                var content = _this.teamListRef;\r\n                var pageY = event.changedTouches[0].pageY;\r\n                var up = (pageY > _this.prevPageY);\r\n                var down = (pageY < _this.prevPageY);\r\n                var diff = Math.abs(_this.prevPageY - event.pageY);\r\n                _this.prevPageY = event.pageY;\r\n                if ((up && _this.allowUp)) {\r\n                    content.scrollTop = (content.scrollTop - diff);\r\n                }\r\n                else if (down && _this.allowDown) {\r\n                    content.scrollTop = (content.scrollTop + diff);\r\n                }\r\n            }, 0);\r\n        };\r\n        /**\r\n         * event handler for touch end\r\n         */\r\n        _this.onTouchEnd = function (event) {\r\n            _this.prevPageY = 0;\r\n        };\r\n        /**\r\n         * Method to cancel team selection.\r\n         */\r\n        _this.cancelTeamSelection = function () {\r\n            messagingActionCreator.updateSelectedTeamList(false);\r\n        };\r\n        /**\r\n         * Method to save selected team list in the message store.\r\n         */\r\n        _this.saveSelectedTeamList = function () {\r\n            messagingActionCreator.updateSelectedTeamList(true);\r\n        };\r\n        /**\r\n         * Method for handling entire team click.\r\n         */\r\n        _this.entireTeamClick = function () {\r\n            messagingActionCreator.entireTeamChecked(!_this.teamList.team.toTeam);\r\n        };\r\n        /**\r\n         * Method for update team list.\r\n         */\r\n        _this.teamListUpdated = function (isToTeamClick, isExpand) {\r\n            // avoid EntireTeam's checked-status change while clicking Expand/Collapse button\r\n            if (isExpand === undefined || !isExpand) {\r\n                _this.isToTeamChecked = isToTeamClick && messageStore.instance.teamDetails.team.toTeam ? true : false;\r\n            }\r\n            _this.teamList = messageStore.instance.teamDetails;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /*\r\n         * event handler for team list panel scroll.\r\n         */\r\n        _this.onScroll = function () {\r\n            _this.setState({\r\n                renderedOn: _this.state.renderedOn,\r\n                teamListScrollHeight: _this.getTeamListScrollHeight()\r\n            });\r\n        };\r\n        /**\r\n         * Clicking on check/uncheck of superviser\r\n         */\r\n        _this.updateTeamListStatus = function (uniqueId, isExpand) {\r\n            messagingActionCreator.updateTeamListStatus(uniqueId, isExpand);\r\n        };\r\n        // Set the default states\r\n        _this.state = {\r\n            renderedOn: 0,\r\n        };\r\n        _this.isShowAddressPopup = false;\r\n        if (messageStore.instance.teamDetails && messageStore.instance.teamDetails.team.subordinates) {\r\n            _this.isShowAddressPopup = messageStore.instance.teamDetails.team.subordinates.length > 0 ? true : false;\r\n        }\r\n        _this.teamList = messageStore.instance.teamDetails;\r\n        _this.isToTeamChecked = false;\r\n        if (_this.teamList) {\r\n            _this.isToTeamChecked = _this.teamList.team.toTeam;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    TeamListPopup.prototype.render = function () {\r\n        var _this = this;\r\n        this.teamList = messageStore.instance.teamDetails;\r\n        var toTeamListPopup = this.teamList ? (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { className: classNames('popup small msg-address-list-popup in-page-popout', this.isShowAddressPopup ? 'popup-overlay open' : 'popup-overlay close'), id: 'addressListPopUp', role: 'dialog', \"aria-describedby\": 'addressList' },\r\n                React.createElement(\"div\", { className: 'popup-wrap' },\r\n                    React.createElement(\"div\", { className: 'popup-content', id: 'popup1Desc', ref: function (ele) { _this.teamListRef = ele; } },\r\n                        React.createElement(\"div\", { className: 'tree-view' },\r\n                            React.createElement(\"ul\", { role: 'tree', id: 'addressList', onScroll: this.onScroll },\r\n                                React.createElement(\"li\", { className: 'node highlighted', role: 'treeitem', \"aria-expanded\": 'false', id: 'id_entire_team' },\r\n                                    React.createElement(\"input\", { type: 'checkbox', className: 'text-middle checkbox', id: 'item1', checked: this.isToTeamChecked, onChange: this.entireTeamClick }),\r\n                                    React.createElement(\"label\", { htmlFor: 'item1', id: 'id_entire_team_label' }, localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.entire-team'))),\r\n                                React.createElement(\"li\", { className: 'node expanded', role: 'treeitem', \"aria-expanded\": 'true' },\r\n                                    React.createElement(\"input\", { type: 'checkbox', className: 'text-middle checkbox', id: 'item2', checked: this.teamList && this.teamList.team.parent ?\r\n                                            this.teamList.team.parent.isChecked : false }),\r\n                                    this.teamList && this.teamList.team.parent ?\r\n                                        React.createElement(\"label\", { htmlFor: 'item2', onClick: this.updateTeamListStatus.bind(this, this.teamList.team.parent.examinerRoleId, false) }, this.teamList.team.parent.fullName) : null,\r\n                                    React.createElement(\"ul\", { role: 'group', id: this.props.id + '_TeamList' },\r\n                                        React.createElement(\"li\", { className: 'node expanded', role: 'treeitem', \"aria-expanded\": 'true', id: 'li_' + this.teamList.team.examinerRoleId },\r\n                                            React.createElement(\"span\", { className: 'sprite-icon user-icon-medium tree-icon' }),\r\n                                            React.createElement(\"label\", { className: 'text-middle', id: 'current_login_user' }, this.teamList.team.fullName),\r\n                                            React.createElement(TeamListTreeview, { id: 'teamList', key: 'teamList_key', addressList: this.teamList.team.subordinates, renderedOn: this.state.renderedOn }))))))),\r\n                    React.createElement(\"div\", { className: 'popup-footer text-right' },\r\n                        React.createElement(GenericButton, { id: 'button-rounded-close-button', key: 'key_button rounded close-button', className: 'button rounded close-button', title: localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.cancel-button'), content: localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.cancel-button'), disabled: false, onClick: this.cancelTeamSelection }),\r\n                        React.createElement(GenericButton, { id: 'button-primary-rounded-button', key: 'key_button primary rounded-button', className: 'button primary rounded', title: localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.ok-button'), content: localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.ok-button'), disabled: false, onClick: this.saveSelectedTeamList })))))) : null;\r\n        return (toTeamListPopup);\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    TeamListPopup.prototype.componentDidMount = function () {\r\n        /* these events are used to implement custom\r\n           scrolling logic to handle the elastic scroll behavior of ipad */\r\n        if (this.teamListRef && (htmlUtilities.isIPadDevice)) {\r\n            this.teamListRef.addEventListener('touchstart', this.onTouchStart);\r\n            this.teamListRef.addEventListener('touchmove', this.onTouchMove);\r\n            this.teamListRef.addEventListener('touchend', this.onTouchEnd);\r\n        }\r\n        messageStore.instance.addListener(messageStore.MessageStore.TEAM_LIST_UPDATED, this.teamListUpdated);\r\n    };\r\n    /**\r\n     * Component will unmount\r\n     */\r\n    TeamListPopup.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.TEAM_LIST_UPDATED, this.teamListUpdated);\r\n        this.teamListRef.removeEventListener('touchstart', this.onTouchStart);\r\n        this.teamListRef.removeEventListener('touchmove', this.onTouchMove);\r\n        this.teamListRef.removeEventListener('touchend', this.onTouchEnd);\r\n    };\r\n    /**\r\n     * componentWillReceiveProps\r\n     * @param nextProps\r\n     */\r\n    TeamListPopup.prototype.componentWillReceiveProps = function (nextProps) {\r\n        this.isShowAddressPopup = false;\r\n        if (messageStore.instance.teamDetails && messageStore.instance.teamDetails.team.subordinates) {\r\n            this.isShowAddressPopup = messageStore.instance.teamDetails.team.subordinates.length > 0 ? true : false;\r\n        }\r\n    };\r\n    /**\r\n     * returns the team list scroll height\r\n     */\r\n    TeamListPopup.prototype.getTeamListScrollHeight = function () {\r\n        return (this.teamListRef) ? (this.teamListRef.clientHeight + this.teamListRef.scrollTop) : undefined;\r\n    };\r\n    return TeamListPopup;\r\n}(pureRenderComponent));\r\nmodule.exports = TeamListPopup;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 479:
/* no static exports found */
/* all exports used */
/*!*****************************************************!*\
  !*** ./src/components/message/teamlisttreeview.tsx ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar TeamListTreeview = /** @class */ (function (_super) {\r\n    __extends(TeamListTreeview, _super);\r\n    /**\r\n     * Constructor Messagepopup\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function TeamListTreeview(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isInitialLoad = true;\r\n        /**\r\n         * Clicking on expand/collapse or check/uncheck\r\n         */\r\n        _this.updateTeamListStatus = function (uniqueId, isExpand) {\r\n            messagingActionCreator.updateTeamListStatus(uniqueId, isExpand);\r\n        };\r\n        _this._className = _this.props.addressList.length > 0 ? 'sub-items has-expandables' : null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render component\r\n     * @returns\r\n     */\r\n    TeamListTreeview.prototype.render = function () {\r\n        var that = this;\r\n        var nodes;\r\n        var teamListTreeView;\r\n        if (that.props.addressList !== undefined) {\r\n            nodes = that.props.addressList.map(function (nodeItem, index) {\r\n                return that.getNodeItem(nodeItem, index);\r\n            });\r\n        }\r\n        return (React.createElement(\"ul\", { role: 'group', className: this._className, id: this.props.id, key: this.props.id }, nodes));\r\n    };\r\n    /**\r\n     * getting node items\r\n     */\r\n    TeamListTreeview.prototype.getNodeItem = function (nodeItem, index) {\r\n        var checkBoxId = 'cbx_' + nodeItem.examinerRoleId;\r\n        if (nodeItem.subordinates.length > 0) {\r\n            var teamListTreeview = nodeItem.isOpen ? (React.createElement(TeamListTreeview, { id: 'nodeItem_' + nodeItem.examinerRoleId, key: 'nodeItem_' + index.toString() + '_key_' + nodeItem.examinerRoleId, addressList: nodeItem.subordinates, renderedOn: Date.now() })) : null;\r\n            var classNameForExpand = nodeItem.isOpen ? 'node has-sub expanded' : 'node has-sub collapsed';\r\n            return (React.createElement(\"li\", { id: 'li_' + nodeItem.examinerRoleId, key: 'li_' + index.toString() + '_' + nodeItem.examinerRoleId, className: classNameForExpand, role: 'treeitem', \"aria-expanded\": 'true' },\r\n                React.createElement(\"a\", { id: 'a_' + nodeItem.examinerRoleId, onClick: this.updateTeamListStatus.bind(this, nodeItem.examinerRoleId, true), href: 'javascript:void(0);', className: 'parent-node' }),\r\n                React.createElement(\"input\", { type: 'checkbox', className: 'text-middle checkbox', id: checkBoxId, checked: nodeItem.isChecked, onChange: this.updateTeamListStatus.bind(this, nodeItem.examinerRoleId, false) }),\r\n                React.createElement(\"label\", { htmlFor: checkBoxId }, nodeItem.fullName),\r\n                teamListTreeview));\r\n        }\r\n        else {\r\n            return (React.createElement(\"li\", { id: 'li_' + nodeItem.examinerRoleId, key: 'li_' + index.toString() + '_' + nodeItem.examinerRoleId, className: 'node', role: 'treeitem' },\r\n                React.createElement(\"input\", { type: 'checkbox', className: 'text-middle checkbox', id: checkBoxId, checked: nodeItem.isChecked, onChange: this.updateTeamListStatus.bind(this, nodeItem.examinerRoleId, false) }),\r\n                React.createElement(\"label\", { htmlFor: checkBoxId }, nodeItem.fullName)));\r\n        }\r\n    };\r\n    return TeamListTreeview;\r\n}(pureRenderComponent));\r\nmodule.exports = TeamListTreeview;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDc5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS90ZWFtbGlzdHRyZWV2aWV3LnRzeD84MjIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBSZWFjdERvbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgbG9jYWxlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbG9jYWxlL2xvY2FsZXN0b3JlJyk7XHJcbmltcG9ydCBHZW5lcmljQnV0dG9uID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9nZW5lcmljYnV0dG9uJyk7XHJcbmltcG9ydCBlbnVtcyA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvZW51bXMnKTtcclxuaW1wb3J0IHRvQWRkcmVzc0xpc3QgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbWVzc2FnZS90eXBpbmdzL3RlYW1yZXR1cm4nKTtcclxuaW1wb3J0IG1lc3NhZ2luZ0FjdGlvbkNyZWF0b3IgPSByZXF1aXJlKCcuLi8uLi9hY3Rpb25zL21lc3NhZ2luZy9tZXNzYWdpbmdhY3Rpb25jcmVhdG9yJyk7XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMgZXh0ZW5kcyBQcm9wc0Jhc2UsIExvY2FsZVNlbGVjdGlvbkJhc2Uge1xyXG4gICAgYWRkcmVzc0xpc3Q6IEFycmF5PEV4YW1pbmVySW5mbz47XHJcbiAgICByZW5kZXJlZE9uPzogbnVtYmVyO1xyXG59XHJcblxyXG5jbGFzcyBUZWFtTGlzdFRyZWV2aWV3IGV4dGVuZHMgcHVyZVJlbmRlckNvbXBvbmVudDxQcm9wcywgYW55PiB7XHJcblxyXG4gICAgcHJpdmF0ZSBfY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGlzSW5pdGlhbExvYWQ6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3IgTWVzc2FnZXBvcHVwXHJcbiAgICAgKiBAcGFyYW0gcHJvcHNcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMsIHN0YXRlOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihwcm9wcywgc3RhdGUpO1xyXG5cclxuICAgICAgICB0aGlzLl9jbGFzc05hbWUgPSB0aGlzLnByb3BzLmFkZHJlc3NMaXN0Lmxlbmd0aCA+IDAgPyAnc3ViLWl0ZW1zIGhhcy1leHBhbmRhYmxlcycgOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyIGNvbXBvbmVudFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbmRlcigpOiBKU1guRWxlbWVudCB7XHJcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xyXG4gICAgICAgIGxldCBub2RlczogYW55O1xyXG5cclxuICAgICAgICBsZXQgdGVhbUxpc3RUcmVlVmlldzogYW55O1xyXG5cclxuICAgICAgICBpZiAodGhhdC5wcm9wcy5hZGRyZXNzTGlzdCAhPT0gdW5kZWZpbmVkKSB7XHJcblxyXG4gICAgICAgICAgICBub2RlcyA9IHRoYXQucHJvcHMuYWRkcmVzc0xpc3QubWFwKGZ1bmN0aW9uIChub2RlSXRlbTogRXhhbWluZXJJbmZvLCBpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC5nZXROb2RlSXRlbShub2RlSXRlbSwgaW5kZXgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDx1bCByb2xlPSdncm91cCcgY2xhc3NOYW1lPXt0aGlzLl9jbGFzc05hbWV9IGlkPXt0aGlzLnByb3BzLmlkfSBrZXk9e3RoaXMucHJvcHMuaWR9PlxyXG4gICAgICAgICAgICAgICAge25vZGVzfVxyXG4gICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogZ2V0dGluZyBub2RlIGl0ZW1zXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0Tm9kZUl0ZW0obm9kZUl0ZW06IEV4YW1pbmVySW5mbywgaW5kZXg6IG51bWJlcik6IGFueSB7XHJcbiAgICAgICAgbGV0IGNoZWNrQm94SWQ6IHN0cmluZyA9ICdjYnhfJyArIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkO1xyXG5cclxuICAgICAgICBpZiAobm9kZUl0ZW0uc3Vib3JkaW5hdGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbGV0IHRlYW1MaXN0VHJlZXZpZXcgPSBub2RlSXRlbS5pc09wZW4gPyAoPFRlYW1MaXN0VHJlZXZpZXdcclxuICAgICAgICAgICAgICAgIGlkPXsnbm9kZUl0ZW1fJyArIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkfVxyXG4gICAgICAgICAgICAgICAga2V5PXsnbm9kZUl0ZW1fJyArIGluZGV4LnRvU3RyaW5nKCkgKyAnX2tleV8nICsgbm9kZUl0ZW0uZXhhbWluZXJSb2xlSWQgfVxyXG4gICAgICAgICAgICAgICAgYWRkcmVzc0xpc3QgPXtub2RlSXRlbS5zdWJvcmRpbmF0ZXN9XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlZE9uID0ge0RhdGUubm93KCl9Lz4pIDogbnVsbDtcclxuXHJcbiAgICAgICAgICAgIGxldCBjbGFzc05hbWVGb3JFeHBhbmQgPSBub2RlSXRlbS5pc09wZW4gPyAnbm9kZSBoYXMtc3ViIGV4cGFuZGVkJyA6ICdub2RlIGhhcy1zdWIgY29sbGFwc2VkJztcclxuICAgICAgICAgICAgcmV0dXJuICg8bGkgaWQ9eydsaV8nICsgbm9kZUl0ZW0uZXhhbWluZXJSb2xlSWR9IGtleT17J2xpXycgKyBpbmRleC50b1N0cmluZygpICsgJ18nICsgbm9kZUl0ZW0uZXhhbWluZXJSb2xlSWR9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZUZvckV4cGFuZH0gcm9sZT0ndHJlZWl0ZW0nIGFyaWEtZXhwYW5kZWQ9J3RydWUnPlxyXG4gICAgICAgICAgICAgICAgPGFcclxuICAgICAgICAgICAgICAgICAgICBpZD17J2FfJyArIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2sgPSB7dGhpcy51cGRhdGVUZWFtTGlzdFN0YXR1cy5iaW5kKHRoaXMsIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkLCB0cnVlKSB9XHJcbiAgICAgICAgICAgICAgICAgICAgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApOycgY2xhc3NOYW1lPSdwYXJlbnQtbm9kZSc+PC9hPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT0nY2hlY2tib3gnXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd0ZXh0LW1pZGRsZSBjaGVja2JveCdcclxuICAgICAgICAgICAgICAgICAgICBpZD17Y2hlY2tCb3hJZH1cclxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkID0ge25vZGVJdGVtLmlzQ2hlY2tlZH1cclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVUZWFtTGlzdFN0YXR1cy5iaW5kKHRoaXMsIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkLCBmYWxzZSkgfVxyXG4gICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDxsYWJlbFxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWxGb3I9e2NoZWNrQm94SWR9PlxyXG4gICAgICAgICAgICAgICAgICAgIHtub2RlSXRlbS5mdWxsTmFtZX1cclxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgIHt0ZWFtTGlzdFRyZWV2aWV3fVxyXG4gICAgICAgICAgICA8L2xpPik7XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoPGxpIGlkPXsnbGlfJyArIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkfSBrZXk9eydsaV8nICsgaW5kZXgudG9TdHJpbmcoKSArICdfJyArIG5vZGVJdGVtLmV4YW1pbmVyUm9sZUlkfVxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdub2RlJyByb2xlPSd0cmVlaXRlbSc+XHJcbiAgICAgICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICAgICAgICB0eXBlPSdjaGVja2JveCdcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3RleHQtbWlkZGxlIGNoZWNrYm94J1xyXG4gICAgICAgICAgICAgICAgICAgIGlkPXtjaGVja0JveElkfVxyXG4gICAgICAgICAgICAgICAgICAgIGNoZWNrZWQgPSB7bm9kZUl0ZW0uaXNDaGVja2VkfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZVRlYW1MaXN0U3RhdHVzLmJpbmQodGhpcywgbm9kZUl0ZW0uZXhhbWluZXJSb2xlSWQsIGZhbHNlKSB9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDxsYWJlbFxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWxGb3I9e2NoZWNrQm94SWR9PlxyXG4gICAgICAgICAgICAgICAgICAgIHtub2RlSXRlbS5mdWxsTmFtZX08L2xhYmVsPlxyXG4gICAgICAgICAgICA8L2xpPik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIENsaWNraW5nIG9uIGV4cGFuZC9jb2xsYXBzZSBvciBjaGVjay91bmNoZWNrXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgdXBkYXRlVGVhbUxpc3RTdGF0dXMgPSAodW5pcXVlSWQ6IG51bWJlciwgaXNFeHBhbmQ6IGJvb2xlYW4pID0+IHtcclxuICAgICAgICBtZXNzYWdpbmdBY3Rpb25DcmVhdG9yLnVwZGF0ZVRlYW1MaXN0U3RhdHVzKHVuaXF1ZUlkLCBpc0V4cGFuZCk7XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgPSBUZWFtTGlzdFRyZWV2aWV3O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL3RlYW1saXN0dHJlZXZpZXcudHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFLQTtBQU9BO0FBQUE7QUFLQTs7OztBQUlBO0FBQ0E7QUFBQTtBQVBBO0FBeUZBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBcEZBOztBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFLQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFNQTtBQUNBO0FBRUE7QUFJQTtBQU9BO0FBSUE7QUFHQTtBQUFBO0FBQ0E7QUFFQTtBQU9BO0FBSUE7QUFDQTtBQVNBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 489:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/message/messagerightpanel.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar messageTranslationHelper = __webpack_require__(/*! ../utility/message/messagetranslationhelper */ 459);\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar MessagePriorityDescription = __webpack_require__(/*! ./messageprioritydescription */ 508);\r\nvar MessageDetailsSenderInfo = __webpack_require__(/*! ./messagedetailssenderinfo */ 506);\r\nvar MessageDetailsSenderDate = __webpack_require__(/*! ./messagedetailssenderdate */ 505);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar MessageActionMenu = __webpack_require__(/*! ./messageactionmenu */ 504);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar TINYMCE = __webpack_require__(/*! react-tinymce */ 45);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/**\r\n * Message Description Area\r\n * @param props\r\n */\r\nvar messageRightPanel = function (props) {\r\n    if (props.message === undefined || props.messageDetails == null) {\r\n        // Message is not yet selected. No Need to handle here.\r\n        return null;\r\n    }\r\n    if (qigStore.instance.isQIGHidden(props.message.markSchemeGroupId)) {\r\n        // No message in the right panel.\r\n        return null;\r\n    }\r\n    /**\r\n     * Make the string as html.\r\n     * @param messageContent\r\n     */\r\n    function createMarkup() {\r\n        // Defect 29714 fix\r\n        // styles applied from web assessor will apply to all elements in mark scheme panel\r\n        // to avoid that, render the mesage content in an iframe element\r\n        // Defect 29926, 29976, 29977 fix : remove html scripts in message body\r\n        var iframe = document.createElement('iframe');\r\n        iframe.id = 'msg-iframe_ifr';\r\n        iframe.style.height = '100%';\r\n        iframe.style.width = '100%';\r\n        iframe.style.display = 'block';\r\n        return { __html: iframe.outerHTML };\r\n    }\r\n    var translatedMessageContents = messageTranslationHelper.getTranslatedContent(props.message);\r\n    /**\r\n     * This method will returns the message body\r\n     */\r\n    function getMessageBody() {\r\n        // If selected message is a system message then returns the corresponding language json file entry\r\n        if (props.message.examBodyMessageTypeId != null && props.message.examBodyMessageTypeId !== enums.SystemMessage.None) {\r\n            return translatedMessageContents.content;\r\n        }\r\n        else {\r\n            return props.messageDetails.body;\r\n        }\r\n    }\r\n    /**\r\n     * This method will return the message actions\r\n     */\r\n    function getMessageActions() {\r\n        var messageActions = new Array();\r\n        // Add Reply action if and only if the reply field is null or true\r\n        if (props.message.canReply == null || props.message.canReply) {\r\n            messageActions.push(enums.MessageAction.Reply);\r\n        }\r\n        // Add forward action if isForwardButtonHidden field is false\r\n        if (!props.isForwardButtonHidden) {\r\n            messageActions.push(enums.MessageAction.Forward);\r\n        }\r\n        messageActions.push(enums.MessageAction.Delete);\r\n        return messageActions;\r\n    }\r\n    /**\r\n     * This method will return the selected Tab for linked messages and Message page\r\n     */\r\n    function getSelectedTab() {\r\n        // This will handle linked message folder types\r\n        if (props.selectedTab === enums.MessageFolderType.None) {\r\n            return props.message.messageFolderType;\r\n        }\r\n        else {\r\n            return props.selectedTab;\r\n        }\r\n    }\r\n    var editorConfig = {\r\n        readonly: 1,\r\n        menubar: false,\r\n        statusbar: false,\r\n        toolbar: false,\r\n        fontsize_formats: false,\r\n        font_formats: false,\r\n        valid_children: '+body[style]',\r\n        invalid_elements: 'embed'\r\n    };\r\n    if (tinymce.get('msg-tinymce_ifr')) {\r\n        tinymce.get('msg-tinymce_ifr').destroy();\r\n    }\r\n    /**\r\n     * This method will call on tinyMCE content setting\r\n     * @param o\r\n     * @param e\r\n     */\r\n    function setContent(o, e) {\r\n        messageHelper.addIFrameForMessageDetails(o, e);\r\n    }\r\n    var tinymceElement = React.createElement(TINYMCE, { content: getMessageBody(), Id: 'msg-tinymce_ifr', config: editorConfig, onSetContent: setContent });\r\n    return (React.createElement(\"div\", { className: classNames({ 'column-right message-expanded': props.selectedTab !== enums.MessageFolderType.None }, { 'messaging-content': props.selectedTab === enums.MessageFolderType.None }) },\r\n        React.createElement(\"div\", { className: classNames('msg-exp-wrapper', { 'wrapper': props.selectedTab !== enums.MessageFolderType.None }) },\r\n            React.createElement(\"div\", { className: 'msg-exp-header' },\r\n                React.createElement(\"div\", { className: 'msg-subject-wrap clearfix' },\r\n                    React.createElement(\"div\", { className: 'msg-subject' },\r\n                        React.createElement(\"h4\", { className: 'msg-subject-title', id: 'msg-det-sender-info-subject' }, translatedMessageContents.subject)))),\r\n            React.createElement(\"div\", { className: 'msg-exp-metainfo' },\r\n                React.createElement(\"div\", { className: 'col-wrap responsive-medium' },\r\n                    React.createElement(MessageActionMenu, { id: 'message-action-menu', key: 'key-message-action-menu', items: messageHelper.getMessageMenuActionItems(getSelectedTab(), getMessageActions()), onClick: function (messageAction) {\r\n                            props.onMessageMenuActionClickCallback(messageAction);\r\n                        } }),\r\n                    React.createElement(MessageDetailsSenderDate, { id: 'msg-det-sender-info', key: 'msg-det-sender-info', displayDate: props.message.displayDate })),\r\n                React.createElement(MessageDetailsSenderInfo, { id: 'msg-det-sender-info', key: 'msg-det-sender-info', selectedLanguage: props.selectedLanguage, message: props.message, messageDetails: props.messageDetails, selectedTab: props.selectedTab, onDisplayIdClick: props.onDisplayIdClick }),\r\n                React.createElement(MessagePriorityDescription, { selectedLanguage: props.selectedLanguage, id: 'msg-det-priority-desc', key: 'msg-det-priority-desc', messagePriorityName: props.message.priorityName })),\r\n            React.createElement(\"div\", { style: { display: 'none' } }, tinymceElement),\r\n            React.createElement(\"div\", { className: 'msg-exp-body', dangerouslySetInnerHTML: createMarkup() }))));\r\n};\r\nmodule.exports = messageRightPanel;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 504:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/message/messageactionmenu.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/* tslint:disable:variable-name */\r\nvar MenuItem = function (props) {\r\n    return (React.createElement(\"li\", { className: props.item.name + '-msg' },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: function () { props.onClick(props.item.id); }, id: enums.getEnumString(enums.MessageAction, props.item.id).toLowerCase() + '-link' },\r\n            React.createElement(\"span\", { className: 'sprite-icon ' + props.item.icon },\r\n                \" \",\r\n                props.item.name),\r\n            \" \",\r\n            props.item.name,\r\n            \" \")));\r\n};\r\nvar MenuList = function (props) { return (React.createElement(\"ul\", { id: 'menu-action-items', className: 'msg-action-menu' }, props.items.map(function (item) { return React.createElement(MenuItem, { key: 'key-menu-lits-item-' + item.id, onClick: props.onClick, item: item }); }))); };\r\nvar MessageActionMenu = function (props) {\r\n    if (props.items === undefined) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"div\", { className: 'col-6-of-12 msg-actions text-right' },\r\n        React.createElement(MenuList, { key: 'key-menu-list', items: props.items, onClick: props.onClick })));\r\n};\r\nmodule.exports = MessageActionMenu;\r\n/* tslint:enable */ \r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlYWN0aW9ubWVudS50c3g/NTNjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5cclxuaW50ZXJmYWNlIE1lc3NhZ2VBY3Rpb25NZW51SXRlbXMgZXh0ZW5kcyBQcm9wc0Jhc2Uge1xyXG4gICAgb25DbGljazogRnVuY3Rpb247XHJcbiAgICBpdGVtczogQXJyYXk8TWVudUl0ZW0+O1xyXG59XHJcblxyXG5pbnRlcmZhY2UgTWVudUl0ZW0ge1xyXG4gICAgaWQ6IGVudW1zLk1lc3NhZ2VBY3Rpb247XHJcbiAgICBpY29uOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcbmNvbnN0IE1lbnVJdGVtID0gKHByb3BzOiB7IG9uQ2xpY2s6IEZ1bmN0aW9uLCBpdGVtOiBNZW51SXRlbSB9KSA9PlxyXG4gICAgKDxsaSBjbGFzc05hbWUgPSB7IHByb3BzLml0ZW0ubmFtZSArICctbXNnJyB9PlxyXG4gICAgICAgIDxhIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKScgb25DbGljayA9IHsoKSA9PiB7IHByb3BzLm9uQ2xpY2socHJvcHMuaXRlbS5pZCk7IH0gfVxyXG4gICAgICAgICAgICBpZCA9IHsgZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5NZXNzYWdlQWN0aW9uLCBwcm9wcy5pdGVtLmlkKS50b0xvd2VyQ2FzZSgpICsgJy1saW5rJyB9PlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydzcHJpdGUtaWNvbiAnICsgcHJvcHMuaXRlbS5pY29uIH0+IHsgcHJvcHMuaXRlbS5uYW1lIH1cclxuICAgICAgICAgICAgPC9zcGFuPiB7IHByb3BzLml0ZW0ubmFtZSB9IDwvYT5cclxuICAgIDwvbGk+KTtcclxuXHJcbmNvbnN0IE1lbnVMaXN0ID0gKHByb3BzOiB7IG9uQ2xpY2s6IEZ1bmN0aW9uLCBpdGVtczogQXJyYXk8TWVudUl0ZW0+IH0pID0+IChcclxuICAgIDx1bCBpZD0nbWVudS1hY3Rpb24taXRlbXMnIGNsYXNzTmFtZT0nbXNnLWFjdGlvbi1tZW51Jz5cclxuICAgICAgICB7IHByb3BzLml0ZW1zLm1hcCgoaXRlbTogTWVudUl0ZW0pID0+IDxNZW51SXRlbSBrZXk9IHsgJ2tleS1tZW51LWxpdHMtaXRlbS0nICsgaXRlbS5pZCB9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eyBwcm9wcy5vbkNsaWNrfSBpdGVtPSB7IGl0ZW0gfSAvPikgfVxyXG4gICAgPC91bD5cclxuKTtcclxuXHJcbmNvbnN0IE1lc3NhZ2VBY3Rpb25NZW51ID0gKHByb3BzOiBNZXNzYWdlQWN0aW9uTWVudUl0ZW1zKSA9PiB7XHJcbiAgICBpZiAocHJvcHMuaXRlbXMgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9J2NvbC02LW9mLTEyIG1zZy1hY3Rpb25zIHRleHQtcmlnaHQnPlxyXG4gICAgICAgIDxNZW51TGlzdCBrZXk9eydrZXktbWVudS1saXN0J30gaXRlbXMgPSB7cHJvcHMuaXRlbXN9IG9uQ2xpY2sgPSB7cHJvcHMub25DbGlja30vPlxyXG4gICAgPC9kaXY+KTtcclxufTtcclxuXHJcbmV4cG9ydCA9IE1lc3NhZ2VBY3Rpb25NZW51O1xyXG5cclxuLyogdHNsaW50OmVuYWJsZSAqL1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VhY3Rpb25tZW51LnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQWFBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBQUE7O0FBQ0E7QUFBQTtBQUpBO0FBT0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 505:
/* no static exports found */
/* all exports used */
/*!*************************************************************!*\
  !*** ./src/components/message/messagedetailssenderdate.tsx ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\n/**\r\n * Message Details Send Date section which contains date and time of send message.\r\n * @param props\r\n */\r\nvar messageDetailsSenderDate = function (props) {\r\n    // Get the date format\r\n    var displayDate = messageHelper.getDateToDisplay(props.displayDate);\r\n    return (React.createElement(\"div\", { className: 'col-6-of-12 msg-sender-info' },\r\n        React.createElement(\"div\", { className: 'msg-time small-text dim-text', id: props.id + '-date' }, displayDate)));\r\n};\r\nmodule.exports = messageDetailsSenderDate;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlZGV0YWlsc3NlbmRlcmRhdGUudHN4P2ZjMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG1lc3NhZ2VUcmFuc2xhdGlvbkhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdldHJhbnNsYXRpb25oZWxwZXInKTtcclxuaW1wb3J0IHFpZ1N0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3FpZ3NlbGVjdG9yL3FpZ3N0b3JlJyk7XHJcblxyXG5pbnRlcmZhY2UgTWVzc2FnZURldGFpbHNTZW5kZXJEYXRlUHJvcHMgZXh0ZW5kcyBQcm9wc0Jhc2Uge1xyXG4gICAgZGlzcGxheURhdGU6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIE1lc3NhZ2UgRGV0YWlscyBTZW5kIERhdGUgc2VjdGlvbiB3aGljaCBjb250YWlucyBkYXRlIGFuZCB0aW1lIG9mIHNlbmQgbWVzc2FnZS5cclxuICogQHBhcmFtIHByb3BzXHJcbiAqL1xyXG5jb25zdCBtZXNzYWdlRGV0YWlsc1NlbmRlckRhdGU6IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxNZXNzYWdlRGV0YWlsc1NlbmRlckRhdGVQcm9wcz4gPSAocHJvcHM6IE1lc3NhZ2VEZXRhaWxzU2VuZGVyRGF0ZVByb3BzKSA9PiB7XHJcblxyXG4gICAgLy8gR2V0IHRoZSBkYXRlIGZvcm1hdFxyXG4gICAgbGV0IGRpc3BsYXlEYXRlID0gbWVzc2FnZUhlbHBlci5nZXREYXRlVG9EaXNwbGF5KHByb3BzLmRpc3BsYXlEYXRlKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2wtNi1vZi0xMiBtc2ctc2VuZGVyLWluZm8nPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXNnLXRpbWUgc21hbGwtdGV4dCBkaW0tdGV4dCcgaWQ9eyBwcm9wcy5pZCArICctZGF0ZSd9ID57ZGlzcGxheURhdGV9PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZURldGFpbHNTZW5kZXJEYXRlO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VkZXRhaWxzc2VuZGVyZGF0ZS50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUVBO0FBU0E7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUdBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 506:
/* no static exports found */
/* all exports used */
/*!*************************************************************!*\
  !*** ./src/components/message/messagedetailssenderinfo.tsx ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar MessageInfo = __webpack_require__(/*! ./messageinfo */ 507);\r\nvar stringHelper = __webpack_require__(/*! ../../utility/generic/stringhelper */ 254);\r\n/**\r\n * Message Details header section which contains time , sender name and associated response details\r\n * @param props\r\n */\r\nvar messageDetailsSenderInfo = function (props) {\r\n    /**\r\n     * Handles the Click Event of Display ID\r\n     */\r\n    var onDisplayIdClick = function () {\r\n        props.onDisplayIdClick();\r\n    };\r\n    /**\r\n     * Render Display Id as link Only If the examiner has access to view the script\r\n     */\r\n    var renderDisplayIDControl = function () {\r\n        if (props.selectedTab !== enums.MessageFolderType.None && props.selectedTab !== enums.MessageFolderType.Deleted &&\r\n            props.messageDetails.hasPermissionToDisplayId && props.messageDetails.hasPermissionInStdSetupWorklist) {\r\n            return React.createElement(\"a\", { onClick: onDisplayIdClick, id: props.id + '-response-id' },\r\n                messageHelper.getMarkingModeText(props.messageDetails.markingModeId, props.messageDetails.isElectronicStandardisationTeamMember),\r\n                getDisplayId());\r\n        }\r\n        else {\r\n            var displayIdNoLinkTooltip = stringHelper.format(localeStore.instance.TranslateText('assessor3.message.display-id-no-link-tooltip'), [String(String.fromCharCode(179))]);\r\n            return React.createElement(\"span\", { title: displayIdNoLinkTooltip, id: props.id + '-response-id-read-only' },\r\n                messageHelper.getMarkingModeText(props.messageDetails.markingModeId, props.messageDetails.isElectronicStandardisationTeamMember),\r\n                getDisplayId());\r\n        }\r\n    };\r\n    /**\r\n     * Show the displayId label only if there are any associated response with the message\r\n     */\r\n    var renderDisplayIDArea = function () {\r\n        var displayIdText = localeStore.instance.TranslateText('messaging.message-lists.message-detail.associated-response-id') + ' ';\r\n        if (props.messageDetails.displayId != null) {\r\n            return (React.createElement(\"div\", { className: 'msg-response-id', id: props.id + '-response-data' },\r\n                React.createElement(\"span\", { className: 'dim-text', id: props.id + '-response-text' }, displayIdText),\r\n                renderDisplayIDControl()));\r\n        }\r\n    };\r\n    /**\r\n     * to render message recipients list\r\n     */\r\n    var renderMessageRecipientList = function () {\r\n        if (props.message && props.message != null) {\r\n            return (React.createElement(MessageInfo, { id: 'msg-to', key: 'msg-to', selectedLanguage: props.selectedLanguage, message: props.message }));\r\n        }\r\n    };\r\n    return (React.createElement(\"div\", { className: 'msg-exp-metainfo-row2' },\r\n        renderMessageRecipientList(),\r\n        renderDisplayIDArea()));\r\n    /**\r\n     * This method will returns the displayId for system messages with prefix 6\r\n     */\r\n    function getDisplayId() {\r\n        // If selected message is a system message then returns displayId with prefix 6\r\n        if (props.message.examBodyMessageTypeId != null && props.message.examBodyMessageTypeId !== enums.SystemMessage.None) {\r\n            return '6' + props.messageDetails.displayId;\r\n        }\r\n        else {\r\n            return props.messageDetails.displayId;\r\n        }\r\n    }\r\n};\r\nmodule.exports = messageDetailsSenderInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlZGV0YWlsc3NlbmRlcmluZm8udHN4P2QwZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG1lc3NhZ2VUcmFuc2xhdGlvbkhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdldHJhbnNsYXRpb25oZWxwZXInKTtcclxuaW1wb3J0IE1lc3NhZ2VJbmZvID0gcmVxdWlyZSgnLi9tZXNzYWdlaW5mbycpO1xyXG5pbXBvcnQgcWlnU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvcWlnc2VsZWN0b3IvcWlnc3RvcmUnKTtcclxuaW1wb3J0IHN0cmluZ0hlbHBlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxpdHkvZ2VuZXJpYy9zdHJpbmdoZWxwZXInKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlRGV0YWlsc1NlbmRlckluZm9Qcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBtZXNzYWdlOiBNZXNzYWdlO1xyXG4gICAgbWVzc2FnZURldGFpbHM6IE1lc3NhZ2VEZXRhaWxzO1xyXG4gICAgb25EaXNwbGF5SWRDbGljaz86IEZ1bmN0aW9uO1xyXG4gICAgc2VsZWN0ZWRUYWI6IGVudW1zLk1lc3NhZ2VGb2xkZXJUeXBlO1xyXG59XHJcblxyXG4vKipcclxuICogTWVzc2FnZSBEZXRhaWxzIGhlYWRlciBzZWN0aW9uIHdoaWNoIGNvbnRhaW5zIHRpbWUgLCBzZW5kZXIgbmFtZSBhbmQgYXNzb2NpYXRlZCByZXNwb25zZSBkZXRhaWxzXHJcbiAqIEBwYXJhbSBwcm9wc1xyXG4gKi9cclxuY29uc3QgbWVzc2FnZURldGFpbHNTZW5kZXJJbmZvOiBSZWFjdC5TdGF0ZWxlc3NDb21wb25lbnQ8TWVzc2FnZURldGFpbHNTZW5kZXJJbmZvUHJvcHM+ID0gKHByb3BzOiBNZXNzYWdlRGV0YWlsc1NlbmRlckluZm9Qcm9wcykgPT4ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBDbGljayBFdmVudCBvZiBEaXNwbGF5IElEXHJcbiAgICAgKi9cclxuICAgIGNvbnN0IG9uRGlzcGxheUlkQ2xpY2sgPSAoKSA9PiB7XHJcblxyXG4gICAgICAgIHByb3BzLm9uRGlzcGxheUlkQ2xpY2soKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgRGlzcGxheSBJZCBhcyBsaW5rIE9ubHkgSWYgdGhlIGV4YW1pbmVyIGhhcyBhY2Nlc3MgdG8gdmlldyB0aGUgc2NyaXB0XHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlckRpc3BsYXlJRENvbnRyb2wgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHByb3BzLnNlbGVjdGVkVGFiICE9PSBlbnVtcy5NZXNzYWdlRm9sZGVyVHlwZS5Ob25lICYmIHByb3BzLnNlbGVjdGVkVGFiICE9PSBlbnVtcy5NZXNzYWdlRm9sZGVyVHlwZS5EZWxldGVkICYmXHJcbiAgICAgICAgICAgIHByb3BzLm1lc3NhZ2VEZXRhaWxzLmhhc1Blcm1pc3Npb25Ub0Rpc3BsYXlJZCAmJiBwcm9wcy5tZXNzYWdlRGV0YWlscy5oYXNQZXJtaXNzaW9uSW5TdGRTZXR1cFdvcmtsaXN0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiA8YSBvbkNsaWNrPXtvbkRpc3BsYXlJZENsaWNrfSBpZD17cHJvcHMuaWQgKyAnLXJlc3BvbnNlLWlkJ30+XHJcbiAgICAgICAgICAgICAgICB7bWVzc2FnZUhlbHBlci5nZXRNYXJraW5nTW9kZVRleHQocHJvcHMubWVzc2FnZURldGFpbHMubWFya2luZ01vZGVJZCxcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5tZXNzYWdlRGV0YWlscy5pc0VsZWN0cm9uaWNTdGFuZGFyZGlzYXRpb25UZWFtTWVtYmVyKX1cclxuICAgICAgICAgICAgICAgIHtnZXREaXNwbGF5SWQoKX08L2E+O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxldCBkaXNwbGF5SWROb0xpbmtUb29sdGlwID0gc3RyaW5nSGVscGVyLmZvcm1hdChcclxuICAgICAgICAgICAgICAgIGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2Fzc2Vzc29yMy5tZXNzYWdlLmRpc3BsYXktaWQtbm8tbGluay10b29sdGlwJyksXHJcbiAgICAgICAgICAgICAgICBbU3RyaW5nKFN0cmluZy5mcm9tQ2hhckNvZGUoMTc5KSldKTtcclxuICAgICAgICAgICAgcmV0dXJuIDxzcGFuIHRpdGxlPXtkaXNwbGF5SWROb0xpbmtUb29sdGlwfVxyXG4gICAgICAgICAgICAgICAgaWQ9e3Byb3BzLmlkICsgJy1yZXNwb25zZS1pZC1yZWFkLW9ubHknfT5cclxuICAgICAgICAgICAgICAgIHttZXNzYWdlSGVscGVyLmdldE1hcmtpbmdNb2RlVGV4dChwcm9wcy5tZXNzYWdlRGV0YWlscy5tYXJraW5nTW9kZUlkLFxyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLm1lc3NhZ2VEZXRhaWxzLmlzRWxlY3Ryb25pY1N0YW5kYXJkaXNhdGlvblRlYW1NZW1iZXIpfVxyXG4gICAgICAgICAgICAgICAge2dldERpc3BsYXlJZCgpfTwvc3Bhbj47XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNob3cgdGhlIGRpc3BsYXlJZCBsYWJlbCBvbmx5IGlmIHRoZXJlIGFyZSBhbnkgYXNzb2NpYXRlZCByZXNwb25zZSB3aXRoIHRoZSBtZXNzYWdlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlckRpc3BsYXlJREFyZWEgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGRpc3BsYXlJZFRleHQgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdtZXNzYWdpbmcubWVzc2FnZS1saXN0cy5tZXNzYWdlLWRldGFpbC5hc3NvY2lhdGVkLXJlc3BvbnNlLWlkJykgKyAnICc7XHJcbiAgICAgICAgaWYgKHByb3BzLm1lc3NhZ2VEZXRhaWxzLmRpc3BsYXlJZCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXNnLXJlc3BvbnNlLWlkJyBpZD17IHByb3BzLmlkICsgJy1yZXNwb25zZS1kYXRhJ30+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkaW0tdGV4dCcgaWQ9eyBwcm9wcy5pZCArICctcmVzcG9uc2UtdGV4dCd9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7ZGlzcGxheUlkVGV4dH1cclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAge3JlbmRlckRpc3BsYXlJRENvbnRyb2woKSB9XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogdG8gcmVuZGVyIG1lc3NhZ2UgcmVjaXBpZW50cyBsaXN0XHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlck1lc3NhZ2VSZWNpcGllbnRMaXN0ID0gKCkgPT4ge1xyXG4gICAgICAgIGlmIChwcm9wcy5tZXNzYWdlICYmIHByb3BzLm1lc3NhZ2UgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gKDxNZXNzYWdlSW5mb1xyXG4gICAgICAgICAgICAgICAgaWQ9J21zZy10bydcclxuICAgICAgICAgICAgICAgIGtleSA9J21zZy10bydcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U9e3Byb3BzLnNlbGVjdGVkTGFuZ3VhZ2V9XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0ge3Byb3BzLm1lc3NhZ2V9Lz5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J21zZy1leHAtbWV0YWluZm8tcm93Mic+XHJcbiAgICAgICAgICAgIHtyZW5kZXJNZXNzYWdlUmVjaXBpZW50TGlzdCgpIH1cclxuICAgICAgICAgICAge3JlbmRlckRpc3BsYXlJREFyZWEoKSB9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCByZXR1cm5zIHRoZSBkaXNwbGF5SWQgZm9yIHN5c3RlbSBtZXNzYWdlcyB3aXRoIHByZWZpeCA2XHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGdldERpc3BsYXlJZCgpIHtcclxuICAgICAgICAvLyBJZiBzZWxlY3RlZCBtZXNzYWdlIGlzIGEgc3lzdGVtIG1lc3NhZ2UgdGhlbiByZXR1cm5zIGRpc3BsYXlJZCB3aXRoIHByZWZpeCA2XHJcbiAgICAgICAgaWYgKHByb3BzLm1lc3NhZ2UuZXhhbUJvZHlNZXNzYWdlVHlwZUlkICE9IG51bGwgJiYgcHJvcHMubWVzc2FnZS5leGFtQm9keU1lc3NhZ2VUeXBlSWQgIT09IGVudW1zLlN5c3RlbU1lc3NhZ2UuTm9uZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJzYnICsgcHJvcHMubWVzc2FnZURldGFpbHMuZGlzcGxheUlkO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5tZXNzYWdlRGV0YWlscy5kaXNwbGF5SWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZURldGFpbHNTZW5kZXJJbmZvO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VkZXRhaWxzc2VuZGVyaW5mby50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFTQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFHQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 507:
/* no static exports found */
/* all exports used */
/*!************************************************!*\
  !*** ./src/components/message/messageinfo.tsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar RecipientListToggle = __webpack_require__(/*! ./recipientlisttoggle */ 509);\r\nvar messageTranslationHelper = __webpack_require__(/*! ../utility/message/messagetranslationhelper */ 459);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar constants = __webpack_require__(/*! ../utility/constants */ 241);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\n/**\r\n * Message info section contain message type, recipients list and remaining recipients count.\r\n * @param props\r\n */\r\nvar MessageInfo = /** @class */ (function (_super) {\r\n    __extends(MessageInfo, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageInfo(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        // holds the remaining RecipientCount\r\n        _this.remainingRecipientCount = 0;\r\n        /**\r\n         * Handle toggle event of recipient list.\r\n         *\r\n         */\r\n        _this.onRecipientListToggle = function () {\r\n            _this.setState({\r\n                isExpanded: !_this.state.isExpanded,\r\n                isClassUpdated: _this.state.isClassUpdated\r\n            });\r\n        };\r\n        /**\r\n         * Calculate recipients count.\r\n         */\r\n        _this.calculateRecipientCount = function (event) {\r\n            if (event && (event.type === 'transitionend' || event.type === 'webkitTransitionEnd') && event.propertyName !== 'width') {\r\n                return;\r\n            }\r\n            if (_this.props.message &&\r\n                _this.props.message.messageFolderType === enums.MessageFolderType.Sent) {\r\n                var lastAddressItem = htmlUtilities.getElementsByClassName('first-row-last')[0];\r\n                if (lastAddressItem) {\r\n                    if (lastAddressItem.classList.contains('first-row-last')) {\r\n                        lastAddressItem.classList.remove('first-row-last');\r\n                    }\r\n                }\r\n                // If message send for an entire team then set remaining recipient count as 0.\r\n                if (_this.props.message.toTeam) {\r\n                    _this.remainingRecipientCount = 0;\r\n                    _this.setState({\r\n                        isExpanded: false,\r\n                        isClassUpdated: !_this.state.isClassUpdated\r\n                    });\r\n                }\r\n                else {\r\n                    var remainingRecipientCountUpdated = 0;\r\n                    var wrapperWidthParent = (htmlUtilities.getElementsByClassName('msg-to')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to')[0].clientWidth : 0;\r\n                    var wrapperWidthTo = (htmlUtilities.getElementsByClassName('msg-to-label dim-text')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to-label dim-text')[0].clientWidth : 0;\r\n                    var wrapperWidthMore = (htmlUtilities.getElementsByClassName('msg-to-expand-toggler')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to-expand-toggler')[0].clientWidth : constants.RECIPIENT_MORE_LINK;\r\n                    var totalWidth = wrapperWidthParent - (wrapperWidthTo + wrapperWidthMore);\r\n                    _this.recipientListSpan = htmlUtilities.getElementsByClassName('msg-address');\r\n                    var spanwidth = 0;\r\n                    remainingRecipientCountUpdated = _this.remainingRecipientCount;\r\n                    for (var i = 0; i < _this.recipientListSpan.length; i++) {\r\n                        spanwidth += _this.recipientListSpan[i].clientWidth;\r\n                        if (i === _this.recipientListSpan.length - 1) {\r\n                            totalWidth = totalWidth + wrapperWidthMore;\r\n                        }\r\n                        if (spanwidth < totalWidth) {\r\n                            _this.remainingRecipientCount = 0;\r\n                        }\r\n                        else {\r\n                            if (i !== 0) {\r\n                                _this.recipientListSpan[i - 1].className += ' first-row-last';\r\n                            }\r\n                            if (_this.recipientListSpan.length === 1 && spanwidth === totalWidth) {\r\n                                _this.remainingRecipientCount = 0;\r\n                            }\r\n                            else {\r\n                                _this.remainingRecipientCount = _this.recipientListSpan.length - i;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (remainingRecipientCountUpdated !== _this.remainingRecipientCount) {\r\n                        _this.setState({\r\n                            isExpanded: _this.state.isExpanded,\r\n                            isClassUpdated: !_this.state.isClassUpdated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        _this.state = {\r\n            isExpanded: false,\r\n            isClassUpdated: false\r\n        };\r\n        _this.examiners = new Array();\r\n        _this.onRecipientListToggle = _this.onRecipientListToggle.bind(_this);\r\n        _this.calculateRecipientCount = _this.calculateRecipientCount.bind(_this);\r\n        _this.appendExaminerWithSemiColon();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    MessageInfo.prototype.render = function () {\r\n        var toRender;\r\n        if (this.props.message.messageFolderType === enums.MessageFolderType.Inbox) {\r\n            toRender = (React.createElement(\"div\", { className: 'msg-sender' },\r\n                React.createElement(\"div\", { className: 'dim-text msg-from-label', id: 'msg_from_label' }, localeStore.instance.TranslateText('messaging.message-lists.message-detail.' +\r\n                    enums.getEnumString(enums.MessageFolderType, this.props.message.messageFolderType).toLowerCase())),\r\n                React.createElement(\"div\", { className: 'msg-from-address', id: 'msg_from_address' }, messageTranslationHelper.getExaminerName(this.props.message))));\r\n        }\r\n        else {\r\n            this.appendExaminerWithSemiColon();\r\n            toRender = (React.createElement(\"div\", { className: classNames('msg-to', this.state.isExpanded ? 'expanded' : '') },\r\n                React.createElement(\"div\", { className: 'msg-to-label dim-text' }, localeStore.instance.TranslateText('messaging.message-lists.message-detail.' +\r\n                    enums.getEnumString(enums.MessageFolderType, this.props.message.messageFolderType).toLowerCase())),\r\n                React.createElement(\"div\", { className: 'msg-to-address', id: this.props.id }, !this.props.message.toTeam ?\r\n                    this.examiners.map(function (item) {\r\n                        return React.createElement(\"span\", { className: 'msg-address' }, item);\r\n                    }) :\r\n                    React.createElement(\"span\", { className: 'msg-address', id: 'msg-address-entire-team' }, localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.entire-team'))),\r\n                React.createElement(RecipientListToggle, { id: 'msg-to-expand-toggler', key: 'msg-to-expand-toggler', selectedLanguage: this.props.selectedLanguage, remainingRecipientCount: this.remainingRecipientCount, onRecipientListToggleClick: this.onRecipientListToggle })));\r\n        }\r\n        return (toRender);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    MessageInfo.prototype.componentDidMount = function () {\r\n        window.addEventListener('resize', this.calculateRecipientCount);\r\n        var messagePanel = document.getElementById('messaging-panel');\r\n        if (messagePanel) {\r\n            messagePanel.addEventListener('transitionend', this.calculateRecipientCount);\r\n            messagePanel.addEventListener('webkitTransitionEnd', this.calculateRecipientCount);\r\n        }\r\n        this.calculateRecipientCount();\r\n        messageStore.instance.addListener(messageStore.MessageStore.CALCULATE_RECIPIENT_COUNT_EVENT, this.calculateRecipientCount);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be un mounted\r\n     */\r\n    MessageInfo.prototype.componentWillUnMount = function () {\r\n        window.removeEventListener('resize', this.calculateRecipientCount);\r\n        var messagePanel = document.getElementById('messaging-panel');\r\n        if (messagePanel) {\r\n            messagePanel.removeEventListener('transitionend', this.calculateRecipientCount);\r\n            messagePanel.removeEventListener('webkitTransitionEnd', this.calculateRecipientCount);\r\n        }\r\n        messageStore.instance.removeListener(messageStore.MessageStore.CALCULATE_RECIPIENT_COUNT_EVENT, this.calculateRecipientCount);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component receives props\r\n     */\r\n    MessageInfo.prototype.componentWillReceiveProps = function (nextProps) {\r\n        if (this.props.message !== nextProps.message) {\r\n            this.remainingRecipientCount = 0;\r\n        }\r\n    };\r\n    /**\r\n     * append examiners with semicolon\r\n     */\r\n    MessageInfo.prototype.appendExaminerWithSemiColon = function (props) {\r\n        var _this = this;\r\n        var index = 0;\r\n        this.examiners = new Array();\r\n        var _props = props ? props : this.props;\r\n        if (_props.message && _props.message.toExaminerDetails != null) {\r\n            _props.message.toExaminerDetails.map(function (item) {\r\n                _this.examiners.push(item.fullName + ';');\r\n            });\r\n            index = this.examiners.length - 1;\r\n            // replacing semicolon for last item\r\n            if (index >= 0) {\r\n                this.examiners[index] = this.examiners[index].toString().replace(';', '');\r\n            }\r\n        }\r\n        else {\r\n            this.examiners.push(_props.message.examinerDetails.fullName);\r\n        }\r\n    };\r\n    return MessageInfo;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 508:
/* no static exports found */
/* all exports used */
/*!***************************************************************!*\
  !*** ./src/components/message/messageprioritydescription.tsx ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localestore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * Priority Description for details\r\n * @param props\r\n */\r\nvar messagePriorityDescription = function (props) {\r\n    var messagePriorityName = props.messagePriorityName.toLowerCase();\r\n    if (messagePriorityName !== enums.getEnumString(enums.MessagePriority, enums.MessagePriority.Standard).toLocaleLowerCase()) {\r\n        return (React.createElement(\"div\", { className: 'msg-alert grey msg-important', id: props.id }, localestore.instance.TranslateText('messaging.message-lists.message-detail.high-' + messagePriorityName + '-banner')));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = messagePriorityDescription;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkZXNjcmlwdGlvbi50c3g/Zjc2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBsb2NhbGVzdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlUHJpb3JpdHlEZXNjcmlwdGlvblByb3BzIGV4dGVuZHMgUHJvcHNCYXNlLCBMb2NhbGVTZWxlY3Rpb25CYXNlIHtcclxuICAgIG1lc3NhZ2VQcmlvcml0eU5hbWU6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIFByaW9yaXR5IERlc2NyaXB0aW9uIGZvciBkZXRhaWxzXHJcbiAqIEBwYXJhbSBwcm9wc1xyXG4gKi9cclxuY29uc3QgbWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb246IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxNZXNzYWdlUHJpb3JpdHlEZXNjcmlwdGlvblByb3BzPiA9IChwcm9wczogTWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb25Qcm9wcykgPT4ge1xyXG4gICAgbGV0IG1lc3NhZ2VQcmlvcml0eU5hbWUgPSBwcm9wcy5tZXNzYWdlUHJpb3JpdHlOYW1lLnRvTG93ZXJDYXNlKCk7XHJcbiAgICBpZiAobWVzc2FnZVByaW9yaXR5TmFtZSAhPT0gZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5NZXNzYWdlUHJpb3JpdHksIGVudW1zLk1lc3NhZ2VQcmlvcml0eS5TdGFuZGFyZCkudG9Mb2NhbGVMb3dlckNhc2UoKSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtc2ctYWxlcnQgZ3JleSBtc2ctaW1wb3J0YW50JyBpZCA9IHtwcm9wcy5pZH0+XHJcbiAgICAgICAgICAgICAgICB7bG9jYWxlc3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMubWVzc2FnZS1kZXRhaWwuaGlnaC0nICsgbWVzc2FnZVByaW9yaXR5TmFtZSArICctYmFubmVyJyl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb247XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2Vwcmlvcml0eWRlc2NyaXB0aW9uLnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQU1BOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 509:
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./src/components/message/recipientlisttoggle.tsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * RecipientListToggle contain the collpase or expan view with remaining count.\r\n * @param props\r\n */\r\nvar recipientListToggle = function (props) {\r\n    if (props.remainingRecipientCount > 0) {\r\n        return (React.createElement(\"a\", { className: 'msg-to-expand-toggler', id: props.id, onClick: function () { props.onRecipientListToggleClick(); } },\r\n            React.createElement(\"span\", { className: 'sender-count dim-text' },\r\n                \"+\",\r\n                props.remainingRecipientCount,\r\n                \" \",\r\n                localeStore.instance.TranslateText('messaging.message-lists.message-detail.more-recipients')),\r\n            React.createElement(\"span\", { className: 'expand-toggle-icon' },\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' }),\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' }))));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = recipientListToggle;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9yZWNpcGllbnRsaXN0dG9nZ2xlLnRzeD8wNzI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBUb2dnbGVQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICByZW1haW5pbmdSZWNpcGllbnRDb3VudDogbnVtYmVyO1xyXG4gICAgb25SZWNpcGllbnRMaXN0VG9nZ2xlQ2xpY2s6IEZ1bmN0aW9uO1xyXG59XHJcblxyXG4vKipcclxuICogUmVjaXBpZW50TGlzdFRvZ2dsZSBjb250YWluIHRoZSBjb2xscGFzZSBvciBleHBhbiB2aWV3IHdpdGggcmVtYWluaW5nIGNvdW50LlxyXG4gKiBAcGFyYW0gcHJvcHNcclxuICovXHJcbmNvbnN0IHJlY2lwaWVudExpc3RUb2dnbGU6IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxUb2dnbGVQcm9wcz4gPSAocHJvcHM6IFRvZ2dsZVByb3BzKSA9PiB7XHJcbiAgICBpZiAocHJvcHMucmVtYWluaW5nUmVjaXBpZW50Q291bnQgPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSdtc2ctdG8tZXhwYW5kLXRvZ2dsZXInIGlkPXtwcm9wcy5pZH0gb25DbGljaz17KCkgPT4geyBwcm9wcy5vblJlY2lwaWVudExpc3RUb2dnbGVDbGljaygpOyB9fT5cclxuICAgICAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdzZW5kZXItY291bnQgZGltLXRleHQnPlxyXG4gICAgICAgICAgICAgICAgICAgICt7cHJvcHMucmVtYWluaW5nUmVjaXBpZW50Q291bnR9IHtsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMubWVzc2FnZS1kZXRhaWwubW9yZS1yZWNpcGllbnRzJyl9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdleHBhbmQtdG9nZ2xlLWljb24nPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nc3ByaXRlLWljb24gbWVudS1hcnJvdy1pY29uJz48L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBtZW51LWFycm93LWljb24nPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gcmVjaXBpZW50TGlzdFRvZ2dsZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9yZWNpcGllbnRsaXN0dG9nZ2xlLnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFPQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 520:
/* no static exports found */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./src/components/utility/messagetranslationhandlerconstants.ts ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar MessageTranslationHandlerConstants;\r\n(function (MessageTranslationHandlerConstants) {\r\n    // Keyword for the targets dictionary\r\n    MessageTranslationHandlerConstants.TARGETS_DICTIONARY = 'Targets';\r\n    // Keyword for the remark targets dictionary\r\n    MessageTranslationHandlerConstants.REMARKTARGETS_DICTIONARY = 'RemarkTargets';\r\n    // Keyword for the Marker name\r\n    MessageTranslationHandlerConstants.MARKER = 'marker';\r\n    // Keyword for the old approval status\r\n    MessageTranslationHandlerConstants.OLD_STATUS = 'oldStatus';\r\n    // Keyword for the new approval status\r\n    MessageTranslationHandlerConstants.NEW_STATUS = 'newStatus';\r\n    // Keyword for the old grace period\r\n    MessageTranslationHandlerConstants.OLD_GRACE_PERIOD = 'OldGracePeriod';\r\n    // Keyword for the new grace period\r\n    MessageTranslationHandlerConstants.NEW_GRACE_PERIOD = 'NewGracePeriod';\r\n    // Keyword for the display id\r\n    MessageTranslationHandlerConstants.DISPLAY_ID = 'DisplayID';\r\n    // Keyword for the worklist type\r\n    MessageTranslationHandlerConstants.WORKLIST_TYPE = 'WorklistType';\r\n    // Keyword for the execption type\r\n    MessageTranslationHandlerConstants.EXCEPTION_TYPE = 'ExceptionType';\r\n    // Keyword for the senior examiner name\r\n    MessageTranslationHandlerConstants.SENIOR_EXAMINER_NAME = 'SeniorExaminerName';\r\n})(MessageTranslationHandlerConstants || (MessageTranslationHandlerConstants = {}));\r\nmodule.exports = MessageTranslationHandlerConstants;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9tZXNzYWdldHJhbnNsYXRpb25oYW5kbGVyY29uc3RhbnRzLnRzP2U3OWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIE1lc3NhZ2VUcmFuc2xhdGlvbkhhbmRsZXJDb25zdGFudHMge1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIHRhcmdldHMgZGljdGlvbmFyeVxyXG4gICAgZXhwb3J0IGNvbnN0IFRBUkdFVFNfRElDVElPTkFSWSA9ICdUYXJnZXRzJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSByZW1hcmsgdGFyZ2V0cyBkaWN0aW9uYXJ5XHJcbiAgICBleHBvcnQgY29uc3QgUkVNQVJLVEFSR0VUU19ESUNUSU9OQVJZID0gJ1JlbWFya1RhcmdldHMnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIE1hcmtlciBuYW1lXHJcbiAgICBleHBvcnQgY29uc3QgTUFSS0VSID0gJ21hcmtlcic7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgb2xkIGFwcHJvdmFsIHN0YXR1c1xyXG4gICAgZXhwb3J0IGNvbnN0IE9MRF9TVEFUVVMgPSAnb2xkU3RhdHVzJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSBuZXcgYXBwcm92YWwgc3RhdHVzXHJcbiAgICBleHBvcnQgY29uc3QgTkVXX1NUQVRVUyA9ICduZXdTdGF0dXMnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIG9sZCBncmFjZSBwZXJpb2RcclxuICAgIGV4cG9ydCBjb25zdCBPTERfR1JBQ0VfUEVSSU9EID0gJ09sZEdyYWNlUGVyaW9kJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSBuZXcgZ3JhY2UgcGVyaW9kXHJcbiAgICBleHBvcnQgY29uc3QgTkVXX0dSQUNFX1BFUklPRCA9ICdOZXdHcmFjZVBlcmlvZCc7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgZGlzcGxheSBpZFxyXG4gICAgZXhwb3J0IGNvbnN0IERJU1BMQVlfSUQgPSAnRGlzcGxheUlEJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSB3b3JrbGlzdCB0eXBlXHJcbiAgICBleHBvcnQgY29uc3QgV09SS0xJU1RfVFlQRSA9ICdXb3JrbGlzdFR5cGUnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIGV4ZWNwdGlvbiB0eXBlXHJcbiAgICBleHBvcnQgY29uc3QgRVhDRVBUSU9OX1RZUEUgPSAnRXhjZXB0aW9uVHlwZSc7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgc2VuaW9yIGV4YW1pbmVyIG5hbWVcclxuICAgIGV4cG9ydCBjb25zdCBTRU5JT1JfRVhBTUlORVJfTkFNRSA9ICdTZW5pb3JFeGFtaW5lck5hbWUnO1xyXG59XHJcbmV4cG9ydCA9IE1lc3NhZ2VUcmFuc2xhdGlvbkhhbmRsZXJDb25zdGFudHM7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL3V0aWxpdHkvbWVzc2FnZXRyYW5zbGF0aW9uaGFuZGxlcmNvbnN0YW50cy50cyJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 549:
/* no static exports found */
/* all exports used */
/*!*****************************************************!*\
  !*** ./src/components/message/messageleftpanel.tsx ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar MessagesForQig = __webpack_require__(/*! ./messagesforqig */ 1046);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar Immutable = __webpack_require__(/*! immutable */ 40);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar SearchPanel = __webpack_require__(/*! ../utility/search/searchpanel */ 468);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar messageLeftPanel = function (props) {\r\n    if ((props.messageGroupDetails === undefined || props.messageGroupDetails.messages === undefined || props.selectedMsg === undefined)\r\n        && (props.searchData.isSearching === undefined || props.selectedTab !== enums.MessageFolderType.Inbox)) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"div\", { className: 'column-left', id: 'msg-left-panel' },\r\n        React.createElement(\"div\", { className: 'tab-content-holder' },\r\n            React.createElement(\"div\", { className: 'tab-content msg-inbox active', id: 'msgTab1' },\r\n                React.createElement(SearchPanel, { id: 'search-panel', key: 'search-panel-key', selectedLanguage: props.selectedLanguage, searchData: props.searchData, onSearch: props.onSearch, isSearchResultTextVisible: true, searchResultsFor: localeStore.instance.TranslateText('messaging.message-lists.search-by-sender.search-result-for'), searchPlaceHolder: localeStore.instance.TranslateText('messaging.message-lists.search-by-sender.search-by-sender-placeholder'), searchTooltip: localeStore.instance.TranslateText('messaging.message-lists.search-by-sender.search-by-sender-tooltip'), searchCancel: localeStore.instance.TranslateText('messaging.message-lists.search-by-sender.cancel-search-tooltip'), searchClassName: 'col-6-of-12 search-box-panel', searchWrapClass: 'msg-search-wrap' }),\r\n                getMessageList()))));\r\n    /**\r\n     * Returns the message list section\r\n     */\r\n    function getMessageList() {\r\n        if (props.messageGroupDetails === undefined || props.messageGroupDetails.messages === undefined ||\r\n            props.selectedMsg === undefined) {\r\n            return (React.createElement(\"div\", { className: 'msg-listing-wrap', id: 'msg-list-container' },\r\n                React.createElement(\"ul\", { className: 'msg-listing' })));\r\n        }\r\n        var messageList = Immutable.List();\r\n        var mergedMessages;\r\n        var selectedMsgId = props.selectedMsg.examinerMessageId;\r\n        var groupedMessageObject = props.messageGroupDetails.MessageGroupObjects;\r\n        // index variable for id\r\n        var groupIndex = 0;\r\n        var toRender = groupedMessageObject.map(function (messageObject) {\r\n            groupIndex++;\r\n            return (!qigStore.instance.isQIGHidden(messageObject.messages[0].markSchemeGroupId) || props.isMessageClicked ? React.createElement(MessagesForQig, { qigId: messageObject.qigId, isOpen: messageObject.isOpen, onExpandOrCollapse: props.onExpandOrCollapse, qigName: messageObject.textToDisplay, messages: Immutable.List(messageObject.messages), selectedMsgId: selectedMsgId, unReadMessages: messageObject.unReadMessages, id: 'msg-grp-' + groupIndex, key: 'msg-grp-' + groupIndex, selectedLanguage: props.selectedLanguage, onSelectedMessageChanged: props.onSelectedMessageChanged }) : null);\r\n        });\r\n        return (React.createElement(\"div\", { className: 'msg-listing-wrap', id: 'msg-list-container' },\r\n            React.createElement(\"ul\", { className: 'msg-listing' }, toRender)));\r\n    }\r\n};\r\nmodule.exports = messageLeftPanel;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlbGVmdHBhbmVsLnRzeD80MGI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBNZXNzYWdlc0ZvclFpZyA9IHJlcXVpcmUoJy4vbWVzc2FnZXNmb3JxaWcnKTtcclxuaW1wb3J0IG1lc3NhZ2VIZWxwZXIgPSByZXF1aXJlKCcuLi91dGlsaXR5L21lc3NhZ2UvbWVzc2FnZWhlbHBlcicpO1xyXG5sZXQgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcclxuaW1wb3J0IEltbXV0YWJsZSA9IHJlcXVpcmUoJ2ltbXV0YWJsZScpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBTZWFyY2hQYW5lbCA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvc2VhcmNoL3NlYXJjaHBhbmVsJyk7XHJcbmltcG9ydCBtZXNzYWdpbmdBY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9tZXNzYWdpbmcvbWVzc2FnaW5nYWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgbG9jYWxlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbG9jYWxlL2xvY2FsZXN0b3JlJyk7XHJcbmltcG9ydCBxaWdTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9xaWdzZWxlY3Rvci9xaWdzdG9yZScpO1xyXG5cclxuLyoqXHJcbiAqIFByb3BzIGZvciB0aGUgTGVmdCBQYW5lbFxyXG4gKi9cclxuaW50ZXJmYWNlIE1lc3NhZ2VMZWZ0UGFuZWxQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBzZWxlY3RlZFRhYjogZW51bXMuTWVzc2FnZUZvbGRlclR5cGU7XHJcbiAgICBzZWxlY3RlZE1zZzogTWVzc2FnZTtcclxuICAgIG9uU2VsZWN0ZWRNZXNzYWdlQ2hhbmdlZDogRnVuY3Rpb247XHJcbiAgICBtZXNzYWdlR3JvdXBEZXRhaWxzOiBNZXNzYWdlR3JvdXBEZXRhaWxzO1xyXG4gICAgc2VhcmNoRGF0YTogU2VhcmNoRGF0YTtcclxuICAgIG9uU2VhcmNoOiBGdW5jdGlvbjtcclxuICAgIG9uRXhwYW5kT3JDb2xsYXBzZTogRnVuY3Rpb247XHJcbiAgICBpc01lc3NhZ2VDbGlja2VkPzogYm9vbGVhbjtcclxufVxyXG5cclxuY29uc3QgbWVzc2FnZUxlZnRQYW5lbCA9IChwcm9wcyA6IE1lc3NhZ2VMZWZ0UGFuZWxQcm9wcykgPT4ge1xyXG4gICAgaWYgKChwcm9wcy5tZXNzYWdlR3JvdXBEZXRhaWxzID09PSB1bmRlZmluZWQgfHwgcHJvcHMubWVzc2FnZUdyb3VwRGV0YWlscy5tZXNzYWdlcyA9PT0gdW5kZWZpbmVkIHx8IHByb3BzLnNlbGVjdGVkTXNnID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICYmIChwcm9wcy5zZWFyY2hEYXRhLmlzU2VhcmNoaW5nID09PSB1bmRlZmluZWQgfHwgcHJvcHMuc2VsZWN0ZWRUYWIgIT09IGVudW1zLk1lc3NhZ2VGb2xkZXJUeXBlLkluYm94KSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2x1bW4tbGVmdCcgaWQ9J21zZy1sZWZ0LXBhbmVsJz5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RhYi1jb250ZW50LWhvbGRlcic+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGFiLWNvbnRlbnQgbXNnLWluYm94IGFjdGl2ZScgaWQ9J21zZ1RhYjEnPlxyXG4gICAgICAgICAgICAgICAgICAgIDxTZWFyY2hQYW5lbFxyXG5cdFx0XHRcdFx0XHRpZD0nc2VhcmNoLXBhbmVsJ1xyXG5cdFx0XHRcdFx0XHRrZXk9J3NlYXJjaC1wYW5lbC1rZXknXHJcblx0XHRcdFx0XHRcdHNlbGVjdGVkTGFuZ3VhZ2U9e3Byb3BzLnNlbGVjdGVkTGFuZ3VhZ2V9XHJcblx0XHRcdFx0XHRcdHNlYXJjaERhdGE9e3Byb3BzLnNlYXJjaERhdGF9XHJcblx0XHRcdFx0XHRcdG9uU2VhcmNoPXtwcm9wcy5vblNlYXJjaH1cclxuXHRcdFx0XHRcdFx0aXNTZWFyY2hSZXN1bHRUZXh0VmlzaWJsZT17dHJ1ZX1cclxuXHRcdFx0XHRcdFx0c2VhcmNoUmVzdWx0c0Zvcj17bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMuc2VhcmNoLWJ5LXNlbmRlci5zZWFyY2gtcmVzdWx0LWZvcicpfVxyXG5cdFx0XHRcdFx0XHRzZWFyY2hQbGFjZUhvbGRlcj17bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMuc2VhcmNoLWJ5LXNlbmRlci5zZWFyY2gtYnktc2VuZGVyLXBsYWNlaG9sZGVyJyl9XHJcblx0XHRcdFx0XHRcdHNlYXJjaFRvb2x0aXA9e2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ21lc3NhZ2luZy5tZXNzYWdlLWxpc3RzLnNlYXJjaC1ieS1zZW5kZXIuc2VhcmNoLWJ5LXNlbmRlci10b29sdGlwJyl9XHJcblx0XHRcdFx0XHRcdHNlYXJjaENhbmNlbD17bG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMuc2VhcmNoLWJ5LXNlbmRlci5jYW5jZWwtc2VhcmNoLXRvb2x0aXAnKX1cclxuXHRcdFx0XHRcdFx0c2VhcmNoQ2xhc3NOYW1lPXsnY29sLTYtb2YtMTIgc2VhcmNoLWJveC1wYW5lbCd9XHJcblx0XHRcdFx0XHRcdHNlYXJjaFdyYXBDbGFzcz17J21zZy1zZWFyY2gtd3JhcCd9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgeyBnZXRNZXNzYWdlTGlzdCgpIH1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBtZXNzYWdlIGxpc3Qgc2VjdGlvblxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBnZXRNZXNzYWdlTGlzdCgpIHtcclxuXHJcbiAgICAgICAgaWYgKHByb3BzLm1lc3NhZ2VHcm91cERldGFpbHMgPT09IHVuZGVmaW5lZCB8fCBwcm9wcy5tZXNzYWdlR3JvdXBEZXRhaWxzLm1lc3NhZ2VzID09PSB1bmRlZmluZWQgfHxcclxuICAgICAgICAgICAgcHJvcHMuc2VsZWN0ZWRNc2cgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21zZy1saXN0aW5nLXdyYXAnIGlkPSdtc2ctbGlzdC1jb250YWluZXInPlxyXG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9J21zZy1saXN0aW5nJz48L3VsPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgbWVzc2FnZUxpc3QgOiBJbW11dGFibGUuTGlzdCA8IE1lc3NhZ2UgPiA9IEltbXV0YWJsZS5MaXN0IDwgTWVzc2FnZSA+ICgpO1xyXG4gICAgICAgIGxldCBtZXJnZWRNZXNzYWdlcztcclxuICAgICAgICBsZXQgc2VsZWN0ZWRNc2dJZCA6IG51bWJlciA9IHByb3BzLnNlbGVjdGVkTXNnLmV4YW1pbmVyTWVzc2FnZUlkO1xyXG4gICAgICAgIGxldCBncm91cGVkTWVzc2FnZU9iamVjdCA6IE1lc3NhZ2VHcm91cERhdGFbXSA9IHByb3BzLm1lc3NhZ2VHcm91cERldGFpbHMuTWVzc2FnZUdyb3VwT2JqZWN0cztcclxuXHJcbiAgICAgICAgLy8gaW5kZXggdmFyaWFibGUgZm9yIGlkXHJcbiAgICAgICAgbGV0IGdyb3VwSW5kZXggOiBudW1iZXIgPSAwO1xyXG5cclxuICAgICAgICBsZXQgdG9SZW5kZXIgPSBncm91cGVkTWVzc2FnZU9iamVjdC5tYXAoKG1lc3NhZ2VPYmplY3QgOiBNZXNzYWdlR3JvdXBEYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIGdyb3VwSW5kZXgrKztcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgICFxaWdTdG9yZS5pbnN0YW5jZS5pc1FJR0hpZGRlbihtZXNzYWdlT2JqZWN0Lm1lc3NhZ2VzWzBdLm1hcmtTY2hlbWVHcm91cElkKSB8fCBwcm9wcy5pc01lc3NhZ2VDbGlja2VkID8gPE1lc3NhZ2VzRm9yUWlnXHJcbiAgICAgICAgICAgICAgICAgICAgcWlnSWQgPSB7bWVzc2FnZU9iamVjdC5xaWdJZH1cclxuICAgICAgICAgICAgICAgICAgICBpc09wZW49IHttZXNzYWdlT2JqZWN0LmlzT3Blbn1cclxuICAgICAgICAgICAgICAgICAgICBvbkV4cGFuZE9yQ29sbGFwc2UgPSB7cHJvcHMub25FeHBhbmRPckNvbGxhcHNlfVxyXG4gICAgICAgICAgICAgICAgICAgIHFpZ05hbWU9e21lc3NhZ2VPYmplY3QudGV4dFRvRGlzcGxheX1cclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlcz17SW1tdXRhYmxlLkxpc3QobWVzc2FnZU9iamVjdC5tZXNzYWdlcyl9XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRNc2dJZD17c2VsZWN0ZWRNc2dJZH1cclxuICAgICAgICAgICAgICAgICAgICB1blJlYWRNZXNzYWdlcz17bWVzc2FnZU9iamVjdC51blJlYWRNZXNzYWdlc31cclxuICAgICAgICAgICAgICAgICAgICBpZD17J21zZy1ncnAtJyArIGdyb3VwSW5kZXh9XHJcbiAgICAgICAgICAgICAgICAgICAga2V5PXsnbXNnLWdycC0nICsgZ3JvdXBJbmRleH1cclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZExhbmd1YWdlPXtwcm9wcy5zZWxlY3RlZExhbmd1YWdlfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0ZWRNZXNzYWdlQ2hhbmdlZD17cHJvcHMub25TZWxlY3RlZE1lc3NhZ2VDaGFuZ2VkfT48L01lc3NhZ2VzRm9yUWlnID4gOiBudWxsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtc2ctbGlzdGluZy13cmFwJyBpZD0nbXNnLWxpc3QtY29udGFpbmVyJz5cclxuICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9J21zZy1saXN0aW5nJz5cclxuICAgICAgICAgICAgICAgICAgICB7dG9SZW5kZXJ9XHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG5cclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCA9IG1lc3NhZ2VMZWZ0UGFuZWw7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZWxlZnRwYW5lbC50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBZ0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQWFBO0FBTUE7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFjQTtBQUVBO0FBRUE7QUFNQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 550:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/message/messagetabitem.tsx ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// A '.tsx' file enables JSX support in the TypeScript compiler,\r\n// for more information see the following page on the TypeScript wiki:\r\n// https://github.com/Microsoft/TypeScript/wiki/JSX\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar NotificationCount = __webpack_require__(/*! ./notificationcount */ 465);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar messageTabItem = function (props) {\r\n    var folderType = enums.getEnumString(enums.MessageFolderType, props.messageFolderType).toLowerCase();\r\n    /**\r\n     * Handles the change event of the option button.\r\n     * @param event\r\n     */\r\n    var handleTabClick = function (event) {\r\n        props.onTabSelected(props.messageFolderType);\r\n    };\r\n    return (React.createElement(\"li\", { role: 'tab', \"aria-selected\": props.isSelected, id: folderType + '-msg-tab', className: classNames(folderType + '-msg-tab', { 'active': props.isSelected }) },\r\n        React.createElement(\"a\", { id: folderType + '-tab', href: 'javascript: void(0);', \"data-tab-nav\": 'msgTab1', \"aria-controls\": 'msgTab1', onClick: handleTabClick },\r\n            React.createElement(\"span\", { id: folderType + '-text' }, localeStore.instance.TranslateText('messaging.message-lists.top-panel.' + folderType + '-tab')),\r\n            React.createElement(NotificationCount, { unReadMessageCount: props.unReadMessageCount, id: folderType + '-tab', key: folderType + '-tab' }))));\r\n};\r\nmodule.exports = messageTabItem;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdldGFiaXRlbS50c3g/MTE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBICcudHN4JyBmaWxlIGVuYWJsZXMgSlNYIHN1cHBvcnQgaW4gdGhlIFR5cGVTY3JpcHQgY29tcGlsZXIsXHJcbi8vIGZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSB0aGUgZm9sbG93aW5nIHBhZ2Ugb24gdGhlIFR5cGVTY3JpcHQgd2lraTpcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0L3dpa2kvSlNYXHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbi8qIHRzbGludDplbmFibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXHJcbmltcG9ydCBwdXJlUmVuZGVyQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vYmFzZS9wdXJlcmVuZGVyY29tcG9uZW50Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IE5vdGlmaWNhdGlvbkNvdW50ID0gcmVxdWlyZSgnLi9ub3RpZmljYXRpb25jb3VudCcpO1xyXG5sZXQgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5cclxuaW50ZXJmYWNlIFRhYlByb3BzIHtcclxuICAgIHVuUmVhZE1lc3NhZ2VDb3VudDogbnVtYmVyO1xyXG4gICAgb25UYWJTZWxlY3RlZDogRnVuY3Rpb247XHJcbiAgICBpc1NlbGVjdGVkOiBib29sZWFuO1xyXG4gICAgbWVzc2FnZUZvbGRlclR5cGU6IGVudW1zLk1lc3NhZ2VGb2xkZXJUeXBlO1xyXG59XHJcblxyXG5jb25zdCBtZXNzYWdlVGFiSXRlbSA9IChwcm9wczogVGFiUHJvcHMpID0+IHtcclxuICAgIGxldCBmb2xkZXJUeXBlID0gZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5NZXNzYWdlRm9sZGVyVHlwZSwgcHJvcHMubWVzc2FnZUZvbGRlclR5cGUpLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBjaGFuZ2UgZXZlbnQgb2YgdGhlIG9wdGlvbiBidXR0b24uXHJcbiAgICAgKiBAcGFyYW0gZXZlbnRcclxuICAgICAqL1xyXG4gICAgY29uc3QgaGFuZGxlVGFiQ2xpY2sgPSAoZXZlbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHByb3BzLm9uVGFiU2VsZWN0ZWQocHJvcHMubWVzc2FnZUZvbGRlclR5cGUpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxsaSByb2xlPSd0YWInIGFyaWEtc2VsZWN0ZWQ9e3Byb3BzLmlzU2VsZWN0ZWR9XHJcbiAgICAgICAgICAgIGlkPXtmb2xkZXJUeXBlICsgJy1tc2ctdGFiJ31cclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKGZvbGRlclR5cGUgKyAnLW1zZy10YWInLCB7ICdhY3RpdmUnOiBwcm9wcy5pc1NlbGVjdGVkIH0pIH0+XHJcbiAgICAgICAgICAgIDxhIGlkPXtmb2xkZXJUeXBlICsgJy10YWInfSBocmVmPSdqYXZhc2NyaXB0OiB2b2lkKDApOycgZGF0YS10YWItbmF2PSdtc2dUYWIxJyBhcmlhLWNvbnRyb2xzPSdtc2dUYWIxJ1xyXG4gICAgICAgICAgICAgICAgb25DbGljaz0ge2hhbmRsZVRhYkNsaWNrfT5cclxuICAgICAgICAgICAgICAgIDxzcGFuIGlkPXtmb2xkZXJUeXBlICsgJy10ZXh0J30+XHJcbiAgICAgICAgICAgICAgICAgICAge2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ21lc3NhZ2luZy5tZXNzYWdlLWxpc3RzLnRvcC1wYW5lbC4nICsgZm9sZGVyVHlwZSArICctdGFiJykgfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25Db3VudFxyXG4gICAgICAgICAgICAgICAgICAgIHVuUmVhZE1lc3NhZ2VDb3VudCA9IHtwcm9wcy51blJlYWRNZXNzYWdlQ291bnR9XHJcbiAgICAgICAgICAgICAgICAgICAgaWQgPSB7Zm9sZGVyVHlwZSArICctdGFiJ31cclxuICAgICAgICAgICAgICAgICAgICBrZXkgPSB7Zm9sZGVyVHlwZSArICctdGFiJ30+XHJcbiAgICAgICAgICAgICAgICA8L05vdGlmaWNhdGlvbkNvdW50PlxyXG4gICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgPC9saT5cclxuICAgICk7XHJcbn07XHJcbmV4cG9ydCA9IG1lc3NhZ2VUYWJJdGVtO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2V0YWJpdGVtLnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUVBO0FBRUE7QUFRQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

});