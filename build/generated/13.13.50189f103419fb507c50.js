webpackJsonp([13],{

/***/ 1006:
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./src/components/exception/dropdownexception.tsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar _this = this;\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/* tslint:disable:variable-name */\r\nvar DropDownException = function (props) {\r\n    var isOpen = props.isOpen ? 'open' : 'close';\r\n    var description = '';\r\n    var checkBox = React.createElement(\"input\", { type: 'radio', \"aria-label\": 'exception', value: 'selected', id: 'exceptionType' + props.id, key: props.id, name: 'exceptionType', checked: props.isChecked });\r\n    if (props.isDisabled) {\r\n        checkBox = React.createElement(\"input\", { type: 'radio', \"aria-label\": 'exception', value: 'selected', id: 'exceptionType' + props.id, key: props.id, name: 'exceptionType', disabled: true });\r\n    }\r\n    if (props.description === '') {\r\n        description = localeStore.instance.TranslateText('generic.exception-types.' + props.id + '.details');\r\n    }\r\n    else {\r\n        description = props.description;\r\n    }\r\n    return (React.createElement(\"div\", { className: 'exception-type-menu-item menu-item panel ' + isOpen, role: 'menuitem' },\r\n        checkBox,\r\n        React.createElement(\"label\", { onClick: props.onClick.bind(_this, props.id, props.isDisabled) },\r\n            React.createElement(\"span\", { className: 'radio-ui' }),\r\n            React.createElement(\"span\", { className: 'label-text' }, localeStore.instance.TranslateText('generic.exception-types.' + props.id + '.name'))),\r\n        React.createElement(\"span\", { className: 'sprite-icon info-round-icon panel-link', onClick: props.showExceptionDesc.bind(_this, props.id, isOpen) }),\r\n        React.createElement(\"div\", { className: 'menu-callout' }),\r\n        React.createElement(\"div\", { className: 'panel-content exception-type-info padding-all-15', \"aria-hidden\": 'true' },\r\n            React.createElement(\"div\", { className: 'info-item' }, description),\r\n            React.createElement(\"div\", { className: 'info-item' }, props.blockerDescription))));\r\n};\r\nmodule.exports = DropDownException;\r\n/* tslint:enable */ \r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9kcm9wZG93bmV4Y2VwdGlvbi50c3g/NDhmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxubGV0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcblxyXG5pbnRlcmZhY2UgRHJvcERvd25JdGVtcyB7XHJcbiAgICBpZDogbnVtYmVyO1xyXG4gICAga2V5OiBzdHJpbmc7XHJcbiAgICBpc09wZW46IGJvb2xlYW47XHJcbiAgICBpc0NoZWNrZWQ6IGJvb2xlYW47XHJcbiAgICBvbkNsaWNrOiBGdW5jdGlvbjtcclxuICAgIHNob3dFeGNlcHRpb25EZXNjOiBGdW5jdGlvbjtcclxuICAgIGlzRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG4gICAgYmxvY2tlckRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcbmNvbnN0IERyb3BEb3duRXhjZXB0aW9uOlxyXG4gICAgUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50PERyb3BEb3duSXRlbXM+ID1cclxuICAgIChwcm9wczogRHJvcERvd25JdGVtcykgPT4ge1xyXG4gICAgICAgIGxldCBpc09wZW46IHN0cmluZyA9IHByb3BzLmlzT3BlbiA/ICdvcGVuJyA6ICdjbG9zZSc7XHJcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uOiBzdHJpbmcgPSAnJztcclxuXHJcbiAgICAgICAgbGV0IGNoZWNrQm94OiBKU1guRWxlbWVudCA9IDwgaW5wdXQgdHlwZT0gJ3JhZGlvJyBhcmlhLWxhYmVsPSdleGNlcHRpb24nXHJcbiAgICAgICAgICAgIHZhbHVlPSAnc2VsZWN0ZWQnIGlkPSB7J2V4Y2VwdGlvblR5cGUnICsgcHJvcHMuaWR9IGtleT0ge3Byb3BzLmlkfVxyXG4gICAgICAgICAgICBuYW1lPSdleGNlcHRpb25UeXBlJyBjaGVja2VkPSB7cHJvcHMuaXNDaGVja2VkfS8+O1xyXG5cclxuICAgICAgICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xyXG4gICAgICAgICAgICBjaGVja0JveCA9IDwgaW5wdXQgdHlwZT0gJ3JhZGlvJyBhcmlhLWxhYmVsPSdleGNlcHRpb24nIHZhbHVlPSAnc2VsZWN0ZWQnIGlkPSB7J2V4Y2VwdGlvblR5cGUnICsgcHJvcHMuaWR9IGtleT0ge3Byb3BzLmlkfVxyXG4gICAgICAgICAgICAgICAgbmFtZT0gJ2V4Y2VwdGlvblR5cGUnIGRpc2FibGVkLz47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocHJvcHMuZGVzY3JpcHRpb24gPT09ICcnKSB7XHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gbG9jYWxlU3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnZ2VuZXJpYy5leGNlcHRpb24tdHlwZXMuJyArIHByb3BzLmlkICsgJy5kZXRhaWxzJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBwcm9wcy5kZXNjcmlwdGlvbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsnZXhjZXB0aW9uLXR5cGUtbWVudS1pdGVtIG1lbnUtaXRlbSBwYW5lbCAnICsgaXNPcGVufSByb2xlPSdtZW51aXRlbSc+XHJcbiAgICAgICAgICAgICAgICB7Y2hlY2tCb3h9XHJcbiAgICAgICAgICAgICAgICA8bGFiZWwgb25DbGljaz17cHJvcHMub25DbGljay5iaW5kKHRoaXMsIHByb3BzLmlkLCBwcm9wcy5pc0Rpc2FibGVkKSB9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ncmFkaW8tdWknPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2xhYmVsLXRleHQnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMuZXhjZXB0aW9uLXR5cGVzLicgKyBwcm9wcy5pZCArICcubmFtZScpIH1cclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBpbmZvLXJvdW5kLWljb24gcGFuZWwtbGluaydcclxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5zaG93RXhjZXB0aW9uRGVzYy5iaW5kKHRoaXMsIHByb3BzLmlkLCBpc09wZW4pIH0+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21lbnUtY2FsbG91dCc+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwtY29udGVudCBleGNlcHRpb24tdHlwZS1pbmZvIHBhZGRpbmctYWxsLTE1JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2luZm8taXRlbSc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZGVzY3JpcHRpb24gfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpbmZvLWl0ZW0nPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMuYmxvY2tlckRlc2NyaXB0aW9ufVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcblxyXG4gICAgfTtcclxuXHJcbmV4cG9ydCA9IERyb3BEb3duRXhjZXB0aW9uO1xyXG5cclxuLyogdHNsaW50OmVuYWJsZSAqL1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9leGNlcHRpb24vZHJvcGRvd25leGNlcHRpb24udHN4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFjQTtBQUVBO0FBR0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFPQTtBQUVBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 1007:
/* no static exports found */
/* all exports used */
/*!************************************************************!*\
  !*** ./src/components/exception/exceptionactionbutton.tsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\n/**\r\n * exception action button contain exception action such as Escalate, Resolve, Close.\r\n * @param props\r\n */\r\nvar exceptionActionButton = function (props) {\r\n    return (React.createElement(\"a\", { className: 'exception-close-link', id: props.id, onClick: function () { props.onActionException(); } },\r\n        React.createElement(\"span\", { className: props.className }),\r\n        React.createElement(\"span\", { className: 'exception-close-text dim-text' }, props.content)));\r\n};\r\nmodule.exports = exceptionActionButton;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9leGNlcHRpb25hY3Rpb25idXR0b24udHN4PzBjMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGxvY2FsZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL2xvY2FsZS9sb2NhbGVzdG9yZScpO1xyXG5cclxuaW50ZXJmYWNlIEV4Y2VwdGlvbkFjdGlvbkJ1dHRvblByb3BzIGV4dGVuZHMgTG9jYWxlU2VsZWN0aW9uQmFzZSwgUHJvcHNCYXNlIHtcclxuICAgIGNvbnRlbnQ/OiBzdHJpbmc7XHJcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XHJcbiAgICBvbkFjdGlvbkV4Y2VwdGlvbj86IEZ1bmN0aW9uO1xyXG59XHJcblxyXG4vKipcclxuICogZXhjZXB0aW9uIGFjdGlvbiBidXR0b24gY29udGFpbiBleGNlcHRpb24gYWN0aW9uIHN1Y2ggYXMgRXNjYWxhdGUsIFJlc29sdmUsIENsb3NlLlxyXG4gKiBAcGFyYW0gcHJvcHNcclxuICovXHJcbmNvbnN0IGV4Y2VwdGlvbkFjdGlvbkJ1dHRvbjogUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50PEV4Y2VwdGlvbkFjdGlvbkJ1dHRvblByb3BzPiA9IChwcm9wczogRXhjZXB0aW9uQWN0aW9uQnV0dG9uUHJvcHMpID0+IHtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxhIGNsYXNzTmFtZT0nZXhjZXB0aW9uLWNsb3NlLWxpbmsnXHJcbiAgICAgICAgICAgIGlkPXtwcm9wcy5pZH1cclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4geyBwcm9wcy5vbkFjdGlvbkV4Y2VwdGlvbigpOyB9fT5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtwcm9wcy5jbGFzc05hbWV9Pjwvc3Bhbj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdleGNlcHRpb24tY2xvc2UtdGV4dCBkaW0tdGV4dCc+XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMuY29udGVudH1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgIDwvYT5cclxuICAgICk7XHJcbn07XHJcblxyXG5leHBvcnQgPSBleGNlcHRpb25BY3Rpb25CdXR0b247XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9leGNlcHRpb25hY3Rpb25idXR0b24udHN4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFTQTs7O0FBR0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUtBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 1008:
/* no static exports found */
/* all exports used */
/*!***************************************************!*\
  !*** ./src/components/exception/exceptionbase.ts ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar exceptionStore = __webpack_require__(/*! ../../stores/exception/exceptionstore */ 277);\r\nvar exceptionActionCreator = __webpack_require__(/*! ../../actions/exception/exceptionactioncreator */ 428);\r\nvar markingActionCreator = __webpack_require__(/*! ../../actions/marking/markingactioncreator */ 246);\r\nvar keyDownHelper = __webpack_require__(/*! ../../utility/generic/keydownhelper */ 258);\r\nvar ExceptionBase = /** @class */ (function (_super) {\r\n    __extends(ExceptionBase, _super);\r\n    /**\r\n     * Constructor ExceptionBase\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function ExceptionBase(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.navigateTo = enums.SaveAndNavigate.none;\r\n        _this._questionName = '';\r\n        _this._questionId = undefined;\r\n        _this._markSchemeGroup = undefined;\r\n        /**\r\n         * Method fired when the exception panel is minimized.\r\n         */\r\n        _this.onMinimize = function () {\r\n            keyDownHelper.instance.Activate(enums.MarkEntryDeactivator.Exception);\r\n            exceptionActionCreator.exceptionWindowAction(enums.ExceptionViewAction.Minimize);\r\n        };\r\n        /**\r\n         * Method fired when the exception panel is maximized.\r\n         */\r\n        _this.onMaximize = function () {\r\n            keyDownHelper.instance.DeActivate(enums.MarkEntryDeactivator.Exception);\r\n            if (_this.props.isNewException && _this.refs.commentTextBox !== undefined) {\r\n                _this.refs.commentTextBox.focus();\r\n            }\r\n            exceptionActionCreator.exceptionWindowAction(enums.ExceptionViewAction.Maximize);\r\n        };\r\n        /**\r\n         * Reset message panel and close\r\n         */\r\n        _this.resetAndCloseExceptionPanel = function () {\r\n            _this.props.closeExceptionPanel();\r\n        };\r\n        /**\r\n         * Method fired when discard message is confirmed.\r\n         */\r\n        _this.onDiscardExceptionConfirmed = function () {\r\n            // Close the Message Panel.\r\n            _this.resetAndCloseExceptionPanel();\r\n            // on message close navigate away from response scenario\r\n            if (_this.navigateTo !== enums.SaveAndNavigate.none && _this.navigateTo !== enums.SaveAndNavigate.exceptionWithInResponse) {\r\n                // if navigate away from Resposne then close the response and move to worklist.\r\n                popupHelper.navigateAway(_this.navigateTo);\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n            }\r\n            if (exceptionStore.instance.navigateFrom === enums.SaveAndNavigate.submit) {\r\n                markingActionCreator.saveAndNavigate(enums.SaveAndNavigate.submit);\r\n            }\r\n        };\r\n        /**\r\n         * Method fired when discard exception is cancelled.\r\n         */\r\n        _this.onDiscardExceptionCancelled = function () {\r\n            if (_this.props.isExceptionPanelEdited) {\r\n                _this.props.validateException(null, false);\r\n            }\r\n            // reset navigate away from response\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n        };\r\n        return _this;\r\n    }\r\n    return ExceptionBase;\r\n}(pureRenderComponent));\r\nmodule.exports = ExceptionBase;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9leGNlcHRpb25iYXNlLnRzP2UwNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHB1cmVSZW5kZXJDb21wb25lbnQgPSByZXF1aXJlKCcuLi9iYXNlL3B1cmVyZW5kZXJjb21wb25lbnQnKTtcclxuaW1wb3J0IFJlYWN0RG9tID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XHJcbmltcG9ydCBlbnVtcyA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvZW51bXMnKTtcclxuaW1wb3J0IGxvY2FsZVN0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL2xvY2FsZS9sb2NhbGVzdG9yZScpO1xyXG5pbXBvcnQgcG9wdXBIZWxwZXIgPSByZXF1aXJlKCcuLi91dGlsaXR5L3BvcHVwL3BvcHVwaGVscGVyJyk7XHJcbmltcG9ydCBwb3BVcERpc3BsYXlBY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9wb3B1cGRpc3BsYXkvcG9wdXBkaXNwbGF5YWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgZXhjZXB0aW9uU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvZXhjZXB0aW9uL2V4Y2VwdGlvbnN0b3JlJyk7XHJcbmltcG9ydCBleGNlcHRpb25BY3Rpb25DcmVhdG9yID0gcmVxdWlyZSgnLi4vLi4vYWN0aW9ucy9leGNlcHRpb24vZXhjZXB0aW9uYWN0aW9uY3JlYXRvcicpO1xyXG5pbXBvcnQgbWFya2luZ0FjdGlvbkNyZWF0b3IgPSByZXF1aXJlKCcuLi8uLi9hY3Rpb25zL21hcmtpbmcvbWFya2luZ2FjdGlvbmNyZWF0b3InKTtcclxuaW1wb3J0IGtleURvd25IZWxwZXIgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2dlbmVyaWMva2V5ZG93bmhlbHBlcicpO1xyXG5cclxuY2xhc3MgRXhjZXB0aW9uQmFzZSBleHRlbmRzIHB1cmVSZW5kZXJDb21wb25lbnQ8YW55LCBhbnk+IHtcclxuICAgIC8qKiByZWZzICovXHJcbiAgICBwdWJsaWMgcmVmczoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IChFbGVtZW50KTtcclxuICAgICAgICBjb21tZW50VGV4dEJveDogKEhUTUxJbnB1dEVsZW1lbnQpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgbmF2aWdhdGVUbzogZW51bXMuU2F2ZUFuZE5hdmlnYXRlID0gZW51bXMuU2F2ZUFuZE5hdmlnYXRlLm5vbmU7XHJcbiAgICBwcm90ZWN0ZWQgX3F1ZXN0aW9uTmFtZTogc3RyaW5nID0gJyc7XHJcblx0cHJvdGVjdGVkIF9xdWVzdGlvbklkOiBudW1iZXIgPSB1bmRlZmluZWQ7XHJcblx0cHJvdGVjdGVkIF9tYXJrU2NoZW1lR3JvdXA6IG51bWJlciA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yIEV4Y2VwdGlvbkJhc2VcclxuICAgICAqIEBwYXJhbSBwcm9wc1xyXG4gICAgICogQHBhcmFtIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBhbnksIHN0YXRlOiBhbnkpIHtcclxuICAgICAgICBzdXBlcihwcm9wcywgc3RhdGUpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgZmlyZWQgd2hlbiB0aGUgZXhjZXB0aW9uIHBhbmVsIGlzIG1pbmltaXplZC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIG9uTWluaW1pemUgPSAoKSA9PiB7XHJcbiAgICAgICAga2V5RG93bkhlbHBlci5pbnN0YW5jZS5BY3RpdmF0ZShlbnVtcy5NYXJrRW50cnlEZWFjdGl2YXRvci5FeGNlcHRpb24pO1xyXG4gICAgICAgIGV4Y2VwdGlvbkFjdGlvbkNyZWF0b3IuZXhjZXB0aW9uV2luZG93QWN0aW9uKGVudW1zLkV4Y2VwdGlvblZpZXdBY3Rpb24uTWluaW1pemUpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIE1ldGhvZCBmaXJlZCB3aGVuIHRoZSBleGNlcHRpb24gcGFuZWwgaXMgbWF4aW1pemVkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgb25NYXhpbWl6ZSA9ICgpID0+IHtcclxuICAgICAgICBrZXlEb3duSGVscGVyLmluc3RhbmNlLkRlQWN0aXZhdGUoZW51bXMuTWFya0VudHJ5RGVhY3RpdmF0b3IuRXhjZXB0aW9uKTtcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5pc05ld0V4Y2VwdGlvbiAmJiB0aGlzLnJlZnMuY29tbWVudFRleHRCb3ggIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlZnMuY29tbWVudFRleHRCb3guZm9jdXMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZXhjZXB0aW9uQWN0aW9uQ3JlYXRvci5leGNlcHRpb25XaW5kb3dBY3Rpb24oZW51bXMuRXhjZXB0aW9uVmlld0FjdGlvbi5NYXhpbWl6ZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVzZXQgbWVzc2FnZSBwYW5lbCBhbmQgY2xvc2VcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHJlc2V0QW5kQ2xvc2VFeGNlcHRpb25QYW5lbCA9ICgpOiB2b2lkID0+IHtcclxuICAgICAgICB0aGlzLnByb3BzLmNsb3NlRXhjZXB0aW9uUGFuZWwoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgZmlyZWQgd2hlbiBkaXNjYXJkIG1lc3NhZ2UgaXMgY29uZmlybWVkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgb25EaXNjYXJkRXhjZXB0aW9uQ29uZmlybWVkID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIENsb3NlIHRoZSBNZXNzYWdlIFBhbmVsLlxyXG4gICAgICAgIHRoaXMucmVzZXRBbmRDbG9zZUV4Y2VwdGlvblBhbmVsKCk7XHJcbiAgICAgICAgLy8gb24gbWVzc2FnZSBjbG9zZSBuYXZpZ2F0ZSBhd2F5IGZyb20gcmVzcG9uc2Ugc2NlbmFyaW9cclxuICAgICAgICBpZiAodGhpcy5uYXZpZ2F0ZVRvICE9PSBlbnVtcy5TYXZlQW5kTmF2aWdhdGUubm9uZSAmJiB0aGlzLm5hdmlnYXRlVG8gIT09IGVudW1zLlNhdmVBbmROYXZpZ2F0ZS5leGNlcHRpb25XaXRoSW5SZXNwb25zZSkge1xyXG4gICAgICAgICAgICAvLyBpZiBuYXZpZ2F0ZSBhd2F5IGZyb20gUmVzcG9zbmUgdGhlbiBjbG9zZSB0aGUgcmVzcG9uc2UgYW5kIG1vdmUgdG8gd29ya2xpc3QuXHJcbiAgICAgICAgICAgIHBvcHVwSGVscGVyLm5hdmlnYXRlQXdheSh0aGlzLm5hdmlnYXRlVG8pO1xyXG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRlVG8gPSBlbnVtcy5TYXZlQW5kTmF2aWdhdGUubm9uZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChleGNlcHRpb25TdG9yZS5pbnN0YW5jZS5uYXZpZ2F0ZUZyb20gPT09IGVudW1zLlNhdmVBbmROYXZpZ2F0ZS5zdWJtaXQpIHtcclxuICAgICAgICAgICAgbWFya2luZ0FjdGlvbkNyZWF0b3Iuc2F2ZUFuZE5hdmlnYXRlKGVudW1zLlNhdmVBbmROYXZpZ2F0ZS5zdWJtaXQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgZmlyZWQgd2hlbiBkaXNjYXJkIGV4Y2VwdGlvbiBpcyBjYW5jZWxsZWQuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBvbkRpc2NhcmRFeGNlcHRpb25DYW5jZWxsZWQgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNFeGNlcHRpb25QYW5lbEVkaXRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLnZhbGlkYXRlRXhjZXB0aW9uKG51bGwsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gcmVzZXQgbmF2aWdhdGUgYXdheSBmcm9tIHJlc3BvbnNlXHJcbiAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvID0gZW51bXMuU2F2ZUFuZE5hdmlnYXRlLm5vbmU7XHJcbiAgICB9O1xyXG5cclxufVxyXG5cclxuZXhwb3J0ID0gRXhjZXB0aW9uQmFzZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvZXhjZXB0aW9uL2V4Y2VwdGlvbmJhc2UudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBWUE7Ozs7QUFJQTtBQUNBO0FBQUE7QUFWQTtBQUNBO0FBQ0E7QUFDQTtBQWFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUF6REE7QUEyREE7QUFBQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 1009:
/* no static exports found */
/* all exports used */
/*!**************************************************************!*\
  !*** ./src/components/exception/exceptioncommenthistory.tsx ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/* tslint:disable:variable-name */\r\nvar ExceptionCommentHistory = function (props) {\r\n    return (React.createElement(\"div\", { key: props.key, className: classNames('exception-history-item') },\r\n        React.createElement(\"div\", { className: 'exception-history-item-header' },\r\n            React.createElement(\"div\", { className: 'exception-history-item-left item-title' },\r\n                React.createElement(\"span\", { className: 'exception-examiner', id: 'exception_commentedby' + props.id }, props.commentedBy),\r\n                React.createElement(\"span\", { className: 'exception-history-status', id: 'exception_status' + props.id },\r\n                    \"(\",\r\n                    localeStore.instance.\r\n                        TranslateText('generic.exception-statuses.' +\r\n                        enums.getEnumString(enums.ExceptionStatus, props.exceptionStatus).toLowerCase()),\r\n                    \") \")),\r\n            React.createElement(\"div\", { className: 'exception-history-item-right' },\r\n                React.createElement(\"div\", { className: 'exception-history-tem-date' }, messageHelper.getDateToDisplay(props.updatedDate)))),\r\n        React.createElement(\"div\", { className: 'exception-history-item-content', id: 'exception_comments' + props.id }, props.comments)));\r\n};\r\nmodule.exports = ExceptionCommentHistory;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9leGNlcHRpb25jb21tZW50aGlzdG9yeS50c3g/Mjc1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcblxyXG5jb25zdCBFeGNlcHRpb25Db21tZW50SGlzdG9yeTpcclxuICAgIFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDx7XHJcbiAgICAgICAgY29tbWVudGVkQnk6IHN0cmluZywgaXNFc2NhbGF0ZWQ6IGJvb2xlYW4sIHVwZGF0ZWREYXRlOiBzdHJpbmcsIGNvbW1lbnRzOiBzdHJpbmdcclxuICAgICAgICAsIGV4Y2VwdGlvblN0YXR1czogbnVtYmVyLCBrZXk6IHN0cmluZywgaWQ6IG51bWJlclxyXG4gICAgfT4gPVxyXG4gICAgKHByb3BzOiB7XHJcbiAgICAgICAgY29tbWVudGVkQnk6IHN0cmluZywgaXNFc2NhbGF0ZWQ6IGJvb2xlYW4sIHVwZGF0ZWREYXRlOiBzdHJpbmcsIGNvbW1lbnRzOiBzdHJpbmcsXHJcbiAgICAgICAgZXhjZXB0aW9uU3RhdHVzOiBudW1iZXIsIGtleTogc3RyaW5nLCBpZDogbnVtYmVyXHJcbiAgICB9KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICg8ZGl2IGtleT17cHJvcHMua2V5fSBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2V4Y2VwdGlvbi1oaXN0b3J5LWl0ZW0nKSB9PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZXhjZXB0aW9uLWhpc3RvcnktaXRlbS1oZWFkZXInPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2V4Y2VwdGlvbi1oaXN0b3J5LWl0ZW0tbGVmdCBpdGVtLXRpdGxlJz5cclxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2V4Y2VwdGlvbi1leGFtaW5lcicgaWQ9IHsnZXhjZXB0aW9uX2NvbW1lbnRlZGJ5JyArIHByb3BzLmlkfT5cclxuICAgICAgICAgICAgICAgICAgICB7cHJvcHMuY29tbWVudGVkQnl9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPjxzcGFuIGNsYXNzTmFtZT0nZXhjZXB0aW9uLWhpc3Rvcnktc3RhdHVzJyBpZD0geydleGNlcHRpb25fc3RhdHVzJyArIHByb3BzLmlkfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgKHtsb2NhbGVTdG9yZS5pbnN0YW5jZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyYW5zbGF0ZVRleHQoJ2dlbmVyaWMuZXhjZXB0aW9uLXN0YXR1c2VzLicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5FeGNlcHRpb25TdGF0dXMsIHByb3BzLmV4Y2VwdGlvblN0YXR1cykudG9Mb3dlckNhc2UoKSl9KSA8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZXhjZXB0aW9uLWhpc3RvcnktaXRlbS1yaWdodCc+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2V4Y2VwdGlvbi1oaXN0b3J5LXRlbS1kYXRlJz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBtZXNzYWdlSGVscGVyLmdldERhdGVUb0Rpc3BsYXkocHJvcHMudXBkYXRlZERhdGUpIH1cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2V4Y2VwdGlvbi1oaXN0b3J5LWl0ZW0tY29udGVudCdcclxuICAgICAgICAgICAgICAgIGlkPSB7J2V4Y2VwdGlvbl9jb21tZW50cycgKyBwcm9wcy5pZH0+XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMuY29tbWVudHN9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcblxyXG4gICAgfTtcclxuXHJcbmV4cG9ydCA9IEV4Y2VwdGlvbkNvbW1lbnRIaXN0b3J5O1xyXG5cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL2V4Y2VwdGlvbi9leGNlcHRpb25jb21tZW50aGlzdG9yeS50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBS0E7QUFPQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 1010:
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./src/components/exception/exceptiontypeinfo.tsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar ReactDom = __webpack_require__(/*! react-dom */ 6);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar ExceptionActionButton = __webpack_require__(/*! ./exceptionactionbutton */ 1007);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\n/* tslint:disable:variable-name */\r\nvar ExceptionTypeInfo = /** @class */ (function (_super) {\r\n    __extends(ExceptionTypeInfo, _super);\r\n    /**\r\n     * Constructor ExceptionTypeInfo\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function ExceptionTypeInfo(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        //exception description callout padding\r\n        _this._calloutPadding = 6;\r\n        // Set the default states\r\n        _this.state = {\r\n            showExceptionDescription: false\r\n        };\r\n        _this.showExceptionDescription = _this.showExceptionDescription.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Component will receive props\r\n     */\r\n    ExceptionTypeInfo.prototype.componentWillReceiveProps = function () {\r\n        //close the description when the component recieves new props\r\n        this.setState({\r\n            showExceptionDescription: false\r\n        });\r\n    };\r\n    /**\r\n     * Component did mount\r\n     */\r\n    ExceptionTypeInfo.prototype.componentDidMount = function () {\r\n        //set type call out style based in the exception name width\r\n        this._exceptionTypeSpanWidth = ReactDom.findDOMNode(this.refs.caption).getBoundingClientRect().width;\r\n    };\r\n    /**\r\n     * Component did update\r\n     */\r\n    ExceptionTypeInfo.prototype.componentDidUpdate = function () {\r\n        //set tyhe call out style based in the exception name width\r\n        this._exceptionTypeSpanWidth = ReactDom.findDOMNode(this.refs.caption).getBoundingClientRect().width;\r\n    };\r\n    /**\r\n     * Render\r\n     */\r\n    ExceptionTypeInfo.prototype.render = function () {\r\n        //setting callout style\r\n        var styleCallout = {\r\n            left: this._exceptionTypeSpanWidth + this._calloutPadding\r\n        };\r\n        var closeException = (!markerOperationModeFactory.operationMode.isTeamManagementMode &&\r\n            this.props.status === enums.ExceptionStatus.Resolved ?\r\n            React.createElement(ExceptionActionButton, { id: 'exception_action_close', key: 'exception_action_close', content: localeStore.instance.TranslateText('generic.response.view-exception-panel.' +\r\n                    enums.ExceptionActionType[enums.ExceptionActionType.Close]), className: 'sprite-icon tick-round-icon', onActionException: this.props.onActionException.bind(this, enums.ExceptionActionType.Close) })\r\n            : null);\r\n        var escalateException = (this.props.isExceptionActionAvailable &&\r\n            (this.props.alternativeEscalationPoint !==\r\n                enums.EscalationPoint.None || !this.props.isPE) ? React.createElement(ExceptionActionButton, { id: 'exception_action_escalate', key: 'exception_action_escalate', content: localeStore.instance.TranslateText('generic.response.view-exception-panel.' +\r\n                enums.ExceptionActionType[enums.ExceptionActionType.Escalate]), className: 'sprite-icon round-arrow-up-icon', onActionException: this.props.onActionException.bind(this, enums.ExceptionActionType.Escalate) })\r\n            : null);\r\n        var resolveException = (this.props.isExceptionActionAvailable ? React.createElement(ExceptionActionButton, { id: 'exception_action_resolve', key: 'exception_action_resolve', content: localeStore.instance.TranslateText('generic.response.view-exception-panel.' +\r\n                enums.ExceptionActionType[enums.ExceptionActionType.Resolve]), className: 'sprite-icon round-arrow-down-icon', onActionException: this.props.onActionException.bind(this, enums.ExceptionActionType.Resolve) })\r\n            : null);\r\n        var actionException = (React.createElement(\"div\", { className: 'exception-header-right' },\r\n            escalateException,\r\n            resolveException,\r\n            closeException));\r\n        return (React.createElement(\"div\", { className: classNames('exception-detail-header  panel', this.state.showExceptionDescription ? 'open' : ''), key: 'key_' + this.props.id },\r\n            React.createElement(\"div\", { className: 'exception-header-row' },\r\n                React.createElement(\"div\", { className: 'exception-header-left' },\r\n                    React.createElement(\"div\", { className: 'exception-type' },\r\n                        React.createElement(\"span\", { ref: 'caption', className: 'exception-type-caption' }, localeStore.instance.TranslateText('generic.exception-types.' +\r\n                            this.props.exceptionTypeId + '.name')),\r\n                        React.createElement(\"span\", { className: 'sprite-icon info-round-icon panel-link', onClick: this.showExceptionDescription }))),\r\n                React.createElement(\"div\", { className: classNames('exception-header-right exception-status-holder dim-text ', this.props.status === enums.ExceptionStatus.Resolved ? 'resolved' : '') },\r\n                    React.createElement(\"div\", { className: 'exception-status' },\r\n                        React.createElement(\"div\", { className: 'exception-status-text', id: 'current_exception_status' }, localeStore.instance.TranslateText('generic.exception-statuses.' +\r\n                            enums.getEnumString(enums.ExceptionStatus, this.props.status).toLowerCase()))))),\r\n            React.createElement(\"div\", { style: styleCallout, className: 'menu-callout' }),\r\n            React.createElement(\"div\", { className: 'panel-content exception-type-info padding-all-15', \"aria-hidden\": 'true' }, localeStore.instance.TranslateText('generic.exception-types.' + this.props.exceptionTypeId + '.details')),\r\n            React.createElement(\"div\", { className: 'exception-header-row' },\r\n                React.createElement(\"div\", { className: 'exception-header-left' },\r\n                    React.createElement(\"div\", { className: 'exception-question' },\r\n                        React.createElement(\"span\", { className: 'dim-text' }, localeStore.instance.TranslateText('marking.response.question')),\r\n                        React.createElement(\"span\", { className: 'question-name' }, this.props.questionName))),\r\n                actionException)));\r\n    };\r\n    /**\r\n     * function to open/close info button\r\n     */\r\n    ExceptionTypeInfo.prototype.showExceptionDescription = function () {\r\n        this.setState({\r\n            showExceptionDescription: this.state.showExceptionDescription === false ? true : false\r\n        });\r\n    };\r\n    return ExceptionTypeInfo;\r\n}(pureRenderComponent));\r\nmodule.exports = ExceptionTypeInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 459:
/* no static exports found */
/* all exports used */
/*!********************************************************************!*\
  !*** ./src/components/utility/message/messagetranslationhelper.ts ***!
  \********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar localeStore = __webpack_require__(/*! ../../../stores/locale/localestore */ 226);\r\nvar stringHelper = __webpack_require__(/*! ../../../utility/generic/stringhelper */ 254);\r\nvar messageHelper = __webpack_require__(/*! ./messagehelper */ 283);\r\nvar constants = __webpack_require__(/*! ../constants */ 241);\r\nvar messageTranslationHandlerConstants = __webpack_require__(/*! ../messagetranslationhandlerconstants */ 520);\r\nvar enums = __webpack_require__(/*! ../enums */ 225);\r\nvar MessageTranslationHelper = /** @class */ (function () {\r\n    function MessageTranslationHelper() {\r\n    }\r\n    /**\r\n     * This method will return the translated content for translatable system messages from language json file other wise it will return\r\n     * the normal message contents.\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getTranslatedContent = function (message) {\r\n        var translatedMessageContent;\r\n        // if examBodyMessageTypeId is null then return loaded subject and content\r\n        if (!message.examBodyMessageTypeId || message.examBodyMessageTypeId === enums.SystemMessage.None) {\r\n            translatedMessageContent = {\r\n                subject: message.subject,\r\n                content: message.messageBody,\r\n                firstLine: message.examinerMessageBodyFirstLine\r\n            };\r\n        }\r\n        else {\r\n            translatedMessageContent = this.translate(message.examBodyMessageTypeId, this.getParameterForMessageTranslation(message));\r\n            if (translatedMessageContent.subject === undefined || translatedMessageContent.content === undefined) {\r\n                translatedMessageContent.subject = message.subject;\r\n                translatedMessageContent.content = message.messageBody;\r\n                translatedMessageContent.firstLine = message.examinerMessageBodyFirstLine;\r\n            }\r\n        }\r\n        return translatedMessageContent;\r\n    };\r\n    /**\r\n     * Returns the translated message contents\r\n     * @param systemMessageType\r\n     * @param parameters: string array for replacing place holders\r\n     */\r\n    MessageTranslationHelper.translate = function (systemMessageType, parameters) {\r\n        var subject;\r\n        var content;\r\n        if (systemMessageType !== null && systemMessageType !== enums.SystemMessage.None) {\r\n            // if system message is Automated marker message and metadata is offHold then we have to display offHold message content\r\n            var contentKey = systemMessageType === enums.SystemMessage.AutomatedMarkerMessage ?\r\n                parameters[1].trim() === 'OnHold' ? '.content-removed' : parameters[1].trim() === 'Removed' ?\r\n                    '.content-permanently-removed' : '.content-replaced' : '.content';\r\n            subject = stringHelper.format(localeStore.instance.TranslateText('messaging.system-messages.' + systemMessageType + '.subject'), parameters);\r\n            content = stringHelper.format(localeStore.instance.TranslateText('messaging.system-messages.' + systemMessageType + contentKey), parameters);\r\n        }\r\n        return { subject: subject, content: content, firstLine: this.getMessageBodyFirstLine(content) };\r\n    };\r\n    /**\r\n     * Return the from examiner name or 'System Message' text\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getExaminerName = function (message) {\r\n        var examinerFullName;\r\n        var systemMessageType = !message.examBodyMessageTypeId ? enums.SystemMessage.None :\r\n            message.examBodyMessageTypeId;\r\n        // system messages having their From username shown as system message\r\n        switch (systemMessageType) {\r\n            case enums.SystemMessage.AutomaticSamplingCompleted:\r\n            case enums.SystemMessage.DeAllocationRemarkResponseRemoved:\r\n            case enums.SystemMessage.MarkingInstructionUpdated:\r\n            case enums.SystemMessage.MarkingInstructionUploaded:\r\n            case enums.SystemMessage.RIGRemoved:\r\n            case enums.SystemMessage.RemarkDeleted:\r\n            case enums.SystemMessage.GracePeriodUpdate:\r\n            case enums.SystemMessage.RefreshMarkingTargets:\r\n                examinerFullName = localeStore.instance.TranslateText('messaging.message-lists.message-detail.system-message');\r\n                break;\r\n            default:\r\n                examinerFullName = message.examinerDetails.fullName;\r\n        }\r\n        return examinerFullName;\r\n    };\r\n    /**\r\n     * This method will returns the build replacing parameters\r\n     * @param message: message contents\r\n     */\r\n    MessageTranslationHelper.getParameterForMessageTranslation = function (message) {\r\n        var parameters = new Array();\r\n        var systemMessageType = !message.examBodyMessageTypeId ? enums.SystemMessage.None :\r\n            message.examBodyMessageTypeId;\r\n        switch (systemMessageType) {\r\n            // QIG\r\n            case enums.SystemMessage.AutoApprovedMarker:\r\n            case enums.SystemMessage.AutoApprovedReviewer:\r\n            case enums.SystemMessage.AutoApprovedSystem:\r\n            case enums.SystemMessage.ConditionallyApprovedMarker:\r\n            case enums.SystemMessage.ConditionallyApprovedReviewer:\r\n            case enums.SystemMessage.ConditionallyApprovedSystem:\r\n            case enums.SystemMessage.AutoSuspendMarker:\r\n            case enums.SystemMessage.AutoSuspendReviewer:\r\n            case enums.SystemMessage.CheckMyMarks:\r\n            case enums.SystemMessage.LockedExaminerWithDrawn:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            case enums.SystemMessage.MarkingInstructionUpdated:\r\n            case enums.SystemMessage.MarkingInstructionUploaded:\r\n                parameters.push(this.getMarkingInstructionParameters(message));\r\n                break;\r\n            // Display ID\r\n            case enums.SystemMessage.AutomatedMarkerMessage:\r\n            case enums.SystemMessage.ZoningExceptionRaised:\r\n            case enums.SystemMessage.ZoningExceptionResolved:\r\n                parameters.push(this.getDisplayId(message));\r\n                parameters.push(message.bodyMetadata);\r\n                break;\r\n            case enums.SystemMessage.CandidateFeedUpdated:\r\n                parameters.push(this.getDisplayId(message));\r\n                break;\r\n            // QIG and DisplayId\r\n            case enums.SystemMessage.RIGRemoved:\r\n                parameters.push(this.getDisplayId(message));\r\n                // pushing the qig name\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            // QIG and Targets\r\n            case enums.SystemMessage.RefreshMarkingTargets:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                // pushing targets\r\n                var targets = this.getTargets(message);\r\n                parameters.push(targets);\r\n                break;\r\n            case enums.SystemMessage.GracePeriodUpdate:\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                // pushing grace period details\r\n                var gracePeriodDetails = new Array();\r\n                gracePeriodDetails = this.getGracePeriodDetails(message);\r\n                for (var i = 0; i < gracePeriodDetails.length; i++) {\r\n                    parameters.push(gracePeriodDetails[i]);\r\n                }\r\n                break;\r\n            // Approval status required current, from and to\r\n            case enums.SystemMessage.IndirectSubordinateStatusUpdate:\r\n                // pushing approval status\r\n                var statusDetails = new Array();\r\n                statusDetails = this.getStatus(message);\r\n                for (var i = 0; i < statusDetails.length; i++) {\r\n                    parameters.push(statusDetails[i]);\r\n                }\r\n                break;\r\n            // DisplayID and question item.\r\n            case enums.SystemMessage.RemarkDeleted:\r\n                parameters.push(this.getDisplayId(message));\r\n                // push mark scheme group name\r\n                parameters.push(messageHelper.getMarkSchemeGroupName(message));\r\n                break;\r\n            case enums.SystemMessage.DeAllocationRemarkResponseRemoved:\r\n                // pushing the qig name\r\n                parameters.push(messageHelper.getDisplayText(message));\r\n                break;\r\n            case enums.SystemMessage.MarksChecked:\r\n                parameters.push(messageHelper.getMarkSchemeGroupName(message));\r\n                break;\r\n            case enums.SystemMessage.RemarkRequestedCompleted:\r\n                // parameters are not required as per current template\r\n                break;\r\n            // 9 - Message Template is not available\r\n            case enums.SystemMessage.RefreshQuestionPaperStructure:\r\n            // 15 - Message Template is not available\r\n            case enums.SystemMessage.AutomaticSamplingCompleted:\r\n            // 27 - Message Template is not available\r\n            case enums.SystemMessage.TakeResponse:\r\n                // pushing take response details\r\n                var takeResponseDetails = new Array();\r\n                takeResponseDetails = this.getMetaDataDetails(message);\r\n                for (var i = 0; i < takeResponseDetails.length; i++) {\r\n                    parameters.push(takeResponseDetails[i]);\r\n                }\r\n                break;\r\n        }\r\n        return parameters;\r\n    };\r\n    /**\r\n     * Returns message body first line based on the no of words\r\n     * @param messageBody\r\n     * @param noOfWords\r\n     */\r\n    MessageTranslationHelper.getMessageBodyFirstLine = function (messageBody) {\r\n        var messageBodyFirstLine = '';\r\n        if (messageBody !== undefined || messageBody !== '') {\r\n            messageBodyFirstLine = messageBody.split(' ', constants.MAX_MESSAGE_BODY_FIRST_LINE_WORDS).join(' ');\r\n        }\r\n        return messageBodyFirstLine;\r\n    };\r\n    /**\r\n     * Get targets from message metadata for RefreshMarkingTargets system message\r\n     * Marking Target update handler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getTargets = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var targets = bodyMetaParameters[messageTranslationHandlerConstants.TARGETS_DICTIONARY].split(',');\r\n        var target;\r\n        for (var i = 0; i < targets.length; i++) {\r\n            if (targets[i] !== '') {\r\n                target = targets[i].replace('TargetType_', '');\r\n                switch (target) {\r\n                    case 'STMStandardisationMarking':\r\n                        target = 'ES_TeamApproval';\r\n                        break;\r\n                    case 'SecondStandardisation':\r\n                        target = 'SecondStandardisation';\r\n                        break;\r\n                    case 'Live':\r\n                        target = 'LiveMarking';\r\n                        break;\r\n                    case 'Standardisation':\r\n                        target = 'Approval';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                targetCollection.push(localeStore.instance.TranslateText('generic.marking-modes.' + target));\r\n            }\r\n        }\r\n        var remarkTargets = bodyMetaParameters[messageTranslationHandlerConstants.REMARKTARGETS_DICTIONARY].split(',');\r\n        for (var i = 0; i < remarkTargets.length; i++) {\r\n            if (remarkTargets[i] !== '') {\r\n                targetCollection.push(localeStore.instance.TranslateText('generic.remark-types.long-names.' + remarkTargets[i]));\r\n            }\r\n        }\r\n        // return comma seperated targets\r\n        return targetCollection.join(', ');\r\n    };\r\n    /**\r\n     * Get Indirect Subordinate status from message metadata for IndirectSubordinateStatusUpdate system message\r\n     * IndirectSubordinateStatusUpdateHandler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getStatus = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var markerName = bodyMetaParameters[messageTranslationHandlerConstants.MARKER];\r\n        targetCollection.push(markerName);\r\n        var oldApprovalStatus = parseInt(bodyMetaParameters[messageTranslationHandlerConstants.OLD_STATUS]);\r\n        targetCollection.push(localeStore.instance.TranslateText('generic.approval-statuses.' +\r\n            enums.getEnumString(enums.ExaminerApproval, oldApprovalStatus)));\r\n        var newApprovalStatus = parseInt(bodyMetaParameters[messageTranslationHandlerConstants.NEW_STATUS]);\r\n        targetCollection.push(localeStore.instance.TranslateText('generic.approval-statuses.' +\r\n            enums.getEnumString(enums.ExaminerApproval, newApprovalStatus)));\r\n        return targetCollection;\r\n    };\r\n    /**\r\n     * get details from the body metadata string.\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMetaDataDetails = function (message) {\r\n        var dataCollection = new Array();\r\n        var metaDataDetails = this.getMessageBodyMetaParameters(message, '#', ':');\r\n        if (metaDataDetails) {\r\n            var displayID = parseFloat(metaDataDetails[messageTranslationHandlerConstants.DISPLAY_ID]);\r\n            dataCollection.push(displayID.toString());\r\n            var worklistType = metaDataDetails[messageTranslationHandlerConstants.WORKLIST_TYPE];\r\n            dataCollection.push(worklistType.toString());\r\n            var exceptionType = metaDataDetails[messageTranslationHandlerConstants.EXCEPTION_TYPE];\r\n            dataCollection.push(exceptionType.toString());\r\n            var seniorExaminerName = metaDataDetails[messageTranslationHandlerConstants.SENIOR_EXAMINER_NAME];\r\n            dataCollection.push(seniorExaminerName.toString());\r\n        }\r\n        return dataCollection;\r\n    };\r\n    /**\r\n     * Get Grace period details from message metadata for grace period update system message\r\n     * IndirectSubordinateStatusUpdateHandler\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getGracePeriodDetails = function (message) {\r\n        var targetCollection = new Array();\r\n        var bodyMetaParameters = this.getMessageBodyMetaParameters(message, ';', '=');\r\n        var oldGracePeriod = parseFloat(bodyMetaParameters[messageTranslationHandlerConstants.OLD_GRACE_PERIOD]);\r\n        targetCollection.push(oldGracePeriod.toString());\r\n        var newGracePeriod = parseFloat(bodyMetaParameters[messageTranslationHandlerConstants.NEW_GRACE_PERIOD]);\r\n        targetCollection.push(newGracePeriod.toString());\r\n        return targetCollection;\r\n    };\r\n    /**\r\n     * This method will process message metadata string\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMessageBodyMetaParameters = function (message, splitter1, splitter2) {\r\n        var bodyMetaParameters = new Object();\r\n        if (message.bodyMetadata != null && message.bodyMetadata !== undefined) {\r\n            var pairs = message.bodyMetadata.split(splitter1);\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                if (pairs[i].trim().length === 0) {\r\n                    continue;\r\n                }\r\n                var bits = pairs[i].split(splitter2);\r\n                if (bits.length < 2 || bits[0].length === 0) {\r\n                    continue;\r\n                }\r\n                bodyMetaParameters[bits[0]] = bits[1];\r\n            }\r\n        }\r\n        return bodyMetaParameters;\r\n    };\r\n    /**\r\n     * This will return the displayId with prefix '6'\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getDisplayId = function (message) {\r\n        return '6' + message.relatedResponseDisplayId.toString();\r\n    };\r\n    /**\r\n     * This will return string for particular enum value from resource file\r\n     * @param sampleReivewComment\r\n     */\r\n    MessageTranslationHelper.getCustomEnumString = function (sampleReivewComment, buttonType) {\r\n        switch (buttonType) {\r\n            case enums.ButtonType.Sampling:\r\n                return localeStore.instance.\r\n                    TranslateText('team-management.response.supervisor-sampling-comments.' + sampleReivewComment);\r\n            case enums.ButtonType.SetAsReviewed:\r\n                return localeStore.instance.\r\n                    TranslateText('team-management.response.review-comments.' + sampleReivewComment);\r\n        }\r\n    };\r\n    /**\r\n     * gets the message body parameters for marking instructions file upload mandatory message\r\n     * @param message\r\n     */\r\n    MessageTranslationHelper.getMarkingInstructionParameters = function (message) {\r\n        var bodyMetaData = message.bodyMetadata.split('|');\r\n        // if message body metadata has 4 items then it is in QIG level, and has one more parameter to represent QIG name\r\n        if (bodyMetaData.length === 4) {\r\n            return (bodyMetaData[0] + ' - ' + bodyMetaData[1] + ' - ' + bodyMetaData[2]);\r\n        }\r\n        else if (bodyMetaData.length === 3) {\r\n            return (bodyMetaData[0] + ' - ' + bodyMetaData[1]);\r\n        }\r\n    };\r\n    return MessageTranslationHelper;\r\n}());\r\nmodule.exports = MessageTranslationHelper;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 462:
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./src/components/message/messagebase.ts ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar popUpDisplayActionCreator = __webpack_require__(/*! ../../actions/popupdisplay/popupdisplayactioncreator */ 328);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar qualityfeedbackHelper = __webpack_require__(/*! ../../utility/qualityfeedback/qualityfeedbackhelper */ 309);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar teamManagementActionCreator = __webpack_require__(/*! ../../actions/teammanagement/teammanagementactioncreator */ 263);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\nvar Immutable = __webpack_require__(/*! immutable */ 40);\r\nvar MessageBase = /** @class */ (function (_super) {\r\n    __extends(MessageBase, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageBase(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isSelectedItemClicked = false;\r\n        _this.navigateTo = enums.SaveAndNavigate.none;\r\n        _this.msgEditorId = 'msg-tinymce-editor';\r\n        _this._boundHandleOnClick = null;\r\n        _this.isSubordinateSelected = false;\r\n        _this.sendMessageActionInProgress = false;\r\n        _this.messageType = enums.MessageType.None;\r\n        /**\r\n         * Callback function for dropdown select\r\n         */\r\n        _this.onSelect = function (selectedItem, event) {\r\n            _this.priorityDropDownSelectedItem = selectedItem;\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         *  Callback function for dropdown click\r\n         */\r\n        _this.onDropDownClick = function (dropDown) {\r\n            _this.clickedDropDown = dropDown;\r\n            _this.isSelectedItemClicked = true;\r\n            if (_this.clickedDropDown === enums.DropDownType.Priority) {\r\n                _this.isQigDropDownOpen = undefined;\r\n                _this.isDropDownOpen = _this.isDropDownOpen === undefined ? true : !_this.isDropDownOpen;\r\n            }\r\n            else if (_this.clickedDropDown === enums.DropDownType.QIG) {\r\n                _this.isDropDownOpen = undefined;\r\n                _this.isQigDropDownOpen = _this.isQigDropDownOpen === undefined ? true : !_this.isQigDropDownOpen;\r\n            }\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Handle click events on the window and collapse priority selection dropdown\r\n         * @param {any} source - The source element\r\n         */\r\n        _this.handleOnClick = function () {\r\n            if (!_this.isSelectedItemClicked && ((_this.isDropDownOpen !== undefined && _this.isDropDownOpen)\r\n                || (_this.isQigDropDownOpen !== undefined && _this.isQigDropDownOpen))) {\r\n                // collapse the priority dropdown\r\n                _this.isDropDownOpen = false;\r\n                _this.isQigDropDownOpen = false;\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n            else {\r\n                _this.isSelectedItemClicked = false;\r\n            }\r\n        };\r\n        /**\r\n         *  This will return the localised string for message priority dropdown\r\n         */\r\n        _this.getPriorityDropDownItem = function (dropDownItem) {\r\n            var localisedDropDownItem;\r\n            switch (dropDownItem) {\r\n                case enums.MessagePriority.Important:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.important');\r\n                    break;\r\n                case enums.MessagePriority.Mandatory:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.mandatory');\r\n                    break;\r\n                default:\r\n                    localisedDropDownItem = localeStore.instance.TranslateText('messaging.compose-message.priority.standard');\r\n                    break;\r\n            }\r\n            return localisedDropDownItem;\r\n        };\r\n        /**\r\n         * Method fired when the message is closed.\r\n         */\r\n        _this.onMessageClose = function () {\r\n            // Show discard message if content edited; or just close the panel.\r\n            if (_this.isMessagePanelEdited) {\r\n                messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n                if (_this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick\r\n                    || _this.navigateTo === enums.SaveAndNavigate.toReplyMessage\r\n                    || _this.navigateTo === enums.SaveAndNavigate.toForwardMessage) {\r\n                    popUpDisplayActionCreator.popUpDisplay(enums.PopUpType.DiscardOnNewMessageButtonClick, enums.PopUpActionType.Show, enums.SaveAndNavigate.none, {\r\n                        popupContent: localeStore.instance.TranslateText('messaging.compose-message.discard-message-dialog.body-start-new-message-while-composing')\r\n                    });\r\n                }\r\n                else if (_this.navigateTo === enums.SaveAndNavigate.toNewResponseMessageCompose) {\r\n                    popUpDisplayActionCreator.popUpDisplay(enums.PopUpType.DiscardOnNewMessageButtonClick, enums.PopUpActionType.Show, enums.SaveAndNavigate.none, {\r\n                        popupContent: localeStore.instance.TranslateText('marking.response.discard-message-or-exception-dialog.body')\r\n                    });\r\n                }\r\n                else {\r\n                    var messageType = _this.navigateTo !== enums.SaveAndNavigate.none\r\n                        ? enums.PopUpType.DiscardMessageNavigateAway : enums.PopUpType.DiscardMessage;\r\n                    popUpDisplayActionCreator.popUpDisplay(messageType, enums.PopUpActionType.Show, messageStore.instance.navigateFrom, {\r\n                        popupContent: (_this.navigateTo === enums.SaveAndNavigate.messageWithInResponse ?\r\n                            localeStore.instance.TranslateText('marking.response.discard-message-or-exception-dialog.body') : undefined)\r\n                    });\r\n                }\r\n            }\r\n            else if (_this.navigateTo !== enums.SaveAndNavigate.none && _this.navigateTo !== enums.SaveAndNavigate.messageWithInResponse\r\n                && _this.navigateTo !== enums.SaveAndNavigate.newMessageButtonClick) {\r\n                // hide the message panel and navigate away\r\n                _this.onDiscardMessageConfirmed();\r\n            }\r\n            else if (_this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick) {\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n                _this.isMessagePopupMinimized = false;\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n            else {\r\n                // Close the Message Panel.\r\n                _this.resetAndCloseMessagePanel();\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n            }\r\n        };\r\n        /**\r\n         * Navigate away from current response.\r\n         */\r\n        _this.onNavigateAwayFromResponse = function (navigateTo) {\r\n            _this.navigateTo = navigateTo;\r\n            _this.onMessageClose();\r\n        };\r\n        /**\r\n         * Reset message panel and close\r\n         */\r\n        _this.resetAndCloseMessagePanel = function () {\r\n            _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n            _this.toFieldValues = null;\r\n            _this.toFieldIds = null;\r\n            _this.messageSubject = '';\r\n            _this.messageBody = '';\r\n            _this.isDropDownOpen = undefined;\r\n            _this.isQigDropDownOpen = undefined;\r\n            _this.props.closeMessagePanel(_this.navigateTo);\r\n            _this.selectedQigItemId = undefined;\r\n            _this.questionPaperPartId = undefined;\r\n            messageHelper.handleSubjectChange(_this.messageSubject);\r\n            _this.sendMessageActionInProgress = false;\r\n            // updating message component with default values\r\n            // this enable or Disable send button will call setState\r\n            _this.enableDisableSendButton();\r\n            // Need to Update the UI (Subject box in the message, after closing the message : Bug 28224\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Method fired when discard message is confirmed.\r\n         */\r\n        _this.onDiscardMessageConfirmed = function (actionFromCombinedPopup, navigateTo) {\r\n            if (actionFromCombinedPopup === void 0) { actionFromCombinedPopup = false; }\r\n            if (navigateTo === void 0) { navigateTo = enums.SaveAndNavigate.none; }\r\n            // If message panel is not edited, no need to change the UI while logout\r\n            if (_this.isMessagePanelEdited) {\r\n                // Close the Message Panel.\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n            else if (!_this.isMessagePanelEdited && _this.navigateTo === enums.SaveAndNavigate.newMessageButtonClick) {\r\n                messagingActionCreator.messageAction(enums.MessageViewAction.Open);\r\n            }\r\n            else {\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n            // on message close navigate away from response scenario\r\n            if (_this.navigateTo !== enums.SaveAndNavigate.none && _this.navigateTo !== enums.SaveAndNavigate.messageWithInResponse\r\n                && _this.navigateTo !== enums.SaveAndNavigate.toNewResponseMessageCompose &&\r\n                !(_this.navigateTo === enums.SaveAndNavigate.toResponse && qualityfeedbackHelper.isResponseNavigationBlocked())) {\r\n                if (_this.navigateTo === enums.SaveAndNavigate.toSupervisorRemark) {\r\n                    // Response Going from readonly mode to marking. Reset the message related values from response screen.\r\n                    _this.resetAndCloseMessagePanel();\r\n                }\r\n                // if navigate away from Resposne then close the response and move to worklist.\r\n                popupHelper.navigateAway(_this.navigateTo);\r\n            }\r\n            else if (actionFromCombinedPopup) {\r\n                popupHelper.navigateAway(navigateTo);\r\n            }\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n        };\r\n        /**\r\n         * Method fired when discard message is cancelled.\r\n         */\r\n        _this.onDiscardMessageCancelled = function () {\r\n            // reset navigate away from response\r\n            _this.navigateTo = enums.SaveAndNavigate.none;\r\n            messageHelper.handleSubjectChange(_this.messageSubject);\r\n        };\r\n        /**\r\n         * Handles changes in the message panel subject section.\r\n         * @param e\r\n         */\r\n        _this.handleSubjectChange = function (subject) {\r\n            _this.messageSubject = subject;\r\n            _this.enableDisableSendButton();\r\n            messageHelper.handleSubjectChange(subject);\r\n            _this.setState({ renderedOn: Date.now() });\r\n        };\r\n        /**\r\n         * Enable and disable send button on tinyMCE editor change.\r\n         */\r\n        _this.toggleSaveButtonState = function () {\r\n            _this.enableDisableSendButton();\r\n        };\r\n        /**\r\n         * Method fired when the message panel is minimized.\r\n         */\r\n        _this.onMinimize = function () {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.Minimize);\r\n        };\r\n        /**\r\n         * Method fired when the message panel is maximized.\r\n         */\r\n        _this.onMaximize = function () {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n        };\r\n        /**\r\n         * This method will call on message send button click\r\n         */\r\n        _this.onMessageSend = function (messageType) {\r\n            _this.enableDisableSendButton();\r\n            var candidateScriptId = undefined;\r\n            var markGroupId = undefined;\r\n            var esMarkGroupId = undefined;\r\n            _this.messageBody = tinymce.get(_this.msgEditorId).getContent();\r\n            switch (messageType) {\r\n                case enums.MessageType.ResponseCompose:\r\n                case enums.MessageType.ResponseReply:\r\n                case enums.MessageType.ResponseForward:\r\n                    // selected Qig id for compose message in response screen\r\n                    _this.selectedQigItemId = qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId;\r\n                    _this.questionPaperPartId = qigStore.instance.selectedQIGForMarkerOperation.questionPaperPartId;\r\n                    var openedResponseDetails = _this.props.responseId ?\r\n                        markerOperationModeFactory.operationMode.openedResponseDetails(_this.props.responseId.toString()) : null;\r\n                    var isEsResponse = (worklistStore.instance.currentWorklistType === enums.WorklistType.standardisation\r\n                        || worklistStore.instance.currentWorklistType === enums.WorklistType.practice ||\r\n                        worklistStore.instance.currentWorklistType === enums.WorklistType.secondstandardisation\r\n                        || markerOperationModeFactory.operationMode.isStandardisationSetupMode) ? true : false;\r\n                    if (openedResponseDetails) {\r\n                        candidateScriptId = openedResponseDetails.candidateScriptId;\r\n                        if (markerOperationModeFactory.operationMode.isStandardisationSetupMode) {\r\n                            esMarkGroupId = openedResponseDetails.esMarkGroupId;\r\n                        }\r\n                        else {\r\n                            markGroupId = isEsResponse ? undefined : openedResponseDetails.markGroupId;\r\n                            esMarkGroupId = isEsResponse ? openedResponseDetails.markGroupId : undefined;\r\n                        }\r\n                    }\r\n                    break;\r\n                // Not setting candidateScriptId, markGroupId, esMarkGroupId if composing message from response and worklist\r\n                // since not associated with any particular response.\r\n                case enums.MessageType.InboxCompose:\r\n                case enums.MessageType.WorklistCompose:\r\n                    break;\r\n                default:\r\n                    var currentMessageDetails = _this.props.selectedMsgDetails;\r\n                    if (currentMessageDetails !== undefined && currentMessageDetails !== null) {\r\n                        candidateScriptId = currentMessageDetails.candidateScriptId;\r\n                        markGroupId = currentMessageDetails.markGroupId;\r\n                        esMarkGroupId = currentMessageDetails.esMarkGroupId;\r\n                    }\r\n                    break;\r\n            }\r\n            // fetching currently selected qig's examiner roleId\r\n            var examinerRoleId = 0;\r\n            var msg = messageStore.instance.messagesMarkSchemes;\r\n            if (msg) {\r\n                msg.forEach(function (message) {\r\n                    if (message.markSchemeGroupId === _this.selectedQigItemId) {\r\n                        examinerRoleId = message.examinerRoleId;\r\n                    }\r\n                });\r\n            }\r\n            var toTeam = messageStore.instance.teamDetails ? messageStore.instance.teamDetails.team.toTeam : false;\r\n            messagingActionCreator.sendExaminerMessage(_this.toFieldIds, _this.messageBody, _this.messageSubject, _this.questionPaperPartId, _this.props.responseId, _this.priorityDropDownSelectedItem, _this.selectedQigItemId, candidateScriptId, markGroupId, esMarkGroupId, toTeam, examinerRoleId);\r\n        };\r\n        /**\r\n         * Navigating away from message panel when the pop up is opened\r\n         */\r\n        _this.onNavigateFromMessagePanel = function (messageNavigationArguments) {\r\n            if (messageNavigationArguments.hasMessageContainsDirtyValue === undefined) {\r\n                // Should be possible to open the response, If the message composed from Team management\r\n                if (_this.isMessagePanelEdited) {\r\n                    messagingActionCreator.messageAction(enums.MessageViewAction.Maximize);\r\n                    // To maximise the message panel when the discard popup is shown\r\n                    _this.isMessagePopupMinimized = false;\r\n                    _this.setState({ renderedOn: Date.now() });\r\n                    messageNavigationArguments.hasMessageContainsDirtyValue = true;\r\n                    messagingActionCreator.canMessageNavigate(messageNavigationArguments);\r\n                }\r\n                else if (!messageNavigationArguments.canNavigate) {\r\n                    messagingActionCreator.messageAction(enums.MessageViewAction.Close);\r\n                    messageNavigationArguments.hasMessageContainsDirtyValue = false;\r\n                    if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newException) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.newExceptionButtonClick;\r\n                    }\r\n                    else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.exceptionWithInResponse) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.exceptionWithInResponse;\r\n                    }\r\n                    else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newExceptionFromMediaErrorDialog) {\r\n                        _this.navigateTo = enums.SaveAndNavigate.newExceptionFromMediaErrorDialog;\r\n                    }\r\n                    _this.resetAndCloseMessagePanel();\r\n                    messageNavigationArguments.canNavigate = true;\r\n                    messagingActionCreator.canMessageNavigate(messageNavigationArguments);\r\n                }\r\n            }\r\n            else if (messageNavigationArguments.hasMessageContainsDirtyValue && messageNavigationArguments.canNavigate) {\r\n                _this.isMessagePopupMinimized = false;\r\n                if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newException) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.newExceptionButtonClick;\r\n                }\r\n                else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.exceptionWithInResponse) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.exceptionWithInResponse;\r\n                }\r\n                else if (messageNavigationArguments.navigateTo === enums.MessageNavigation.newExceptionFromMediaErrorDialog) {\r\n                    _this.navigateTo = enums.SaveAndNavigate.newExceptionFromMediaErrorDialog;\r\n                }\r\n                _this.resetAndCloseMessagePanel();\r\n            }\r\n        };\r\n        /**\r\n         * checks whether the supervisor examiner is valid to send a message or not\r\n         */\r\n        _this.messageSendValidationCheck = function (messageType) {\r\n            _this.sendMessageActionInProgress = true;\r\n            _this.messageType = messageType;\r\n            // While in SEP view we need to check whether the supervisor examiner is valid to send a message to subordinate examiner\r\n            if (markerOperationModeFactory.operationMode.isHelpExaminersView) {\r\n                _this.enableDisableSendButton();\r\n                var dataCollection = new Array();\r\n                var examinerSEPAction = {\r\n                    examinerRoleId: qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId,\r\n                    markSchemeGroupId: qigStore.instance.getSelectedQIGForTheLoggedInUser.markSchemeGroupId,\r\n                    requestedByExaminerRoleId: qigStore.instance.getSelectedQIGForTheLoggedInUser.examinerRoleId\r\n                };\r\n                dataCollection.push(examinerSEPAction);\r\n                var examinerSEPActions = Immutable.List(dataCollection);\r\n                var doSEPApprovalManagementActionArgument = {\r\n                    actionIdentifier: enums.SEPAction.SendMessage,\r\n                    examiners: examinerSEPActions\r\n                };\r\n                teamManagementActionCreator.ExecuteApprovalManagementAction(doSEPApprovalManagementActionArgument);\r\n            }\r\n            else {\r\n                _this.onMessageSend(_this.messageType);\r\n            }\r\n        };\r\n        /**\r\n         * To check whether the examiner is valid to send a message\r\n         */\r\n        _this.examinerValidation = function (actionIdentifier) {\r\n            // No need to handle, If user clicks help examiners and immidietly navigated to inbox\r\n            if (_this.props.messageType === enums.MessageType.InboxCompose) {\r\n                return;\r\n            }\r\n            // If there is no failure code then the supervisor examiner is valid to send a message\r\n            if (actionIdentifier === enums.SEPAction.SendMessage) {\r\n                _this.onMessageSend(_this.messageType);\r\n            }\r\n        };\r\n        /**\r\n         * enable send button state on offline\r\n         */\r\n        _this.onOnlineStatusChanged = function () {\r\n            if (!applicationStore.instance.isOnline) {\r\n                _this.toggleSaveButtonState();\r\n            }\r\n        };\r\n        _this.priorityDropDownSelectedItem = enums.MessagePriority.Standard;\r\n        _this.isSendButtonDisabled = true;\r\n        _this.messageSubject = '';\r\n        _this.messageBody = '';\r\n        _this._boundHandleOnClick = _this.handleOnClick.bind(_this);\r\n        _this.isSubordinateSelected = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MessageBase.prototype, \"isMessagePanelEdited\", {\r\n        /**\r\n         * Returns a boolean indicating whether the message panel is edited.\r\n         */\r\n        get: function () {\r\n            return messageHelper.isMessagePanelEdited(this.props.messageType, this.toFieldValues, this.toFieldIds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets the enable/disable status of send button.\r\n     */\r\n    MessageBase.prototype.enableDisableSendButton = function () {\r\n        var currentSendButtonStatusAfterChange = true;\r\n        var activeEditorgetContentLength = 0;\r\n        // if sending message is in progress no need to execute logic to enabling/ disabling button\r\n        if (!this.sendMessageActionInProgress) {\r\n            var activeEditor = tinymce.get(this.msgEditorId);\r\n            //Defect Id:48277 First time active Editor does not contains 'Body' Then throws exception 'Body Undefined'\r\n            if (activeEditor && activeEditor.contentDocument != null) {\r\n                activeEditorgetContentLength = activeEditor.getContent({ format: 'text' }).trim().length;\r\n            }\r\n            if (this.props.messageType === enums.MessageType.InboxCompose ||\r\n                this.props.messageType === enums.MessageType.ResponseCompose\r\n                || this.props.messageType === enums.MessageType.WorklistCompose ||\r\n                this.props.messageType === enums.MessageType.ResponseReply\r\n                || this.props.messageType === enums.MessageType.ResponseForward ||\r\n                this.props.messageType === enums.MessageType.TeamCompose) {\r\n                currentSendButtonStatusAfterChange = !(this.messageSubject.trim().length > 0 &&\r\n                    (this.toFieldIds && this.toFieldIds.length > 0)\r\n                    && (this.toFieldValues && this.toFieldValues.length > 0)\r\n                    && (activeEditorgetContentLength > 0 ||\r\n                        messageHelper._isPasteEnabled));\r\n            }\r\n            else if (this.props.messageType === enums.MessageType.InboxForward ||\r\n                this.props.messageType === enums.MessageType.InboxReply) {\r\n                currentSendButtonStatusAfterChange = !(this.messageSubject.trim().length > 0\r\n                    && (this.toFieldIds && this.toFieldIds.length > 0)\r\n                    && (this.toFieldValues && this.toFieldValues.length > 0)\r\n                    && this.selectedQigItemId > 1\r\n                    && (activeEditorgetContentLength > 0\r\n                        || messageHelper._isPasteEnabled));\r\n            }\r\n        }\r\n        else {\r\n            // disable send button when send message action is in progress if the application is online\r\n            currentSendButtonStatusAfterChange = applicationStore.instance.isOnline;\r\n        }\r\n        if (this.isSendButtonDisabled !== currentSendButtonStatusAfterChange) {\r\n            this.isSendButtonDisabled = currentSendButtonStatusAfterChange;\r\n            // It is noticed due to render in same time, state change not happening. Add some extra time for rendering.\r\n            this.setState({ renderedOn: Date.now() + 10 });\r\n        }\r\n        // Reset setPasteEnabledAction as false after the paste action fired.\r\n        messageHelper.setPasteEnabledAction(false);\r\n    };\r\n    return MessageBase;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageBase;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 463:
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./src/components/message/messageeditor.tsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar TINYMCE = __webpack_require__(/*! react-tinymce */ 45);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar urls = __webpack_require__(/*! ../../dataservices/base/urls */ 266);\r\nvar messageEditorConstants = __webpack_require__(/*! ../utility/messageeditorconstants */ 325);\r\nvar localeHelper = __webpack_require__(/*! ../../utility/locale/localehelper */ 281);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar MessageEditor = /** @class */ (function (_super) {\r\n    __extends(MessageEditor, _super);\r\n    /**\r\n     * Constructor messageeditor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function MessageEditor(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        _this.isEditorInitialised = false;\r\n        _this.lastTap = 0;\r\n        _this.contentStyle = htmlUtilities.isIPadDevice ?\r\n            '.mce-content-body{word-break: break-word;font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + '; list-style-position: inside;}' + 'p{ margin:0; padding:0;}'\r\n            : htmlUtilities.isIE ? '.mce-content-body{font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + ';} p{ margin:0; padding:0;}' :\r\n                '.mce-content-body{font-family:' + messageEditorConstants.TINYMCE_DEFAULT_FONT +\r\n                    '; font-size:' + messageEditorConstants.TINYMCE_DEFAULT_FONTSIZE + '; list-style-position: inside; } p{ margin:0; padding:0;}';\r\n        /**\r\n         * This will block the double-tap zoom in ipad\r\n         */\r\n        _this.blockDoubleTapZoom = function (e) {\r\n            var currentTime = new Date().getTime();\r\n            var tapLength = currentTime - _this.lastTap;\r\n            if (tapLength < 500 && tapLength > 0) {\r\n                e.preventDefault();\r\n            }\r\n            _this.lastTap = currentTime;\r\n        };\r\n        /**\r\n         * This will block the pinch-to-zoom in ipad\r\n         */\r\n        _this.blockPinchToZoom = function (e) {\r\n            if (e.touches.length > 1) {\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        _this.onKeyup = function (o, e) {\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        _this.onEditorInit = function (o, e) {\r\n            _this.activeEditor.on('SetContent', _this.onSetContent);\r\n            // Set the height of the iFrame section in the tiny mce as 100% for supporting the height calculation in css.\r\n            document.getElementById('msg-tinymce-editor_ifr').style.height = '100%';\r\n            if (htmlUtilities.isIPadDevice) {\r\n                document.getElementById('msg-tinymce-editor_ifr').setAttribute('scrolling', 'no');\r\n            }\r\n            _this.isEditorInitialised = true;\r\n            if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n                e.getWin().document.documentElement.addEventListener('touchend', _this.blockDoubleTapZoom);\r\n                e.getWin().document.documentElement.addEventListener('touchstart', _this.blockPinchToZoom);\r\n            }\r\n        };\r\n        _this.onRemove = function (o, e) {\r\n            if (htmlUtilities.isIPadDevice && htmlUtilities.getUserDevice().browser === 'Safari') {\r\n                e.getWin().document.documentElement.removeEventListener('touchend', _this.blockDoubleTapZoom);\r\n                e.getWin().document.documentElement.removeEventListener('touchstart', _this.blockPinchToZoom);\r\n            }\r\n        };\r\n        /**\r\n         * Simulate window click while clicking on tinyMCE editor to close opened priority drop down and user option panel.\r\n         */\r\n        _this.onClick = function (o, e) {\r\n            // we have to close opened priority drop down and user options (logout options) while clicking on outside that. TinyMCE editor was\r\n            // preventing the click event to propagate outside so closing of those things are not happening while clicking on TinyMCE editor.\r\n            var event = document.createEvent('MouseEvents');\r\n            event.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\r\n            window.dispatchEvent(event);\r\n        };\r\n        _this.onPaste = function (o, e) {\r\n            // find the clipboard data from any possible (window.clipboarddata is for ie)\r\n            var clipBoardData = (o.clipboardData || window.clipboardData ||\r\n                (o.originalEvent && o.originalEvent.clipboardData));\r\n            // set getdata argument - 'text' is only for ie11 and other device/browsers need 'text/plain'\r\n            var getDataArgument = htmlUtilities.isIE11 ? 'text' : 'text/plain';\r\n            // If you paste text into the editor with mouse by right- click\r\n            // TinyMCE's onPaste event is fired, but text is not available via .getContent().\r\n            // So that checking the clipboard data item when the user pasting the text via mouse by right- click.\r\n            if (clipBoardData && clipBoardData.getData(getDataArgument).trim() !== '') {\r\n                messageHelper.setPasteEnabledAction(true);\r\n            }\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        /**\r\n         * This method will enable the send button when hyperlink is added.\r\n         */\r\n        _this.onSetContent = function (e) {\r\n            _this.props.toggleSaveButtonState();\r\n        };\r\n        /**\r\n         * This method will clear tinyMCE content\r\n         */\r\n        _this.onMessagePanelClose = function () {\r\n            _this.activeEditor.setContent('');\r\n        };\r\n        /**\r\n         * This method will set focus to tinyMCE editor\r\n         */\r\n        _this.setFocus = function () {\r\n            if (_this.state.scriptLoaded) {\r\n                if (_this.activeEditor && _this.isEditorInitialised && _this.props.hasFocus) {\r\n                    // this will set dom focus to tinymce editor\r\n                    _this.activeEditor.focus();\r\n                }\r\n            }\r\n        };\r\n        //initialize state\r\n        _this.state = {\r\n            scriptLoaded: false,\r\n            renderedOn: 0\r\n        };\r\n        _this.onRemove = _this.onRemove.bind(_this);\r\n        _this.onEditorInit = _this.onEditorInit.bind(_this);\r\n        _this.onSetContent = _this.onSetContent.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Component did mount\r\n     */\r\n    MessageEditor.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        this.setFocus();\r\n    };\r\n    /**\r\n     * Component will mount\r\n     */\r\n    MessageEditor.prototype.componentWillMount = function () {\r\n        var url = htmlUtilities.getFullUrl(urls.TINYMCE_URL);\r\n        // If tinyMCE script is not loaded then load that\r\n        if (!htmlUtilities.isScriptLoaded(url)) {\r\n            var script = document.createElement('script');\r\n            script.src = url;\r\n            script.async = true;\r\n            script.onload = (this.dependenciesLoaded.bind(this));\r\n            document.body.appendChild(script);\r\n        }\r\n        else {\r\n            this.dependenciesLoaded();\r\n        }\r\n    };\r\n    /**\r\n     * component will unmount\r\n     */\r\n    MessageEditor.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.onMessagePanelClose);\r\n        if (tinymce.get(this.props.id)) {\r\n            tinymce.remove('#' + this.props.id);\r\n        }\r\n    };\r\n    /**\r\n     * Component did update\r\n     */\r\n    MessageEditor.prototype.componentDidUpdate = function () {\r\n        this.setFocus();\r\n    };\r\n    /**\r\n     * Render component\r\n     */\r\n    MessageEditor.prototype.render = function () {\r\n        if (this.state.scriptLoaded) {\r\n            var selectedLang = localeHelper.getAwardingBodyLocale(this.props.selectedLanguage);\r\n            var editorConfig = {\r\n                menubar: false,\r\n                statusbar: false,\r\n                renderedOn: Date.now(),\r\n                plugins: messageEditorConstants.TINYMCE_PLUGINS,\r\n                toolbar: messageEditorConstants.TINYMCE_TOOLBAR,\r\n                fontsize_formats: messageEditorConstants.TINYMCE_FONTSIZES,\r\n                font_formats: messageEditorConstants.TINYMCE_FONTS,\r\n                language: selectedLang,\r\n                browser_spellcheck: true,\r\n                content_style: this.contentStyle,\r\n                default_link_target: '_blank',\r\n                target_list: false,\r\n                invalid_elements: 'embed'\r\n            };\r\n            return (React.createElement(TINYMCE, { content: this.props.htmlContent, id: this.props.id, theme: messageEditorConstants.TINYMCE_THEME, config: editorConfig, onKeyup: this.onKeyup, onPaste: this.onPaste, onInit: this.onEditorInit, onClick: this.onClick, onRemove: this.onRemove }));\r\n        }\r\n        else {\r\n            //show loading icon if script is not loaded\r\n            return (React.createElement(\"div\", null));\r\n        }\r\n    };\r\n    /**\r\n     * Method to load dependencies\r\n     */\r\n    MessageEditor.prototype.dependenciesLoaded = function () {\r\n        if (this.props.isTinyMCELoaded) {\r\n            this.props.isTinyMCELoaded(true);\r\n        }\r\n        this.setState({ scriptLoaded: true });\r\n    };\r\n    Object.defineProperty(MessageEditor.prototype, \"activeEditor\", {\r\n        /**\r\n         * This method will return the active editor\r\n         */\r\n        get: function () {\r\n            return tinymce.get(this.props.id);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageEditor;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageEditor;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 464:
/* no static exports found */
/* all exports used */
/*!************************************************************!*\
  !*** ./src/components/message/messageprioritydropdown.tsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/* tslint:disable:variable-name */\r\nvar ListItem = function (props) {\r\n    return React.createElement(\"li\", { role: 'menuitem' },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: function () { props.onSelect(props.item.id); } }, props.item.name));\r\n};\r\nvar List = function (props) { return (React.createElement(\"ul\", { id: props.id + '_drop-down-items', className: 'menu', role: 'menu', title: localeStore.instance.TranslateText('messaging.compose-message.priority.priority-tooltip'), \"aria-hidden\": 'true' }, props.items.map(function (item) { return (item !== null) ?\r\n    (React.createElement(ListItem, { key: 'key_drop_down_' + item.id, onSelect: props.onSelect, item: item })) :\r\n    null; }))); };\r\nvar DropDown = function (props) {\r\n    return (React.createElement(\"div\", { id: props.id + '_dropdown', className: classNames(props.className, { 'open': props.isOpen }, { 'close': props.isOpen === undefined ? false : !props.isOpen }), onClick: function () { props.onClick(props.dropDownType); } },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', id: props.id + '_component', className: 'menu-button' },\r\n            React.createElement(\"span\", { id: props.id + '_items' },\r\n                \" \",\r\n                props.selectedItem,\r\n                \" \"),\r\n            React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' })),\r\n        React.createElement(List, { id: props.id, key: 'key_drop_down_items', onSelect: props.onSelect, items: props.items })));\r\n};\r\nmodule.exports = DropDown;\r\n/* tslint:enable */ \r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkcm9wZG93bi50c3g/YTU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5sZXQgbG9jYWxlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbG9jYWxlL2xvY2FsZXN0b3JlJyk7XHJcblxyXG5pbnRlcmZhY2UgSXRlbSB7XHJcbiAgICBpZDogZW51bXMuTWVzc2FnZVByaW9yaXR5O1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgRHJvcERvd25JdGVtcyB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgZHJvcERvd25UeXBlOiBlbnVtcy5Ecm9wRG93blR5cGU7XHJcbiAgICBjbGFzc05hbWU6IHN0cmluZztcclxuICAgIGlzT3BlbjogYm9vbGVhbjtcclxuICAgIG9uQ2xpY2s6IEZ1bmN0aW9uO1xyXG4gICAgb25TZWxlY3Q6IEZ1bmN0aW9uO1xyXG4gICAgc2VsZWN0ZWRJdGVtOiBzdHJpbmc7XHJcbiAgICBpdGVtczogQXJyYXk8SXRlbT47XHJcbn1cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcbmNvbnN0IExpc3RJdGVtID0gKHByb3BzOiB7IG9uU2VsZWN0OiBGdW5jdGlvbiwgaXRlbTogSXRlbX0pID0+XHJcbiAgICA8bGkgcm9sZT0nbWVudWl0ZW0nPjxhIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKScgb25DbGljayA9IHsoKSA9PiB7IHByb3BzLm9uU2VsZWN0KHByb3BzLml0ZW0uaWQpOyB9IH0+eyBwcm9wcy5pdGVtLm5hbWUgfTwvYT48L2xpPjtcclxuY29uc3QgTGlzdCA9IChwcm9wczogeyBvblNlbGVjdDogRnVuY3Rpb24sIGl0ZW1zOiBBcnJheTxJdGVtPiwgaWQ6IHN0cmluZyB9KSA9PiAoXHJcbiAgICA8dWwgaWQ9e3Byb3BzLmlkICsgJ19kcm9wLWRvd24taXRlbXMnfSBjbGFzc05hbWU9J21lbnUnIHJvbGU9J21lbnUnXHJcbiAgICAgICAgdGl0bGU9e2xvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ21lc3NhZ2luZy5jb21wb3NlLW1lc3NhZ2UucHJpb3JpdHkucHJpb3JpdHktdG9vbHRpcCcpfSBhcmlhLWhpZGRlbj0ndHJ1ZScgPlxyXG4gICAgICAgIHsgcHJvcHMuaXRlbXMubWFwKChpdGVtOiBJdGVtKSA9PiAoaXRlbSAhPT0gbnVsbCkgP1xyXG4gICAgICAgICAgICAoPExpc3RJdGVtIGtleT0geydrZXlfZHJvcF9kb3duXycgKyBpdGVtLmlkfSBvblNlbGVjdD0ge3Byb3BzLm9uU2VsZWN0fSBpdGVtPXsgaXRlbSB9IC8+KSA6XHJcbiAgICAgICAgICAgIG51bGwpIH1cclxuICAgIDwvdWw+XHJcbik7XHJcblxyXG5jb25zdCBEcm9wRG93biA9IChwcm9wczogRHJvcERvd25JdGVtcykgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGlkPXtwcm9wcy5pZCArICdfZHJvcGRvd24nfSBjbGFzc05hbWU9e2NsYXNzTmFtZXMocHJvcHMuY2xhc3NOYW1lLCB7ICdvcGVuJzogcHJvcHMuaXNPcGVuIH0sXHJcbiAgICAgICAgICAgIHsgJ2Nsb3NlJzogcHJvcHMuaXNPcGVuID09PSB1bmRlZmluZWQgPyBmYWxzZSA6ICFwcm9wcy5pc09wZW4gfSkgfSBvbkNsaWNrID0geyAoKSA9PiB7IHByb3BzLm9uQ2xpY2socHJvcHMuZHJvcERvd25UeXBlKTsgfSB9PlxyXG4gICAgICAgICAgICA8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknIGlkPXtwcm9wcy5pZCArICdfY29tcG9uZW50J30gY2xhc3NOYW1lPSdtZW51LWJ1dHRvbic+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBpZCA9IHtwcm9wcy5pZCArICdfaXRlbXMnfSA+IHsgcHJvcHMuc2VsZWN0ZWRJdGVtIH0gPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBtZW51LWFycm93LWljb24nPjwvc3Bhbj5cclxuICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICA8TGlzdCBpZD17cHJvcHMuaWR9IGtleT17J2tleV9kcm9wX2Rvd25faXRlbXMnfSAgb25TZWxlY3Q9IHtwcm9wcy5vblNlbGVjdH0gaXRlbXMgPSB7IHByb3BzLml0ZW1zIH0vPlxyXG4gICAgICAgIDwvZGl2Pik7XHJcbn07XHJcblxyXG5leHBvcnQgPSBEcm9wRG93bjtcclxuXHJcbi8qIHRzbGludDplbmFibGUgKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkcm9wZG93bi50c3giXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFrQkE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFHQTtBQUNBOztBQUFBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 466:
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./src/components/message/subject.tsx ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar Subject = /** @class */ (function (_super) {\r\n    __extends(Subject, _super);\r\n    /**\r\n     * constructor\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function Subject(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        /**\r\n         * seting focus back to subject on message close for fixing cursor and onscreen keyboard displaying issue in ipad\r\n         * Defect: 24608\r\n         */\r\n        _this.closeMessage = function () {\r\n            if (_this.props.hasFocus && htmlUtilities.isIPadDevice) {\r\n                _this.setFocusOnSubject();\r\n                (_this.refs[_this.props.refName]).blur();\r\n            }\r\n            // close message callback function called\r\n            if (_this.props.callback) {\r\n                _this.props.callback();\r\n            }\r\n        };\r\n        /**\r\n         * This method will call on subject onChange event\r\n         */\r\n        _this.onChange = function (event) {\r\n            _this.props.onChange(event.target.value);\r\n        };\r\n        /**\r\n         * Set Focus to the input field if necessary\r\n         */\r\n        _this.setFocusOnSubject = function () {\r\n            if (_this.props.hasFocus) {\r\n                (_this.refs[_this.props.refName]).blur();\r\n                (_this.refs[_this.props.refName]).focus();\r\n            }\r\n        };\r\n        _this.onAnimationEnd = _this.onAnimationEnd.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Event on animation end\r\n     * @param event\r\n     */\r\n    Subject.prototype.onAnimationEnd = function (event) {\r\n        // If any child element has triggered the transion-end ignore it\r\n        var element = event.srcElement || event.target;\r\n        if (element.id !== 'messaging-panel') {\r\n            return;\r\n        }\r\n        // setting scroll top - fix for ipad issue #49587\r\n        if (htmlUtilities.isIPadDevice) {\r\n            window.scrollTo(0, 0);\r\n            document.body.scrollTop = 0;\r\n        }\r\n        this.setFocusOnSubject();\r\n    };\r\n    /**\r\n     * Render method\r\n     */\r\n    Subject.prototype.render = function () {\r\n        return (React.createElement(\"div\", { className: this.props.outerClass },\r\n            React.createElement(\"input\", { type: 'text', ref: this.props.refName, id: this.props.id, \"aria-label\": 'Subject', placeholder: this.props.placeHolder, className: this.props.className, maxLength: this.props.maxLength, value: this.props.value, onInput: this.onChange })));\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    Subject.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.closeMessage);\r\n        // While creating a message from worklist and Inbox, set the focus to subject\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.setFocusOnSubject);\r\n        this.messagingPanel = document.getElementsByClassName('messaging-panel').item(0);\r\n        if (this.messagingPanel) {\r\n            // While creating a message inside the response, set the focus to subject\r\n            this.messagingPanel.addEventListener('transitionend', this.onAnimationEnd);\r\n        }\r\n        // While composing a message from Team management. Set focus to subject\r\n        this.setFocusOnSubject();\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    Subject.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_CLOSE_EVENT, this.closeMessage);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.setFocusOnSubject);\r\n        if (this.messagingPanel) {\r\n            this.messagingPanel.removeEventListener('transitionend', this.onAnimationEnd);\r\n        }\r\n    };\r\n    return Subject;\r\n}(pureRenderComponent));\r\nmodule.exports = Subject;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9zdWJqZWN0LnRzeD9hNzFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBSZWFjdERvbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xyXG5pbXBvcnQgcHVyZVJlbmRlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uL2Jhc2UvcHVyZXJlbmRlcmNvbXBvbmVudCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBtZXNzYWdlU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvbWVzc2FnZS9tZXNzYWdlc3RvcmUnKTtcclxuaW1wb3J0IGh0bWxVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi8uLi91dGlsaXR5L2dlbmVyaWMvaHRtbHV0aWxpdGllcycpO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgUHJvcHNCYXNlLCBMb2NhbGVTZWxlY3Rpb25CYXNlIHtcclxuICAgIG91dGVyQ2xhc3M6IHN0cmluZztcclxuICAgIHJlZk5hbWU6IHN0cmluZztcclxuICAgIGhhc0ZvY3VzOiBib29sZWFuO1xyXG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBwbGFjZUhvbGRlcj86IHN0cmluZztcclxuICAgIG1heExlbmd0aDogbnVtYmVyO1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIG9uQ2hhbmdlOiBGdW5jdGlvbjtcclxuICAgIGNhbGxiYWNrPzogRnVuY3Rpb247XHJcbiAgICBpc1Zpc2libGU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmNsYXNzIFN1YmplY3QgZXh0ZW5kcyBwdXJlUmVuZGVyQ29tcG9uZW50PFByb3BzLCBhbnk+IHtcclxuICAgIC8qIHByaXZhdGUgdmFyaWFibGUgdG8gbWFuYWdlIGV2ZW50IGxpc3RlbmVycyBmb3IgbWVzc2FnaW5nIHBhbmVsKi9cclxuICAgIHByaXZhdGUgbWVzc2FnaW5nUGFuZWw6IEVsZW1lbnQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBjb25zdHJ1Y3RvclxyXG4gICAgICogQHBhcmFtIHByb3BzXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzLCBzdGF0ZTogYW55KSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMsIHN0YXRlKTtcclxuICAgICAgICB0aGlzLm9uQW5pbWF0aW9uRW5kID0gdGhpcy5vbkFuaW1hdGlvbkVuZC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgb24gYW5pbWF0aW9uIGVuZFxyXG4gICAgICogQHBhcmFtIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25BbmltYXRpb25FbmQoZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICAgICAgLy8gSWYgYW55IGNoaWxkIGVsZW1lbnQgaGFzIHRyaWdnZXJlZCB0aGUgdHJhbnNpb24tZW5kIGlnbm9yZSBpdFxyXG4gICAgICAgIGxldCBlbGVtZW50OiBhbnkgPSBldmVudC5zcmNFbGVtZW50IHx8IGV2ZW50LnRhcmdldDtcclxuICAgICAgICBpZiAoZWxlbWVudC5pZCAhPT0gJ21lc3NhZ2luZy1wYW5lbCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gc2V0dGluZyBzY3JvbGwgdG9wIC0gZml4IGZvciBpcGFkIGlzc3VlICM0OTU4N1xyXG4gICAgICAgIGlmIChodG1sVXRpbGl0aWVzLmlzSVBhZERldmljZSkge1xyXG4gICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1c09uU3ViamVjdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5vdXRlckNsYXNzfT5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyByZWY9e3RoaXMucHJvcHMucmVmTmFtZX0gaWQ9e3RoaXMucHJvcHMuaWR9IGFyaWEtbGFiZWw9J1N1YmplY3QnXHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3RoaXMucHJvcHMucGxhY2VIb2xkZXJ9IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jbGFzc05hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoPXt0aGlzLnByb3BzLm1heExlbmd0aH0gdmFsdWU9e3RoaXMucHJvcHMudmFsdWV9IG9uSW5wdXQ9e3RoaXMub25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2Pik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgaW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgYWJvdXQgdG8gYmUgbW91bnRlZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgICAgbWVzc2FnZVN0b3JlLmluc3RhbmNlLmFkZExpc3RlbmVyKG1lc3NhZ2VTdG9yZS5NZXNzYWdlU3RvcmUuTUVTU0FHRV9DTE9TRV9FVkVOVCwgdGhpcy5jbG9zZU1lc3NhZ2UpO1xyXG5cclxuICAgICAgICAvLyBXaGlsZSBjcmVhdGluZyBhIG1lc3NhZ2UgZnJvbSB3b3JrbGlzdCBhbmQgSW5ib3gsIHNldCB0aGUgZm9jdXMgdG8gc3ViamVjdFxyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5hZGRMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLk1FU1NBR0VfT1BFTl9FVkVOVCwgdGhpcy5zZXRGb2N1c09uU3ViamVjdCk7XHJcbiAgICAgICAgdGhpcy5tZXNzYWdpbmdQYW5lbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21lc3NhZ2luZy1wYW5lbCcpLml0ZW0oMCk7XHJcbiAgICAgICAgaWYgKHRoaXMubWVzc2FnaW5nUGFuZWwpIHtcclxuICAgICAgICAgICAgLy8gV2hpbGUgY3JlYXRpbmcgYSBtZXNzYWdlIGluc2lkZSB0aGUgcmVzcG9uc2UsIHNldCB0aGUgZm9jdXMgdG8gc3ViamVjdFxyXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2luZ1BhbmVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCB0aGlzLm9uQW5pbWF0aW9uRW5kKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFdoaWxlIGNvbXBvc2luZyBhIG1lc3NhZ2UgZnJvbSBUZWFtIG1hbmFnZW1lbnQuIFNldCBmb2N1cyB0byBzdWJqZWN0XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1c09uU3ViamVjdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBmdW5jdGlvbiBnZXRzIGludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGFib3V0IHRvIGJlIG1vdW50ZWRcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgICAgIG1lc3NhZ2VTdG9yZS5pbnN0YW5jZS5yZW1vdmVMaXN0ZW5lcihtZXNzYWdlU3RvcmUuTWVzc2FnZVN0b3JlLk1FU1NBR0VfQ0xPU0VfRVZFTlQsIHRoaXMuY2xvc2VNZXNzYWdlKTtcclxuICAgICAgICBtZXNzYWdlU3RvcmUuaW5zdGFuY2UucmVtb3ZlTGlzdGVuZXIobWVzc2FnZVN0b3JlLk1lc3NhZ2VTdG9yZS5NRVNTQUdFX09QRU5fRVZFTlQsIHRoaXMuc2V0Rm9jdXNPblN1YmplY3QpO1xyXG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2luZ1BhbmVsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWVzc2FnaW5nUGFuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHRoaXMub25BbmltYXRpb25FbmQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHNldGluZyBmb2N1cyBiYWNrIHRvIHN1YmplY3Qgb24gbWVzc2FnZSBjbG9zZSBmb3IgZml4aW5nIGN1cnNvciBhbmQgb25zY3JlZW4ga2V5Ym9hcmQgZGlzcGxheWluZyBpc3N1ZSBpbiBpcGFkXHJcbiAgICAgKiBEZWZlY3Q6IDI0NjA4XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2xvc2VNZXNzYWdlID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmhhc0ZvY3VzICYmIGh0bWxVdGlsaXRpZXMuaXNJUGFkRGV2aWNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0Rm9jdXNPblN1YmplY3QoKTtcclxuICAgICAgICAgICAgKCh0aGlzLnJlZnNbdGhpcy5wcm9wcy5yZWZOYW1lXSkgYXMgSFRNTElucHV0RWxlbWVudCkuYmx1cigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gY2xvc2UgbWVzc2FnZSBjYWxsYmFjayBmdW5jdGlvbiBjYWxsZWRcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5jYWxsYmFjaykge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLmNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgY2FsbCBvbiBzdWJqZWN0IG9uQ2hhbmdlIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DaGFuZ2UgPSAoZXZlbnQ6IGFueSkgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgRm9jdXMgdG8gdGhlIGlucHV0IGZpZWxkIGlmIG5lY2Vzc2FyeVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNldEZvY3VzT25TdWJqZWN0ID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmhhc0ZvY3VzKSB7XHJcbiAgICAgICAgICAgICgodGhpcy5yZWZzW3RoaXMucHJvcHMucmVmTmFtZV0pIGFzIEhUTUxJbnB1dEVsZW1lbnQpLmJsdXIoKTtcclxuICAgICAgICAgICAgKCh0aGlzLnJlZnNbdGhpcy5wcm9wcy5yZWZOYW1lXSkgYXMgSFRNTElucHV0RWxlbWVudCkuZm9jdXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCA9IFN1YmplY3Q7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL3N1YmplY3QudHN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFFQTtBQUNBO0FBZUE7QUFBQTtBQUlBOzs7O0FBSUE7QUFDQTtBQUFBO0FBaUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlGQTs7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWtDQTtBQUFBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 489:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/message/messagerightpanel.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar messageTranslationHelper = __webpack_require__(/*! ../utility/message/messagetranslationhelper */ 459);\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar MessagePriorityDescription = __webpack_require__(/*! ./messageprioritydescription */ 508);\r\nvar MessageDetailsSenderInfo = __webpack_require__(/*! ./messagedetailssenderinfo */ 506);\r\nvar MessageDetailsSenderDate = __webpack_require__(/*! ./messagedetailssenderdate */ 505);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar MessageActionMenu = __webpack_require__(/*! ./messageactionmenu */ 504);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar TINYMCE = __webpack_require__(/*! react-tinymce */ 45);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/**\r\n * Message Description Area\r\n * @param props\r\n */\r\nvar messageRightPanel = function (props) {\r\n    if (props.message === undefined || props.messageDetails == null) {\r\n        // Message is not yet selected. No Need to handle here.\r\n        return null;\r\n    }\r\n    if (qigStore.instance.isQIGHidden(props.message.markSchemeGroupId)) {\r\n        // No message in the right panel.\r\n        return null;\r\n    }\r\n    /**\r\n     * Make the string as html.\r\n     * @param messageContent\r\n     */\r\n    function createMarkup() {\r\n        // Defect 29714 fix\r\n        // styles applied from web assessor will apply to all elements in mark scheme panel\r\n        // to avoid that, render the mesage content in an iframe element\r\n        // Defect 29926, 29976, 29977 fix : remove html scripts in message body\r\n        var iframe = document.createElement('iframe');\r\n        iframe.id = 'msg-iframe_ifr';\r\n        iframe.style.height = '100%';\r\n        iframe.style.width = '100%';\r\n        iframe.style.display = 'block';\r\n        return { __html: iframe.outerHTML };\r\n    }\r\n    var translatedMessageContents = messageTranslationHelper.getTranslatedContent(props.message);\r\n    /**\r\n     * This method will returns the message body\r\n     */\r\n    function getMessageBody() {\r\n        // If selected message is a system message then returns the corresponding language json file entry\r\n        if (props.message.examBodyMessageTypeId != null && props.message.examBodyMessageTypeId !== enums.SystemMessage.None) {\r\n            return translatedMessageContents.content;\r\n        }\r\n        else {\r\n            return props.messageDetails.body;\r\n        }\r\n    }\r\n    /**\r\n     * This method will return the message actions\r\n     */\r\n    function getMessageActions() {\r\n        var messageActions = new Array();\r\n        // Add Reply action if and only if the reply field is null or true\r\n        if (props.message.canReply == null || props.message.canReply) {\r\n            messageActions.push(enums.MessageAction.Reply);\r\n        }\r\n        // Add forward action if isForwardButtonHidden field is false\r\n        if (!props.isForwardButtonHidden) {\r\n            messageActions.push(enums.MessageAction.Forward);\r\n        }\r\n        messageActions.push(enums.MessageAction.Delete);\r\n        return messageActions;\r\n    }\r\n    /**\r\n     * This method will return the selected Tab for linked messages and Message page\r\n     */\r\n    function getSelectedTab() {\r\n        // This will handle linked message folder types\r\n        if (props.selectedTab === enums.MessageFolderType.None) {\r\n            return props.message.messageFolderType;\r\n        }\r\n        else {\r\n            return props.selectedTab;\r\n        }\r\n    }\r\n    var editorConfig = {\r\n        readonly: 1,\r\n        menubar: false,\r\n        statusbar: false,\r\n        toolbar: false,\r\n        fontsize_formats: false,\r\n        font_formats: false,\r\n        valid_children: '+body[style]',\r\n        invalid_elements: 'embed'\r\n    };\r\n    if (tinymce.get('msg-tinymce_ifr')) {\r\n        tinymce.get('msg-tinymce_ifr').destroy();\r\n    }\r\n    /**\r\n     * This method will call on tinyMCE content setting\r\n     * @param o\r\n     * @param e\r\n     */\r\n    function setContent(o, e) {\r\n        messageHelper.addIFrameForMessageDetails(o, e);\r\n    }\r\n    var tinymceElement = React.createElement(TINYMCE, { content: getMessageBody(), Id: 'msg-tinymce_ifr', config: editorConfig, onSetContent: setContent });\r\n    return (React.createElement(\"div\", { className: classNames({ 'column-right message-expanded': props.selectedTab !== enums.MessageFolderType.None }, { 'messaging-content': props.selectedTab === enums.MessageFolderType.None }) },\r\n        React.createElement(\"div\", { className: classNames('msg-exp-wrapper', { 'wrapper': props.selectedTab !== enums.MessageFolderType.None }) },\r\n            React.createElement(\"div\", { className: 'msg-exp-header' },\r\n                React.createElement(\"div\", { className: 'msg-subject-wrap clearfix' },\r\n                    React.createElement(\"div\", { className: 'msg-subject' },\r\n                        React.createElement(\"h4\", { className: 'msg-subject-title', id: 'msg-det-sender-info-subject' }, translatedMessageContents.subject)))),\r\n            React.createElement(\"div\", { className: 'msg-exp-metainfo' },\r\n                React.createElement(\"div\", { className: 'col-wrap responsive-medium' },\r\n                    React.createElement(MessageActionMenu, { id: 'message-action-menu', key: 'key-message-action-menu', items: messageHelper.getMessageMenuActionItems(getSelectedTab(), getMessageActions()), onClick: function (messageAction) {\r\n                            props.onMessageMenuActionClickCallback(messageAction);\r\n                        } }),\r\n                    React.createElement(MessageDetailsSenderDate, { id: 'msg-det-sender-info', key: 'msg-det-sender-info', displayDate: props.message.displayDate })),\r\n                React.createElement(MessageDetailsSenderInfo, { id: 'msg-det-sender-info', key: 'msg-det-sender-info', selectedLanguage: props.selectedLanguage, message: props.message, messageDetails: props.messageDetails, selectedTab: props.selectedTab, onDisplayIdClick: props.onDisplayIdClick }),\r\n                React.createElement(MessagePriorityDescription, { selectedLanguage: props.selectedLanguage, id: 'msg-det-priority-desc', key: 'msg-det-priority-desc', messagePriorityName: props.message.priorityName })),\r\n            React.createElement(\"div\", { style: { display: 'none' } }, tinymceElement),\r\n            React.createElement(\"div\", { className: 'msg-exp-body', dangerouslySetInnerHTML: createMarkup() }))));\r\n};\r\nmodule.exports = messageRightPanel;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 504:
/* no static exports found */
/* all exports used */
/*!******************************************************!*\
  !*** ./src/components/message/messageactionmenu.tsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\n/* tslint:disable:variable-name */\r\nvar MenuItem = function (props) {\r\n    return (React.createElement(\"li\", { className: props.item.name + '-msg' },\r\n        React.createElement(\"a\", { href: 'javascript:void(0)', onClick: function () { props.onClick(props.item.id); }, id: enums.getEnumString(enums.MessageAction, props.item.id).toLowerCase() + '-link' },\r\n            React.createElement(\"span\", { className: 'sprite-icon ' + props.item.icon },\r\n                \" \",\r\n                props.item.name),\r\n            \" \",\r\n            props.item.name,\r\n            \" \")));\r\n};\r\nvar MenuList = function (props) { return (React.createElement(\"ul\", { id: 'menu-action-items', className: 'msg-action-menu' }, props.items.map(function (item) { return React.createElement(MenuItem, { key: 'key-menu-lits-item-' + item.id, onClick: props.onClick, item: item }); }))); };\r\nvar MessageActionMenu = function (props) {\r\n    if (props.items === undefined) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"div\", { className: 'col-6-of-12 msg-actions text-right' },\r\n        React.createElement(MenuList, { key: 'key-menu-list', items: props.items, onClick: props.onClick })));\r\n};\r\nmodule.exports = MessageActionMenu;\r\n/* tslint:enable */ \r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlYWN0aW9ubWVudS50c3g/NTNjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmxldCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5cclxuaW50ZXJmYWNlIE1lc3NhZ2VBY3Rpb25NZW51SXRlbXMgZXh0ZW5kcyBQcm9wc0Jhc2Uge1xyXG4gICAgb25DbGljazogRnVuY3Rpb247XHJcbiAgICBpdGVtczogQXJyYXk8TWVudUl0ZW0+O1xyXG59XHJcblxyXG5pbnRlcmZhY2UgTWVudUl0ZW0ge1xyXG4gICAgaWQ6IGVudW1zLk1lc3NhZ2VBY3Rpb247XHJcbiAgICBpY29uOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnZhcmlhYmxlLW5hbWUgKi9cclxuXHJcbmNvbnN0IE1lbnVJdGVtID0gKHByb3BzOiB7IG9uQ2xpY2s6IEZ1bmN0aW9uLCBpdGVtOiBNZW51SXRlbSB9KSA9PlxyXG4gICAgKDxsaSBjbGFzc05hbWUgPSB7IHByb3BzLml0ZW0ubmFtZSArICctbXNnJyB9PlxyXG4gICAgICAgIDxhIGhyZWY9J2phdmFzY3JpcHQ6dm9pZCgwKScgb25DbGljayA9IHsoKSA9PiB7IHByb3BzLm9uQ2xpY2socHJvcHMuaXRlbS5pZCk7IH0gfVxyXG4gICAgICAgICAgICBpZCA9IHsgZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5NZXNzYWdlQWN0aW9uLCBwcm9wcy5pdGVtLmlkKS50b0xvd2VyQ2FzZSgpICsgJy1saW5rJyB9PlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydzcHJpdGUtaWNvbiAnICsgcHJvcHMuaXRlbS5pY29uIH0+IHsgcHJvcHMuaXRlbS5uYW1lIH1cclxuICAgICAgICAgICAgPC9zcGFuPiB7IHByb3BzLml0ZW0ubmFtZSB9IDwvYT5cclxuICAgIDwvbGk+KTtcclxuXHJcbmNvbnN0IE1lbnVMaXN0ID0gKHByb3BzOiB7IG9uQ2xpY2s6IEZ1bmN0aW9uLCBpdGVtczogQXJyYXk8TWVudUl0ZW0+IH0pID0+IChcclxuICAgIDx1bCBpZD0nbWVudS1hY3Rpb24taXRlbXMnIGNsYXNzTmFtZT0nbXNnLWFjdGlvbi1tZW51Jz5cclxuICAgICAgICB7IHByb3BzLml0ZW1zLm1hcCgoaXRlbTogTWVudUl0ZW0pID0+IDxNZW51SXRlbSBrZXk9IHsgJ2tleS1tZW51LWxpdHMtaXRlbS0nICsgaXRlbS5pZCB9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eyBwcm9wcy5vbkNsaWNrfSBpdGVtPSB7IGl0ZW0gfSAvPikgfVxyXG4gICAgPC91bD5cclxuKTtcclxuXHJcbmNvbnN0IE1lc3NhZ2VBY3Rpb25NZW51ID0gKHByb3BzOiBNZXNzYWdlQWN0aW9uTWVudUl0ZW1zKSA9PiB7XHJcbiAgICBpZiAocHJvcHMuaXRlbXMgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9J2NvbC02LW9mLTEyIG1zZy1hY3Rpb25zIHRleHQtcmlnaHQnPlxyXG4gICAgICAgIDxNZW51TGlzdCBrZXk9eydrZXktbWVudS1saXN0J30gaXRlbXMgPSB7cHJvcHMuaXRlbXN9IG9uQ2xpY2sgPSB7cHJvcHMub25DbGlja30vPlxyXG4gICAgPC9kaXY+KTtcclxufTtcclxuXHJcbmV4cG9ydCA9IE1lc3NhZ2VBY3Rpb25NZW51O1xyXG5cclxuLyogdHNsaW50OmVuYWJsZSAqL1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VhY3Rpb25tZW51LnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQWFBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBQUE7O0FBQ0E7QUFBQTtBQUpBO0FBT0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 505:
/* no static exports found */
/* all exports used */
/*!*************************************************************!*\
  !*** ./src/components/message/messagedetailssenderdate.tsx ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\n/**\r\n * Message Details Send Date section which contains date and time of send message.\r\n * @param props\r\n */\r\nvar messageDetailsSenderDate = function (props) {\r\n    // Get the date format\r\n    var displayDate = messageHelper.getDateToDisplay(props.displayDate);\r\n    return (React.createElement(\"div\", { className: 'col-6-of-12 msg-sender-info' },\r\n        React.createElement(\"div\", { className: 'msg-time small-text dim-text', id: props.id + '-date' }, displayDate)));\r\n};\r\nmodule.exports = messageDetailsSenderDate;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlZGV0YWlsc3NlbmRlcmRhdGUudHN4P2ZjMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG1lc3NhZ2VUcmFuc2xhdGlvbkhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdldHJhbnNsYXRpb25oZWxwZXInKTtcclxuaW1wb3J0IHFpZ1N0b3JlID0gcmVxdWlyZSgnLi4vLi4vc3RvcmVzL3FpZ3NlbGVjdG9yL3FpZ3N0b3JlJyk7XHJcblxyXG5pbnRlcmZhY2UgTWVzc2FnZURldGFpbHNTZW5kZXJEYXRlUHJvcHMgZXh0ZW5kcyBQcm9wc0Jhc2Uge1xyXG4gICAgZGlzcGxheURhdGU6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIE1lc3NhZ2UgRGV0YWlscyBTZW5kIERhdGUgc2VjdGlvbiB3aGljaCBjb250YWlucyBkYXRlIGFuZCB0aW1lIG9mIHNlbmQgbWVzc2FnZS5cclxuICogQHBhcmFtIHByb3BzXHJcbiAqL1xyXG5jb25zdCBtZXNzYWdlRGV0YWlsc1NlbmRlckRhdGU6IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxNZXNzYWdlRGV0YWlsc1NlbmRlckRhdGVQcm9wcz4gPSAocHJvcHM6IE1lc3NhZ2VEZXRhaWxzU2VuZGVyRGF0ZVByb3BzKSA9PiB7XHJcblxyXG4gICAgLy8gR2V0IHRoZSBkYXRlIGZvcm1hdFxyXG4gICAgbGV0IGRpc3BsYXlEYXRlID0gbWVzc2FnZUhlbHBlci5nZXREYXRlVG9EaXNwbGF5KHByb3BzLmRpc3BsYXlEYXRlKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2wtNi1vZi0xMiBtc2ctc2VuZGVyLWluZm8nPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXNnLXRpbWUgc21hbGwtdGV4dCBkaW0tdGV4dCcgaWQ9eyBwcm9wcy5pZCArICctZGF0ZSd9ID57ZGlzcGxheURhdGV9PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZURldGFpbHNTZW5kZXJEYXRlO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VkZXRhaWxzc2VuZGVyZGF0ZS50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUVBO0FBU0E7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUdBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 506:
/* no static exports found */
/* all exports used */
/*!*************************************************************!*\
  !*** ./src/components/message/messagedetailssenderinfo.tsx ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar MessageInfo = __webpack_require__(/*! ./messageinfo */ 507);\r\nvar stringHelper = __webpack_require__(/*! ../../utility/generic/stringhelper */ 254);\r\n/**\r\n * Message Details header section which contains time , sender name and associated response details\r\n * @param props\r\n */\r\nvar messageDetailsSenderInfo = function (props) {\r\n    /**\r\n     * Handles the Click Event of Display ID\r\n     */\r\n    var onDisplayIdClick = function () {\r\n        props.onDisplayIdClick();\r\n    };\r\n    /**\r\n     * Render Display Id as link Only If the examiner has access to view the script\r\n     */\r\n    var renderDisplayIDControl = function () {\r\n        if (props.selectedTab !== enums.MessageFolderType.None && props.selectedTab !== enums.MessageFolderType.Deleted &&\r\n            props.messageDetails.hasPermissionToDisplayId && props.messageDetails.hasPermissionInStdSetupWorklist) {\r\n            return React.createElement(\"a\", { onClick: onDisplayIdClick, id: props.id + '-response-id' },\r\n                messageHelper.getMarkingModeText(props.messageDetails.markingModeId, props.messageDetails.isElectronicStandardisationTeamMember),\r\n                getDisplayId());\r\n        }\r\n        else {\r\n            var displayIdNoLinkTooltip = stringHelper.format(localeStore.instance.TranslateText('assessor3.message.display-id-no-link-tooltip'), [String(String.fromCharCode(179))]);\r\n            return React.createElement(\"span\", { title: displayIdNoLinkTooltip, id: props.id + '-response-id-read-only' },\r\n                messageHelper.getMarkingModeText(props.messageDetails.markingModeId, props.messageDetails.isElectronicStandardisationTeamMember),\r\n                getDisplayId());\r\n        }\r\n    };\r\n    /**\r\n     * Show the displayId label only if there are any associated response with the message\r\n     */\r\n    var renderDisplayIDArea = function () {\r\n        var displayIdText = localeStore.instance.TranslateText('messaging.message-lists.message-detail.associated-response-id') + ' ';\r\n        if (props.messageDetails.displayId != null) {\r\n            return (React.createElement(\"div\", { className: 'msg-response-id', id: props.id + '-response-data' },\r\n                React.createElement(\"span\", { className: 'dim-text', id: props.id + '-response-text' }, displayIdText),\r\n                renderDisplayIDControl()));\r\n        }\r\n    };\r\n    /**\r\n     * to render message recipients list\r\n     */\r\n    var renderMessageRecipientList = function () {\r\n        if (props.message && props.message != null) {\r\n            return (React.createElement(MessageInfo, { id: 'msg-to', key: 'msg-to', selectedLanguage: props.selectedLanguage, message: props.message }));\r\n        }\r\n    };\r\n    return (React.createElement(\"div\", { className: 'msg-exp-metainfo-row2' },\r\n        renderMessageRecipientList(),\r\n        renderDisplayIDArea()));\r\n    /**\r\n     * This method will returns the displayId for system messages with prefix 6\r\n     */\r\n    function getDisplayId() {\r\n        // If selected message is a system message then returns displayId with prefix 6\r\n        if (props.message.examBodyMessageTypeId != null && props.message.examBodyMessageTypeId !== enums.SystemMessage.None) {\r\n            return '6' + props.messageDetails.displayId;\r\n        }\r\n        else {\r\n            return props.messageDetails.displayId;\r\n        }\r\n    }\r\n};\r\nmodule.exports = messageDetailsSenderInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlZGV0YWlsc3NlbmRlcmluZm8udHN4P2QwZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuaW1wb3J0IGVudW1zID0gcmVxdWlyZSgnLi4vdXRpbGl0eS9lbnVtcycpO1xyXG5pbXBvcnQgbWVzc2FnZUhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdlaGVscGVyJyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuaW1wb3J0IG1lc3NhZ2VUcmFuc2xhdGlvbkhlbHBlciA9IHJlcXVpcmUoJy4uL3V0aWxpdHkvbWVzc2FnZS9tZXNzYWdldHJhbnNsYXRpb25oZWxwZXInKTtcclxuaW1wb3J0IE1lc3NhZ2VJbmZvID0gcmVxdWlyZSgnLi9tZXNzYWdlaW5mbycpO1xyXG5pbXBvcnQgcWlnU3RvcmUgPSByZXF1aXJlKCcuLi8uLi9zdG9yZXMvcWlnc2VsZWN0b3IvcWlnc3RvcmUnKTtcclxuaW1wb3J0IHN0cmluZ0hlbHBlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxpdHkvZ2VuZXJpYy9zdHJpbmdoZWxwZXInKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlRGV0YWlsc1NlbmRlckluZm9Qcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICBtZXNzYWdlOiBNZXNzYWdlO1xyXG4gICAgbWVzc2FnZURldGFpbHM6IE1lc3NhZ2VEZXRhaWxzO1xyXG4gICAgb25EaXNwbGF5SWRDbGljaz86IEZ1bmN0aW9uO1xyXG4gICAgc2VsZWN0ZWRUYWI6IGVudW1zLk1lc3NhZ2VGb2xkZXJUeXBlO1xyXG59XHJcblxyXG4vKipcclxuICogTWVzc2FnZSBEZXRhaWxzIGhlYWRlciBzZWN0aW9uIHdoaWNoIGNvbnRhaW5zIHRpbWUgLCBzZW5kZXIgbmFtZSBhbmQgYXNzb2NpYXRlZCByZXNwb25zZSBkZXRhaWxzXHJcbiAqIEBwYXJhbSBwcm9wc1xyXG4gKi9cclxuY29uc3QgbWVzc2FnZURldGFpbHNTZW5kZXJJbmZvOiBSZWFjdC5TdGF0ZWxlc3NDb21wb25lbnQ8TWVzc2FnZURldGFpbHNTZW5kZXJJbmZvUHJvcHM+ID0gKHByb3BzOiBNZXNzYWdlRGV0YWlsc1NlbmRlckluZm9Qcm9wcykgPT4ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIHRoZSBDbGljayBFdmVudCBvZiBEaXNwbGF5IElEXHJcbiAgICAgKi9cclxuICAgIGNvbnN0IG9uRGlzcGxheUlkQ2xpY2sgPSAoKSA9PiB7XHJcblxyXG4gICAgICAgIHByb3BzLm9uRGlzcGxheUlkQ2xpY2soKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW5kZXIgRGlzcGxheSBJZCBhcyBsaW5rIE9ubHkgSWYgdGhlIGV4YW1pbmVyIGhhcyBhY2Nlc3MgdG8gdmlldyB0aGUgc2NyaXB0XHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlckRpc3BsYXlJRENvbnRyb2wgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHByb3BzLnNlbGVjdGVkVGFiICE9PSBlbnVtcy5NZXNzYWdlRm9sZGVyVHlwZS5Ob25lICYmIHByb3BzLnNlbGVjdGVkVGFiICE9PSBlbnVtcy5NZXNzYWdlRm9sZGVyVHlwZS5EZWxldGVkICYmXHJcbiAgICAgICAgICAgIHByb3BzLm1lc3NhZ2VEZXRhaWxzLmhhc1Blcm1pc3Npb25Ub0Rpc3BsYXlJZCAmJiBwcm9wcy5tZXNzYWdlRGV0YWlscy5oYXNQZXJtaXNzaW9uSW5TdGRTZXR1cFdvcmtsaXN0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiA8YSBvbkNsaWNrPXtvbkRpc3BsYXlJZENsaWNrfSBpZD17cHJvcHMuaWQgKyAnLXJlc3BvbnNlLWlkJ30+XHJcbiAgICAgICAgICAgICAgICB7bWVzc2FnZUhlbHBlci5nZXRNYXJraW5nTW9kZVRleHQocHJvcHMubWVzc2FnZURldGFpbHMubWFya2luZ01vZGVJZCxcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5tZXNzYWdlRGV0YWlscy5pc0VsZWN0cm9uaWNTdGFuZGFyZGlzYXRpb25UZWFtTWVtYmVyKX1cclxuICAgICAgICAgICAgICAgIHtnZXREaXNwbGF5SWQoKX08L2E+O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxldCBkaXNwbGF5SWROb0xpbmtUb29sdGlwID0gc3RyaW5nSGVscGVyLmZvcm1hdChcclxuICAgICAgICAgICAgICAgIGxvY2FsZVN0b3JlLmluc3RhbmNlLlRyYW5zbGF0ZVRleHQoJ2Fzc2Vzc29yMy5tZXNzYWdlLmRpc3BsYXktaWQtbm8tbGluay10b29sdGlwJyksXHJcbiAgICAgICAgICAgICAgICBbU3RyaW5nKFN0cmluZy5mcm9tQ2hhckNvZGUoMTc5KSldKTtcclxuICAgICAgICAgICAgcmV0dXJuIDxzcGFuIHRpdGxlPXtkaXNwbGF5SWROb0xpbmtUb29sdGlwfVxyXG4gICAgICAgICAgICAgICAgaWQ9e3Byb3BzLmlkICsgJy1yZXNwb25zZS1pZC1yZWFkLW9ubHknfT5cclxuICAgICAgICAgICAgICAgIHttZXNzYWdlSGVscGVyLmdldE1hcmtpbmdNb2RlVGV4dChwcm9wcy5tZXNzYWdlRGV0YWlscy5tYXJraW5nTW9kZUlkLFxyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLm1lc3NhZ2VEZXRhaWxzLmlzRWxlY3Ryb25pY1N0YW5kYXJkaXNhdGlvblRlYW1NZW1iZXIpfVxyXG4gICAgICAgICAgICAgICAge2dldERpc3BsYXlJZCgpfTwvc3Bhbj47XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNob3cgdGhlIGRpc3BsYXlJZCBsYWJlbCBvbmx5IGlmIHRoZXJlIGFyZSBhbnkgYXNzb2NpYXRlZCByZXNwb25zZSB3aXRoIHRoZSBtZXNzYWdlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlckRpc3BsYXlJREFyZWEgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGRpc3BsYXlJZFRleHQgPSBsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KCdtZXNzYWdpbmcubWVzc2FnZS1saXN0cy5tZXNzYWdlLWRldGFpbC5hc3NvY2lhdGVkLXJlc3BvbnNlLWlkJykgKyAnICc7XHJcbiAgICAgICAgaWYgKHByb3BzLm1lc3NhZ2VEZXRhaWxzLmRpc3BsYXlJZCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXNnLXJlc3BvbnNlLWlkJyBpZD17IHByb3BzLmlkICsgJy1yZXNwb25zZS1kYXRhJ30+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkaW0tdGV4dCcgaWQ9eyBwcm9wcy5pZCArICctcmVzcG9uc2UtdGV4dCd9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7ZGlzcGxheUlkVGV4dH1cclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAge3JlbmRlckRpc3BsYXlJRENvbnRyb2woKSB9XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogdG8gcmVuZGVyIG1lc3NhZ2UgcmVjaXBpZW50cyBsaXN0XHJcbiAgICAgKi9cclxuICAgIGNvbnN0IHJlbmRlck1lc3NhZ2VSZWNpcGllbnRMaXN0ID0gKCkgPT4ge1xyXG4gICAgICAgIGlmIChwcm9wcy5tZXNzYWdlICYmIHByb3BzLm1lc3NhZ2UgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gKDxNZXNzYWdlSW5mb1xyXG4gICAgICAgICAgICAgICAgaWQ9J21zZy10bydcclxuICAgICAgICAgICAgICAgIGtleSA9J21zZy10bydcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U9e3Byb3BzLnNlbGVjdGVkTGFuZ3VhZ2V9XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0ge3Byb3BzLm1lc3NhZ2V9Lz5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J21zZy1leHAtbWV0YWluZm8tcm93Mic+XHJcbiAgICAgICAgICAgIHtyZW5kZXJNZXNzYWdlUmVjaXBpZW50TGlzdCgpIH1cclxuICAgICAgICAgICAge3JlbmRlckRpc3BsYXlJREFyZWEoKSB9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZXRob2Qgd2lsbCByZXR1cm5zIHRoZSBkaXNwbGF5SWQgZm9yIHN5c3RlbSBtZXNzYWdlcyB3aXRoIHByZWZpeCA2XHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGdldERpc3BsYXlJZCgpIHtcclxuICAgICAgICAvLyBJZiBzZWxlY3RlZCBtZXNzYWdlIGlzIGEgc3lzdGVtIG1lc3NhZ2UgdGhlbiByZXR1cm5zIGRpc3BsYXlJZCB3aXRoIHByZWZpeCA2XHJcbiAgICAgICAgaWYgKHByb3BzLm1lc3NhZ2UuZXhhbUJvZHlNZXNzYWdlVHlwZUlkICE9IG51bGwgJiYgcHJvcHMubWVzc2FnZS5leGFtQm9keU1lc3NhZ2VUeXBlSWQgIT09IGVudW1zLlN5c3RlbU1lc3NhZ2UuTm9uZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJzYnICsgcHJvcHMubWVzc2FnZURldGFpbHMuZGlzcGxheUlkO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5tZXNzYWdlRGV0YWlscy5kaXNwbGF5SWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZURldGFpbHNTZW5kZXJJbmZvO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2VkZXRhaWxzc2VuZGVyaW5mby50c3giXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFTQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFHQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 507:
/* no static exports found */
/* all exports used */
/*!************************************************!*\
  !*** ./src/components/message/messageinfo.tsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar pureRenderComponent = __webpack_require__(/*! ../base/purerendercomponent */ 227);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar RecipientListToggle = __webpack_require__(/*! ./recipientlisttoggle */ 509);\r\nvar messageTranslationHelper = __webpack_require__(/*! ../utility/message/messagetranslationhelper */ 459);\r\nvar htmlUtilities = __webpack_require__(/*! ../../utility/generic/htmlutilities */ 243);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar constants = __webpack_require__(/*! ../utility/constants */ 241);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\n/**\r\n * Message info section contain message type, recipients list and remaining recipients count.\r\n * @param props\r\n */\r\nvar MessageInfo = /** @class */ (function (_super) {\r\n    __extends(MessageInfo, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function MessageInfo(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        // holds the remaining RecipientCount\r\n        _this.remainingRecipientCount = 0;\r\n        /**\r\n         * Handle toggle event of recipient list.\r\n         *\r\n         */\r\n        _this.onRecipientListToggle = function () {\r\n            _this.setState({\r\n                isExpanded: !_this.state.isExpanded,\r\n                isClassUpdated: _this.state.isClassUpdated\r\n            });\r\n        };\r\n        /**\r\n         * Calculate recipients count.\r\n         */\r\n        _this.calculateRecipientCount = function (event) {\r\n            if (event && (event.type === 'transitionend' || event.type === 'webkitTransitionEnd') && event.propertyName !== 'width') {\r\n                return;\r\n            }\r\n            if (_this.props.message &&\r\n                _this.props.message.messageFolderType === enums.MessageFolderType.Sent) {\r\n                var lastAddressItem = htmlUtilities.getElementsByClassName('first-row-last')[0];\r\n                if (lastAddressItem) {\r\n                    if (lastAddressItem.classList.contains('first-row-last')) {\r\n                        lastAddressItem.classList.remove('first-row-last');\r\n                    }\r\n                }\r\n                // If message send for an entire team then set remaining recipient count as 0.\r\n                if (_this.props.message.toTeam) {\r\n                    _this.remainingRecipientCount = 0;\r\n                    _this.setState({\r\n                        isExpanded: false,\r\n                        isClassUpdated: !_this.state.isClassUpdated\r\n                    });\r\n                }\r\n                else {\r\n                    var remainingRecipientCountUpdated = 0;\r\n                    var wrapperWidthParent = (htmlUtilities.getElementsByClassName('msg-to')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to')[0].clientWidth : 0;\r\n                    var wrapperWidthTo = (htmlUtilities.getElementsByClassName('msg-to-label dim-text')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to-label dim-text')[0].clientWidth : 0;\r\n                    var wrapperWidthMore = (htmlUtilities.getElementsByClassName('msg-to-expand-toggler')[0]) ?\r\n                        htmlUtilities.getElementsByClassName('msg-to-expand-toggler')[0].clientWidth : constants.RECIPIENT_MORE_LINK;\r\n                    var totalWidth = wrapperWidthParent - (wrapperWidthTo + wrapperWidthMore);\r\n                    _this.recipientListSpan = htmlUtilities.getElementsByClassName('msg-address');\r\n                    var spanwidth = 0;\r\n                    remainingRecipientCountUpdated = _this.remainingRecipientCount;\r\n                    for (var i = 0; i < _this.recipientListSpan.length; i++) {\r\n                        spanwidth += _this.recipientListSpan[i].clientWidth;\r\n                        if (i === _this.recipientListSpan.length - 1) {\r\n                            totalWidth = totalWidth + wrapperWidthMore;\r\n                        }\r\n                        if (spanwidth < totalWidth) {\r\n                            _this.remainingRecipientCount = 0;\r\n                        }\r\n                        else {\r\n                            if (i !== 0) {\r\n                                _this.recipientListSpan[i - 1].className += ' first-row-last';\r\n                            }\r\n                            if (_this.recipientListSpan.length === 1 && spanwidth === totalWidth) {\r\n                                _this.remainingRecipientCount = 0;\r\n                            }\r\n                            else {\r\n                                _this.remainingRecipientCount = _this.recipientListSpan.length - i;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (remainingRecipientCountUpdated !== _this.remainingRecipientCount) {\r\n                        _this.setState({\r\n                            isExpanded: _this.state.isExpanded,\r\n                            isClassUpdated: !_this.state.isClassUpdated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        _this.state = {\r\n            isExpanded: false,\r\n            isClassUpdated: false\r\n        };\r\n        _this.examiners = new Array();\r\n        _this.onRecipientListToggle = _this.onRecipientListToggle.bind(_this);\r\n        _this.calculateRecipientCount = _this.calculateRecipientCount.bind(_this);\r\n        _this.appendExaminerWithSemiColon();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    MessageInfo.prototype.render = function () {\r\n        var toRender;\r\n        if (this.props.message.messageFolderType === enums.MessageFolderType.Inbox) {\r\n            toRender = (React.createElement(\"div\", { className: 'msg-sender' },\r\n                React.createElement(\"div\", { className: 'dim-text msg-from-label', id: 'msg_from_label' }, localeStore.instance.TranslateText('messaging.message-lists.message-detail.' +\r\n                    enums.getEnumString(enums.MessageFolderType, this.props.message.messageFolderType).toLowerCase())),\r\n                React.createElement(\"div\", { className: 'msg-from-address', id: 'msg_from_address' }, messageTranslationHelper.getExaminerName(this.props.message))));\r\n        }\r\n        else {\r\n            this.appendExaminerWithSemiColon();\r\n            toRender = (React.createElement(\"div\", { className: classNames('msg-to', this.state.isExpanded ? 'expanded' : '') },\r\n                React.createElement(\"div\", { className: 'msg-to-label dim-text' }, localeStore.instance.TranslateText('messaging.message-lists.message-detail.' +\r\n                    enums.getEnumString(enums.MessageFolderType, this.props.message.messageFolderType).toLowerCase())),\r\n                React.createElement(\"div\", { className: 'msg-to-address', id: this.props.id }, !this.props.message.toTeam ?\r\n                    this.examiners.map(function (item) {\r\n                        return React.createElement(\"span\", { className: 'msg-address' }, item);\r\n                    }) :\r\n                    React.createElement(\"span\", { className: 'msg-address', id: 'msg-address-entire-team' }, localeStore.instance.TranslateText('messaging.compose-message.recipient-selector.entire-team'))),\r\n                React.createElement(RecipientListToggle, { id: 'msg-to-expand-toggler', key: 'msg-to-expand-toggler', selectedLanguage: this.props.selectedLanguage, remainingRecipientCount: this.remainingRecipientCount, onRecipientListToggleClick: this.onRecipientListToggle })));\r\n        }\r\n        return (toRender);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    MessageInfo.prototype.componentDidMount = function () {\r\n        window.addEventListener('resize', this.calculateRecipientCount);\r\n        var messagePanel = document.getElementById('messaging-panel');\r\n        if (messagePanel) {\r\n            messagePanel.addEventListener('transitionend', this.calculateRecipientCount);\r\n            messagePanel.addEventListener('webkitTransitionEnd', this.calculateRecipientCount);\r\n        }\r\n        this.calculateRecipientCount();\r\n        messageStore.instance.addListener(messageStore.MessageStore.CALCULATE_RECIPIENT_COUNT_EVENT, this.calculateRecipientCount);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be un mounted\r\n     */\r\n    MessageInfo.prototype.componentWillUnMount = function () {\r\n        window.removeEventListener('resize', this.calculateRecipientCount);\r\n        var messagePanel = document.getElementById('messaging-panel');\r\n        if (messagePanel) {\r\n            messagePanel.removeEventListener('transitionend', this.calculateRecipientCount);\r\n            messagePanel.removeEventListener('webkitTransitionEnd', this.calculateRecipientCount);\r\n        }\r\n        messageStore.instance.removeListener(messageStore.MessageStore.CALCULATE_RECIPIENT_COUNT_EVENT, this.calculateRecipientCount);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component receives props\r\n     */\r\n    MessageInfo.prototype.componentWillReceiveProps = function (nextProps) {\r\n        if (this.props.message !== nextProps.message) {\r\n            this.remainingRecipientCount = 0;\r\n        }\r\n    };\r\n    /**\r\n     * append examiners with semicolon\r\n     */\r\n    MessageInfo.prototype.appendExaminerWithSemiColon = function (props) {\r\n        var _this = this;\r\n        var index = 0;\r\n        this.examiners = new Array();\r\n        var _props = props ? props : this.props;\r\n        if (_props.message && _props.message.toExaminerDetails != null) {\r\n            _props.message.toExaminerDetails.map(function (item) {\r\n                _this.examiners.push(item.fullName + ';');\r\n            });\r\n            index = this.examiners.length - 1;\r\n            // replacing semicolon for last item\r\n            if (index >= 0) {\r\n                this.examiners[index] = this.examiners[index].toString().replace(';', '');\r\n            }\r\n        }\r\n        else {\r\n            this.examiners.push(_props.message.examinerDetails.fullName);\r\n        }\r\n    };\r\n    return MessageInfo;\r\n}(pureRenderComponent));\r\nmodule.exports = MessageInfo;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 508:
/* no static exports found */
/* all exports used */
/*!***************************************************************!*\
  !*** ./src/components/message/messageprioritydescription.tsx ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar localestore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * Priority Description for details\r\n * @param props\r\n */\r\nvar messagePriorityDescription = function (props) {\r\n    var messagePriorityName = props.messagePriorityName.toLowerCase();\r\n    if (messagePriorityName !== enums.getEnumString(enums.MessagePriority, enums.MessagePriority.Standard).toLocaleLowerCase()) {\r\n        return (React.createElement(\"div\", { className: 'msg-alert grey msg-important', id: props.id }, localestore.instance.TranslateText('messaging.message-lists.message-detail.high-' + messagePriorityName + '-banner')));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = messagePriorityDescription;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlcHJpb3JpdHlkZXNjcmlwdGlvbi50c3g/Zjc2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5pbXBvcnQgZW51bXMgPSByZXF1aXJlKCcuLi91dGlsaXR5L2VudW1zJyk7XHJcbmltcG9ydCBsb2NhbGVzdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlUHJpb3JpdHlEZXNjcmlwdGlvblByb3BzIGV4dGVuZHMgUHJvcHNCYXNlLCBMb2NhbGVTZWxlY3Rpb25CYXNlIHtcclxuICAgIG1lc3NhZ2VQcmlvcml0eU5hbWU6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIFByaW9yaXR5IERlc2NyaXB0aW9uIGZvciBkZXRhaWxzXHJcbiAqIEBwYXJhbSBwcm9wc1xyXG4gKi9cclxuY29uc3QgbWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb246IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxNZXNzYWdlUHJpb3JpdHlEZXNjcmlwdGlvblByb3BzPiA9IChwcm9wczogTWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb25Qcm9wcykgPT4ge1xyXG4gICAgbGV0IG1lc3NhZ2VQcmlvcml0eU5hbWUgPSBwcm9wcy5tZXNzYWdlUHJpb3JpdHlOYW1lLnRvTG93ZXJDYXNlKCk7XHJcbiAgICBpZiAobWVzc2FnZVByaW9yaXR5TmFtZSAhPT0gZW51bXMuZ2V0RW51bVN0cmluZyhlbnVtcy5NZXNzYWdlUHJpb3JpdHksIGVudW1zLk1lc3NhZ2VQcmlvcml0eS5TdGFuZGFyZCkudG9Mb2NhbGVMb3dlckNhc2UoKSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtc2ctYWxlcnQgZ3JleSBtc2ctaW1wb3J0YW50JyBpZCA9IHtwcm9wcy5pZH0+XHJcbiAgICAgICAgICAgICAgICB7bG9jYWxlc3RvcmUuaW5zdGFuY2UuVHJhbnNsYXRlVGV4dCgnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMubWVzc2FnZS1kZXRhaWwuaGlnaC0nICsgbWVzc2FnZVByaW9yaXR5TmFtZSArICctYmFubmVyJyl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gbWVzc2FnZVByaW9yaXR5RGVzY3JpcHRpb247XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vc291cmNlLW1hcC1sb2FkZXIhLi9zcmMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2Vwcmlvcml0eWRlc2NyaXB0aW9uLnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQU1BOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 509:
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./src/components/message/recipientlisttoggle.tsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\n/**\r\n * RecipientListToggle contain the collpase or expan view with remaining count.\r\n * @param props\r\n */\r\nvar recipientListToggle = function (props) {\r\n    if (props.remainingRecipientCount > 0) {\r\n        return (React.createElement(\"a\", { className: 'msg-to-expand-toggler', id: props.id, onClick: function () { props.onRecipientListToggleClick(); } },\r\n            React.createElement(\"span\", { className: 'sender-count dim-text' },\r\n                \"+\",\r\n                props.remainingRecipientCount,\r\n                \" \",\r\n                localeStore.instance.TranslateText('messaging.message-lists.message-detail.more-recipients')),\r\n            React.createElement(\"span\", { className: 'expand-toggle-icon' },\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' }),\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' }))));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nmodule.exports = recipientListToggle;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9yZWNpcGllbnRsaXN0dG9nZ2xlLnRzeD8wNzI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbmltcG9ydCBsb2NhbGVTdG9yZSA9IHJlcXVpcmUoJy4uLy4uL3N0b3Jlcy9sb2NhbGUvbG9jYWxlc3RvcmUnKTtcclxuXHJcbmludGVyZmFjZSBUb2dnbGVQcm9wcyBleHRlbmRzIExvY2FsZVNlbGVjdGlvbkJhc2UsIFByb3BzQmFzZSB7XHJcbiAgICByZW1haW5pbmdSZWNpcGllbnRDb3VudDogbnVtYmVyO1xyXG4gICAgb25SZWNpcGllbnRMaXN0VG9nZ2xlQ2xpY2s6IEZ1bmN0aW9uO1xyXG59XHJcblxyXG4vKipcclxuICogUmVjaXBpZW50TGlzdFRvZ2dsZSBjb250YWluIHRoZSBjb2xscGFzZSBvciBleHBhbiB2aWV3IHdpdGggcmVtYWluaW5nIGNvdW50LlxyXG4gKiBAcGFyYW0gcHJvcHNcclxuICovXHJcbmNvbnN0IHJlY2lwaWVudExpc3RUb2dnbGU6IFJlYWN0LlN0YXRlbGVzc0NvbXBvbmVudDxUb2dnbGVQcm9wcz4gPSAocHJvcHM6IFRvZ2dsZVByb3BzKSA9PiB7XHJcbiAgICBpZiAocHJvcHMucmVtYWluaW5nUmVjaXBpZW50Q291bnQgPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSdtc2ctdG8tZXhwYW5kLXRvZ2dsZXInIGlkPXtwcm9wcy5pZH0gb25DbGljaz17KCkgPT4geyBwcm9wcy5vblJlY2lwaWVudExpc3RUb2dnbGVDbGljaygpOyB9fT5cclxuICAgICAgICAgICAgICAgIDxzcGFuXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdzZW5kZXItY291bnQgZGltLXRleHQnPlxyXG4gICAgICAgICAgICAgICAgICAgICt7cHJvcHMucmVtYWluaW5nUmVjaXBpZW50Q291bnR9IHtsb2NhbGVTdG9yZS5pbnN0YW5jZS5UcmFuc2xhdGVUZXh0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnbWVzc2FnaW5nLm1lc3NhZ2UtbGlzdHMubWVzc2FnZS1kZXRhaWwubW9yZS1yZWNpcGllbnRzJyl9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdleHBhbmQtdG9nZ2xlLWljb24nPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nc3ByaXRlLWljb24gbWVudS1hcnJvdy1pY29uJz48L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdzcHJpdGUtaWNvbiBtZW51LWFycm93LWljb24nPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0ID0gcmVjaXBpZW50TGlzdFRvZ2dsZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L3NvdXJjZS1tYXAtbG9hZGVyIS4vc3JjL2NvbXBvbmVudHMvbWVzc2FnZS9yZWNpcGllbnRsaXN0dG9nZ2xlLnRzeCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFPQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 520:
/* no static exports found */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./src/components/utility/messagetranslationhandlerconstants.ts ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar MessageTranslationHandlerConstants;\r\n(function (MessageTranslationHandlerConstants) {\r\n    // Keyword for the targets dictionary\r\n    MessageTranslationHandlerConstants.TARGETS_DICTIONARY = 'Targets';\r\n    // Keyword for the remark targets dictionary\r\n    MessageTranslationHandlerConstants.REMARKTARGETS_DICTIONARY = 'RemarkTargets';\r\n    // Keyword for the Marker name\r\n    MessageTranslationHandlerConstants.MARKER = 'marker';\r\n    // Keyword for the old approval status\r\n    MessageTranslationHandlerConstants.OLD_STATUS = 'oldStatus';\r\n    // Keyword for the new approval status\r\n    MessageTranslationHandlerConstants.NEW_STATUS = 'newStatus';\r\n    // Keyword for the old grace period\r\n    MessageTranslationHandlerConstants.OLD_GRACE_PERIOD = 'OldGracePeriod';\r\n    // Keyword for the new grace period\r\n    MessageTranslationHandlerConstants.NEW_GRACE_PERIOD = 'NewGracePeriod';\r\n    // Keyword for the display id\r\n    MessageTranslationHandlerConstants.DISPLAY_ID = 'DisplayID';\r\n    // Keyword for the worklist type\r\n    MessageTranslationHandlerConstants.WORKLIST_TYPE = 'WorklistType';\r\n    // Keyword for the execption type\r\n    MessageTranslationHandlerConstants.EXCEPTION_TYPE = 'ExceptionType';\r\n    // Keyword for the senior examiner name\r\n    MessageTranslationHandlerConstants.SENIOR_EXAMINER_NAME = 'SeniorExaminerName';\r\n})(MessageTranslationHandlerConstants || (MessageTranslationHandlerConstants = {}));\r\nmodule.exports = MessageTranslationHandlerConstants;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdXRpbGl0eS9tZXNzYWdldHJhbnNsYXRpb25oYW5kbGVyY29uc3RhbnRzLnRzP2U3OWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIE1lc3NhZ2VUcmFuc2xhdGlvbkhhbmRsZXJDb25zdGFudHMge1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIHRhcmdldHMgZGljdGlvbmFyeVxyXG4gICAgZXhwb3J0IGNvbnN0IFRBUkdFVFNfRElDVElPTkFSWSA9ICdUYXJnZXRzJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSByZW1hcmsgdGFyZ2V0cyBkaWN0aW9uYXJ5XHJcbiAgICBleHBvcnQgY29uc3QgUkVNQVJLVEFSR0VUU19ESUNUSU9OQVJZID0gJ1JlbWFya1RhcmdldHMnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIE1hcmtlciBuYW1lXHJcbiAgICBleHBvcnQgY29uc3QgTUFSS0VSID0gJ21hcmtlcic7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgb2xkIGFwcHJvdmFsIHN0YXR1c1xyXG4gICAgZXhwb3J0IGNvbnN0IE9MRF9TVEFUVVMgPSAnb2xkU3RhdHVzJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSBuZXcgYXBwcm92YWwgc3RhdHVzXHJcbiAgICBleHBvcnQgY29uc3QgTkVXX1NUQVRVUyA9ICduZXdTdGF0dXMnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIG9sZCBncmFjZSBwZXJpb2RcclxuICAgIGV4cG9ydCBjb25zdCBPTERfR1JBQ0VfUEVSSU9EID0gJ09sZEdyYWNlUGVyaW9kJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSBuZXcgZ3JhY2UgcGVyaW9kXHJcbiAgICBleHBvcnQgY29uc3QgTkVXX0dSQUNFX1BFUklPRCA9ICdOZXdHcmFjZVBlcmlvZCc7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgZGlzcGxheSBpZFxyXG4gICAgZXhwb3J0IGNvbnN0IERJU1BMQVlfSUQgPSAnRGlzcGxheUlEJztcclxuICAgIC8vIEtleXdvcmQgZm9yIHRoZSB3b3JrbGlzdCB0eXBlXHJcbiAgICBleHBvcnQgY29uc3QgV09SS0xJU1RfVFlQRSA9ICdXb3JrbGlzdFR5cGUnO1xyXG4gICAgLy8gS2V5d29yZCBmb3IgdGhlIGV4ZWNwdGlvbiB0eXBlXHJcbiAgICBleHBvcnQgY29uc3QgRVhDRVBUSU9OX1RZUEUgPSAnRXhjZXB0aW9uVHlwZSc7XHJcbiAgICAvLyBLZXl3b3JkIGZvciB0aGUgc2VuaW9yIGV4YW1pbmVyIG5hbWVcclxuICAgIGV4cG9ydCBjb25zdCBTRU5JT1JfRVhBTUlORVJfTkFNRSA9ICdTZW5pb3JFeGFtaW5lck5hbWUnO1xyXG59XHJcbmV4cG9ydCA9IE1lc3NhZ2VUcmFuc2xhdGlvbkhhbmRsZXJDb25zdGFudHM7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi9zb3VyY2UtbWFwLWxvYWRlciEuL3NyYy9jb21wb25lbnRzL3V0aWxpdHkvbWVzc2FnZXRyYW5zbGF0aW9uaGFuZGxlcmNvbnN0YW50cy50cyJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 545:
/* no static exports found */
/* all exports used */
/*!************************************************!*\
  !*** ./src/components/exception/exception.tsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar ExceptionBase = __webpack_require__(/*! ./exceptionbase */ 1008);\r\nvar exceptionStore = __webpack_require__(/*! ../../stores/exception/exceptionstore */ 277);\r\nvar DropDownException = __webpack_require__(/*! ./dropdownexception */ 1006);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar markingStore = __webpack_require__(/*! ../../stores/marking/markingstore */ 236);\r\nvar exceptionactionCreator = __webpack_require__(/*! ../../actions/exception/exceptionactioncreator */ 428);\r\nvar ExceptionTypeInfo = __webpack_require__(/*! ./exceptiontypeinfo */ 1010);\r\nvar ExceptionCommentHistory = __webpack_require__(/*! ./exceptioncommenthistory */ 1009);\r\nvar examinerStore = __webpack_require__(/*! ../../stores/markerinformation/examinerstore */ 259);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar scriptHelper = __webpack_require__(/*! ../../utility/script/scripthelper */ 499);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar configurableCharacteristicsHelper = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicshelper */ 233);\r\nvar configurableCharacteristicsNames = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicsnames */ 234);\r\nvar exceptionHelper = __webpack_require__(/*! ../utility/exception/exceptionhelper */ 426);\r\nvar popUpDisplayActionCreator = __webpack_require__(/*! ../../actions/popupdisplay/popupdisplayactioncreator */ 328);\r\nvar responseStore = __webpack_require__(/*! ../../stores/response/responsestore */ 235);\r\nvar constants = __webpack_require__(/*! ../utility/constants */ 241);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar deviceHelper = __webpack_require__(/*! ../../utility/touch/devicehelper */ 316);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar teamManagementActionCreator = __webpack_require__(/*! ../../actions/teammanagement/teammanagementactioncreator */ 263);\r\nvar navigationHelper = __webpack_require__(/*! ../utility/navigation/navigationhelper */ 248);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar eCourseWorkFileStore = __webpack_require__(/*! ../../stores/response/digital/ecourseworkfilestore */ 278);\r\nvar Exception = /** @class */ (function (_super) {\r\n    __extends(Exception, _super);\r\n    /**\r\n     * Constructor Exception\r\n     * @param props\r\n     * @param state\r\n     */\r\n    function Exception(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        // indicates whether the exeptiontype information is visible\r\n        _this.exceptionTypeInfoClose = false;\r\n        // indicates whether the exeption action is available\r\n        _this.isExceptionActionAvailable = false;\r\n        //Exception type id of exception file access error\r\n        _this.selectedExceptionTypeId = 25;\r\n        //MarkSchemeGroupName of Qig in Whole Response\r\n        _this._markSchemeGroupName = null;\r\n        //MarkSchemeGroupid of Qig in Whole Response\r\n        _this._markSchemeGroupId = undefined;\r\n        //MarkGroupid of Qig in Whole Response\r\n        _this._markGroupId = undefined;\r\n        //ExaminerRoleId of Examiner in Qig in Whole Response\r\n        _this._examinerRoleId = undefined;\r\n        /**\r\n         * Get the exception details\r\n         */\r\n        _this.getExceptionData = function () {\r\n            //TODO -- Use the method in store to get selectedAudioVideo files\r\n            var selectedECourseWorkFiles = eCourseWorkFileStore.instance.getSelectedECourseWorkFiles();\r\n            var selectedFile = (selectedECourseWorkFiles) ? selectedECourseWorkFiles.filter(function (x) {\r\n                return (x.linkData.mediaType === enums.MediaType.Video || x.linkData.mediaType === enums.MediaType.Audio);\r\n            }).first() : undefined;\r\n            var filename = selectedFile.title;\r\n            var currentlySelectedExceptionType = _this.getExceptionTypeDetails(_this.selectedExceptionTypeId.toString());\r\n            _this.setState({\r\n                selectedExceptionTypeId: _this.selectedExceptionTypeId,\r\n                exceptionComment: filename + '\\n\\n' + _this.props.exceptionBody.replace(/<br\\/>/g, ''),\r\n                isSubmitButtonDisabled: (currentlySelectedExceptionType) ? false : true\r\n            });\r\n        };\r\n        _this.closeExceptionPanel = function () {\r\n            // Inorder to exclude the 'open' or 'class' from the exception type div.\r\n            if (_this.state.selectedExceptionTypeId === undefined && _this.state.exceptionComment === '') {\r\n                _this.setState({\r\n                    isExceptionTypeMenuSelected: false\r\n                });\r\n            }\r\n            _this.props.closeExceptionPanel();\r\n        };\r\n        /**\r\n         * Reset the scroll position for exception type list\r\n         */\r\n        _this.resetScroll = function () {\r\n            var exceptionTypeInfo = document.getElementsByClassName('exception-type-menu-item menu-item panel open')[0];\r\n            if (exceptionTypeInfo) {\r\n                $('#exceptionMenu').animate({ scrollTop: exceptionTypeInfo.offsetTop }, 1000);\r\n            }\r\n        };\r\n        /**\r\n         * Render the exception comment box.\r\n         * @param- event\r\n         */\r\n        _this.commentChanged = function (event) {\r\n            var exceptionComment = event.target.value;\r\n            _this.setState({\r\n                isSubmitButtonDisabled: _this.isValidException(true, exceptionComment, _this.state.selectedExceptionTypeId),\r\n                exceptionComment: exceptionComment\r\n            });\r\n            _this.props.validateException(_this.isValidException(false, exceptionComment, _this.state.selectedExceptionTypeId));\r\n        };\r\n        /**\r\n         * This method will validate whether or not the Exception Panel is edited\r\n         * @param- isSubmitButton\r\n         * @param- exceptionComment\r\n         * @param- exceptionTypeid\r\n         */\r\n        _this.isValidException = function (isSubmitButton, exceptionComment, exceptionTypeId) {\r\n            if (isSubmitButton) {\r\n                return !(exceptionComment.trim().length > 0 && exceptionTypeId !== undefined);\r\n            }\r\n            else {\r\n                return !(exceptionComment.trim().length > 0 || exceptionTypeId !== undefined);\r\n            }\r\n        };\r\n        /**\r\n         * Select changeRelatesto Items.\r\n         * @param- uniqueId\r\n         */\r\n        _this.changeRelatesTo = function (uniqueId) {\r\n            var exceptionComment = _this.state.exceptionComment;\r\n            _this.setState({\r\n                selectedRelatesTo: uniqueId,\r\n                selectedExceptionTypeId: undefined,\r\n                isSubmitButtonDisabled: _this.isValidException(true, exceptionComment, undefined),\r\n            });\r\n        };\r\n        /**\r\n         * Save exception Callback.\r\n         * @param- res\r\n         */\r\n        _this.raiseException = function (response) {\r\n            _this.props.closeExceptionPanel(response.success, response.createExceptionReturnErrorCode);\r\n        };\r\n        /**\r\n         * Method fired to close the exception panel.\r\n         */\r\n        _this.onExceptionPanelClose = function () {\r\n            _this.resetExceptionPanel();\r\n        };\r\n        /**\r\n         * Method fired to reset the exception panel.\r\n         */\r\n        _this.resetExceptionPanel = function () {\r\n            _this._questionId = undefined;\r\n            _this._markSchemeGroupId = undefined;\r\n            if (exceptionStore.instance.exceptionViewAction === enums.ExceptionViewAction.Open) {\r\n                _this._markSchemeGroupId = (_this.props.hasUnManagedSLAO\r\n                    || _this.props.hasUnmanagedImageZone) ? qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId\r\n                    : markingStore.instance.selectedQIGMarkSchemeGroupId;\r\n                _this._markSchemeGroupName = responseStore.instance.isWholeResponse ? qigStore.instance.\r\n                    getMarkSchemeGroupName(_this._markSchemeGroupId) : null;\r\n                _this._markGroupId = markingStore.instance.getMarkGroupIdQIGtoRIGMap(_this._markSchemeGroupId);\r\n                if (_this.props.hasUnManagedSLAO || _this.props.hasUnmanagedImageZone) {\r\n                    _this._examinerRoleId = qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId;\r\n                }\r\n                else {\r\n                    _this._examinerRoleId = markingStore.instance.selectedQIGExaminerRoleId;\r\n                }\r\n            }\r\n            _this.setState({\r\n                selectedExceptionTypeId: undefined,\r\n                showExceptionTypeclassName: 'close',\r\n                isSubmitButtonDisabled: true,\r\n                selectedRelatesTo: undefined,\r\n                exceptionComment: '',\r\n                renderedOn: Date.now(),\r\n                selectedExceptionDescriptionId: 0,\r\n                isExceptionTypeMenuSelected: false\r\n            });\r\n            if (_this.props.isFromMediaErrorDialog) {\r\n                _this.getExceptionData();\r\n            }\r\n            if (_this.props.isNewException && _this.refs.commentTextBox !== undefined && !deviceHelper.isTouchDevice()) {\r\n                _this.refs.commentTextBox.focus();\r\n            }\r\n        };\r\n        /**\r\n         * This method is handling the letious popup events.\r\n         */\r\n        _this.onPopUpDisplayEvent = function (popUpType, popUpActionType) {\r\n            switch (popUpType) {\r\n                case enums.PopUpType.DiscardException:\r\n                case enums.PopUpType.DiscardExceptionOnViewExceptionButtonClick:\r\n                case enums.PopUpType.DiscardOnNewExceptionButtonClick:\r\n                    if (popUpActionType === enums.PopUpActionType.Yes) {\r\n                        _this.resetExceptionPanel();\r\n                    }\r\n                    break;\r\n                case enums.PopUpType.CloseException:\r\n                    if (popUpActionType === enums.PopUpActionType.Yes) {\r\n                        _this.closeException();\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n        /**\r\n         * handle exception actions such as Escalate, Resolve, Close\r\n         */\r\n        _this.onActionException = function (exceptionActionType) {\r\n            if (exceptionActionType === enums.ExceptionActionType.Close) {\r\n                popUpDisplayActionCreator.popUpDisplay(enums.PopUpType.CloseException, enums.PopUpActionType.Show, enums.SaveAndNavigate.none, {\r\n                    popupContent: localeStore.instance.TranslateText('marking.response.close-exception-dialog.body')\r\n                });\r\n            }\r\n            else {\r\n                exceptionactionCreator.doVisibleExceptionActionPopup(true, exceptionActionType);\r\n            }\r\n        };\r\n        // Set the default states\r\n        _this.state = {\r\n            renderedOn: 0,\r\n            showExceptionTypeclassName: 'close',\r\n            isSubmitButtonDisabled: true,\r\n            exceptionComment: '',\r\n            isExceptionTypeMenuSelected: false\r\n        };\r\n        _this.commentChanged = _this.commentChanged.bind(_this);\r\n        _this.saveException = _this.saveException.bind(_this);\r\n        _this.showExceptionType = _this.showExceptionType.bind(_this);\r\n        _this.selectExceptionType = _this.selectExceptionType.bind(_this);\r\n        _this.showExceptionDescription = _this.showExceptionDescription.bind(_this);\r\n        _this.closeExceptionPanel = _this.closeExceptionPanel.bind(_this);\r\n        _this.onFocus = _this.onFocus.bind(_this);\r\n        _this.resetScroll = _this.resetScroll.bind(_this);\r\n        _this.onActionException = _this.onActionException.bind(_this);\r\n        _this.resetExceptionPanel = _this.resetExceptionPanel.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Component did  mount\r\n     */\r\n    Exception.prototype.componentDidMount = function () {\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.CLOSE_EXCEPTION_WINDOW, this.onExceptionPanelClose);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.EXCEPTION_DISCARD_POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.OPEN_EXCEPTION_WINDOW, this.resetExceptionPanel);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.RAISE_EXCEPTION, this.raiseException);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.CLOSE_EXCEPTION, this.closeExceptionPanel);\r\n        exceptionStore.instance.addListener(exceptionStore.ExceptionStore.EXCEPTION_TYPE_SCROLL_RESET_ACTION, this.resetScroll);\r\n    };\r\n    /**\r\n     * Componet will unmount\r\n     */\r\n    Exception.prototype.componentWillUnmount = function () {\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.CLOSE_EXCEPTION_WINDOW, this.onExceptionPanelClose);\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.EXCEPTION_DISCARD_POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        if (exceptionStore.instance.exceptionViewAction !== enums.ExceptionViewAction.None) {\r\n            exceptionactionCreator.exceptionWindowAction(enums.ExceptionViewAction.None);\r\n        }\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.OPEN_EXCEPTION_WINDOW, this.resetExceptionPanel);\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.RAISE_EXCEPTION, this.raiseException);\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.CLOSE_EXCEPTION, this.closeExceptionPanel);\r\n        exceptionStore.instance.removeListener(exceptionStore.ExceptionStore.EXCEPTION_TYPE_SCROLL_RESET_ACTION, this.resetScroll);\r\n    };\r\n    /**\r\n     * Component did update\r\n     */\r\n    Exception.prototype.componentDidUpdate = function () {\r\n        //when exception is raised from error dialog, then the Entire Response radio button should be selected by default\r\n        //so setting selectedRelatesTo to 0\r\n        if (this.props.isFromMediaErrorDialog && this.state.selectedRelatesTo === undefined) {\r\n            this.setState({\r\n                selectedRelatesTo: 0\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Render method\r\n     */\r\n    Exception.prototype.render = function () {\r\n        var panelContent;\r\n        if (this.props.exceptionData && this.props.exceptionData !== null\r\n            && !markerOperationModeFactory.operationMode.isStandardisationSetupMode) {\r\n            panelContent = this.exceptionPanelContent();\r\n        }\r\n        return (React.createElement(\"div\", { id: 'responseExceptionContainer', className: 'response-message response-exception-container' },\r\n            this.renderExceptionHeader(),\r\n            React.createElement(\"div\", { className: 'messaging-content' }, panelContent)));\r\n    };\r\n    /**\r\n     * Render Exception Header.\r\n     */\r\n    Exception.prototype.renderExceptionHeader = function () {\r\n        var headerDetails;\r\n        if (this.props.isNewException || !this.props.isExceptionPanelVisible) {\r\n            headerDetails = (React.createElement(\"h3\", { id: 'popup2TitleException', className: 'shift-left comp-msg-title' }, localeStore.instance.TranslateText('marking.response.exception-list-panel.raise-new-exception')));\r\n        }\r\n        else {\r\n            headerDetails = (React.createElement(\"h3\", { id: 'popup2TitleException', className: 'shift-left comp-msg-title' },\r\n                React.createElement(\"span\", { className: 'exceptionid-label' }, localeStore.instance.TranslateText('marking.response.view-exception-panel.header')),\r\n                React.createElement(\"span\", { className: 'exceptionid-colon' }, \": \"),\r\n                React.createElement(\"span\", { className: 'exception-id' }, constants.EXCEPTION_ID_PREFIX + this.props.exceptionDetails.uniqueId)));\r\n        }\r\n        return (React.createElement(\"div\", { className: 'response-msg-header clearfix' },\r\n            headerDetails,\r\n            this.props.isNewException || !this.props.isExceptionPanelVisible ?\r\n                (React.createElement(\"div\", { id: 'exception_submit_btn', className: 'shift-left comp-msg-butons' },\r\n                    React.createElement(\"button\", { id: 'submit_exception', className: 'button primary rounded', title: localeStore.instance.TranslateText('marking.response.raise-exception-panel.submit-button'), onClick: this.saveException, disabled: this.state.isSubmitButtonDisabled }, localeStore.instance.TranslateText('marking.response.raise-exception-panel.submit-button')))) : null,\r\n            teamManagementStore.instance.isRedirectFromException && this.props.isExceptionPanelVisible ?\r\n                (React.createElement(\"button\", { id: 'back_to_exception_btn', className: 'rounded back-exception-btn light', title: localeStore.instance.TranslateText('generic.response.exception-panel.back-to-exceptions'), onClick: this.navigatetoExceptionList }, localeStore.instance.TranslateText('generic.response.exception-panel.back-to-exceptions'))) : null,\r\n            React.createElement(\"div\", { className: 'shift-right minimize-message' },\r\n                React.createElement(\"a\", { className: 'minimize-message-link', title: localeStore.instance.TranslateText('messaging.compose-message.minimise-icon-tooltip'), onClick: this.onMinimize },\r\n                    React.createElement(\"span\", { className: 'minimize-icon lite' }, \"Minimize\")),\r\n                React.createElement(\"a\", { className: 'maximize-message-link', title: localeStore.instance.TranslateText('messaging.compose-message.maximise-icon-tooltip'), onClick: this.onMaximize },\r\n                    React.createElement(\"span\", { className: 'maxmize-icon lite' })),\r\n                !teamManagementStore.instance.isRedirectFromException ?\r\n                    React.createElement(\"a\", { className: 'close-message-link', title: localeStore.instance.TranslateText('messaging.compose-message.close-icon-tooltip'), onClick: this.closeExceptionPanel },\r\n                        React.createElement(\"span\", { className: 'close-icon lite' }, \"Close\")) : null)));\r\n    };\r\n    /**\r\n     * Render Exception Content.\r\n     */\r\n    Exception.prototype.exceptionPanelContent = function () {\r\n        var exceptionRelateWrap = (this.props.hasUnManagedSLAO || this.props.hasUnmanagedImageZone)\r\n            ? null :\r\n            (React.createElement(\"div\", { id: 'exceptionRelateWrap', className: 'exception-relate-wrap' },\r\n                React.createElement(\"div\", { className: 'dim-text exception-relate-label' },\r\n                    localeStore.instance.TranslateText('marking.response.raise-exception-panel.exception-relates-to-label'),\r\n                    \" \"),\r\n                this.renderExceptionRelatesTo()));\r\n        if (this.props.isNewException || !this.props.isExceptionPanelVisible) {\r\n            var newExceptionSubTitle = (this.props.hasUnManagedSLAO || this.props.hasUnmanagedImageZone)\r\n                ? localeStore.instance.TranslateText('marking.response.raise-exception-panel.new-exception-subtitle-has-unmanagedslao')\r\n                : localeStore.instance.TranslateText('marking.response.raise-exception-panel.exception-type-label');\r\n            return (React.createElement(\"div\", { className: 'exception-wrapper' },\r\n                exceptionRelateWrap,\r\n                React.createElement(\"div\", { className: 'exception-type-menu-wrap clearfix' },\r\n                    React.createElement(\"div\", { className: 'exception-reason-label dim-text' }, newExceptionSubTitle),\r\n                    this.renderExceptionTypes()),\r\n                this.renderExceptionMessage()));\r\n        }\r\n        else {\r\n            this.isExceptionActionAvailable = markerOperationModeFactory.operationMode.isTeamManagementMode &&\r\n                this.props.exceptionDetails.currentStatus === enums.ExceptionStatus.Open &&\r\n                examinerStore.instance.getMarkerInformation.examinerId === this.props.exceptionDetails.ownerExaminerId;\r\n            return (React.createElement(\"div\", { className: 'exception-wrapper' },\r\n                React.createElement(\"div\", { className: 'exception-detail-wrapper' },\r\n                    React.createElement(ExceptionTypeInfo, { id: 'exception-info', key: 'exception-info', selectedLanguage: this.props.selectedLanguage, exceptionTypeId: this.props.exceptionDetails.exceptionType, status: this.props.exceptionDetails.currentStatus, markSchemeId: this.props.exceptionDetails.markSchemeID, onActionException: this.onActionException, isExceptionActionAvailable: this.isExceptionActionAvailable, alternativeEscalationPoint: this.props.exceptionDetails.alternativeEscalationPoint, isPE: qigStore.instance.getSelectedQIGForTheLoggedInUser &&\r\n                            qigStore.instance.getSelectedQIGForTheLoggedInUser.role === enums.ExaminerRole.principalExaminer, questionName: this.props.exceptionDetails.markSchemeID === 0 ?\r\n                            (responseStore.instance.isWholeResponse ?\r\n                                qigStore.instance.getMarkSchemeGroupName(this.props.exceptionDetails.markSchemeGroupID)\r\n                                : 'Entire response') : markingStore.instance.toolTip(this.props.exceptionDetails.markSchemeID) }),\r\n                    this.renderExceptionCommentHistory())));\r\n        }\r\n    };\r\n    /**\r\n     * Render Exception Types.\r\n     */\r\n    Exception.prototype.renderExceptionTypes = function () {\r\n        var _this = this;\r\n        var dropdownclassName = 'dropdown-wrap exception-type option-menu-wrap shift-left ' +\r\n            (this.state.isExceptionTypeMenuSelected ? this.state.showExceptionTypeclassName : '');\r\n        var exceptionTypeDescription = '';\r\n        var isDisabled = false;\r\n        var exceptionTypes = exceptionHelper.sortExceptionTypes(exceptionStore.instance.getExceptionTypes);\r\n        var blockerDescription;\r\n        if (this.props.hasUnManagedSLAO) {\r\n            // for SLAO unmanaged scenario, expection type related to the Selected QIG should be displayed.\r\n            this._markSchemeGroupId = qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId;\r\n        }\r\n        else if (this.props.currentQuestionItemInfo &&\r\n            this.props.currentQuestionItemInfo.markSchemeGroupId &&\r\n            this._markSchemeGroupId === undefined) {\r\n            this._markSchemeGroupId = this.props.currentQuestionItemInfo.markSchemeGroupId;\r\n        }\r\n        var toRender = exceptionTypes.map(function (exceptionType, index) {\r\n            if (exceptionType.markSchemeGroupId === _this._markSchemeGroupId) {\r\n                exceptionTypeDescription = '';\r\n                isDisabled = false;\r\n                // Disable already raised exception.\r\n                if (_this.props.exceptionData) {\r\n                    _this.props.exceptionData.map(function (data, index) {\r\n                        if (_this.state.selectedRelatesTo === 0) {\r\n                            if (data.markSchemeID === 0 && exceptionType.exceptionType === data.exceptionType\r\n                                && data.currentStatus !== enums.ExceptionStatus.Closed &&\r\n                                data.markSchemeGroupID === exceptionType.markSchemeGroupId) {\r\n                                exceptionTypeDescription = localeStore.instance.TranslateText('marking.response.raise-exception-panel.open-exception-exists-against-response');\r\n                                isDisabled = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.markSchemeID === 0 && exceptionType.exceptionType === data.exceptionType\r\n                                && data.currentStatus !== enums.ExceptionStatus.Closed && (data.markSchemeGroupID === exceptionType.markSchemeGroupId\r\n                                || _this.props.hasUnManagedSLAO || _this.props.hasUnmanagedImageZone)) {\r\n                                exceptionTypeDescription = localeStore.instance.TranslateText('marking.response.raise-exception-panel.open-exception-exists-against-response');\r\n                                isDisabled = true;\r\n                            }\r\n                            else if (data.markSchemeID === _this._questionId\r\n                                && exceptionType.exceptionType === data.exceptionType\r\n                                && data.currentStatus !== enums.ExceptionStatus.Closed) {\r\n                                exceptionTypeDescription = localeStore.instance.TranslateText('marking.response.raise-exception-panel.open-exception-exists-against-question');\r\n                                isDisabled = true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                blockerDescription = exceptionHelper.getExceptionDescription(exceptionType, exceptionStore.instance.isExceptionBlocker(exceptionType.exceptionType));\r\n                return React.createElement(DropDownException, { id: exceptionType.exceptionType, key: exceptionType.exceptionType.toString(), isOpen: parseInt(_this.state.selectedExceptionDescriptionId) === exceptionType.exceptionType, isChecked: parseInt(_this.state.selectedExceptionTypeId) === exceptionType.exceptionType, onClick: _this.selectExceptionType, showExceptionDesc: _this.showExceptionDescription, isDisabled: isDisabled, description: exceptionTypeDescription, blockerDescription: blockerDescription });\r\n            }\r\n        });\r\n        var dropdownText = '';\r\n        var selectedExceptionType = this.getExceptionTypeDetails(this.state.selectedExceptionTypeId);\r\n        if (selectedExceptionType === null) {\r\n            dropdownText = localeStore.instance.TranslateText('marking.response.raise-exception-panel.select-exception-type-placeholder');\r\n        }\r\n        else {\r\n            dropdownText = localeStore.instance.TranslateText('generic.exception-types.' +\r\n                selectedExceptionType.exceptionType + '.name');\r\n        }\r\n        // reset the scroll position only after clicking the exceptiontype info icon\r\n        if (this.exceptionTypeInfoClose) {\r\n            exceptionactionCreator.setScrollForExceptionType();\r\n            this.exceptionTypeInfoClose = false;\r\n        }\r\n        return (React.createElement(\"div\", { className: dropdownclassName, onClick: this.showExceptionType },\r\n            React.createElement(\"a\", { id: 'exceptionSelected', className: 'menu-button exception-type-caption' },\r\n                React.createElement(\"span\", null, dropdownText),\r\n                React.createElement(\"span\", { className: 'sprite-icon menu-arrow-icon' })),\r\n            React.createElement(\"div\", { id: 'exceptionMenu', className: 'menu', role: 'menu', title: localeStore.instance.TranslateText('marking.response.raise-exception-panel.exception-type-tooltip'), \"aria-hidden\": 'true' },\r\n                React.createElement(\"div\", { className: 'exception-type-menu-content panel-group' }, toRender))));\r\n    };\r\n    /**\r\n     * Render the exception Relates to items.\r\n     */\r\n    Exception.prototype.renderExceptionRelatesTo = function () {\r\n        if (this.props.currentQuestionItemInfo &&\r\n            this.props.currentQuestionItemInfo.uniqueId) {\r\n            if (this._questionId === undefined) {\r\n                this._questionId = this.props.currentQuestionItemInfo.uniqueId;\r\n            }\r\n            this._questionName = localeStore.instance.TranslateText('marking.response.raise-exception-panel.selected-question')\r\n                + markingStore.instance.toolTip(this._questionId);\r\n        }\r\n        var selectedQuestionItem;\r\n        selectedQuestionItem = this.state.selectedRelatesTo === undefined ?\r\n            this._questionId : this.state.selectedRelatesTo;\r\n        return (React.createElement(\"div\", { className: 'exception-relate-option-wrap ' },\r\n            React.createElement(\"div\", { className: 'exception-relate-option' },\r\n                React.createElement(\"input\", { type: 'radio', value: 'selected', id: 'exceptionRelated1', name: 'exceptionRelated', defaultChecked: this.state.selectedRelatesTo !== 0, onChange: null }),\r\n                React.createElement(\"label\", { htmlFor: 'exceptionRelated1', onClick: selectedQuestionItem !== this._questionId ?\r\n                        this.changeRelatesTo.bind(this, this._questionId) : null },\r\n                    React.createElement(\"span\", { className: 'radio-ui' }),\r\n                    React.createElement(\"span\", { className: 'label-text' }, this._questionName))),\r\n            React.createElement(\"div\", { className: 'exception-relate-option' },\r\n                React.createElement(\"input\", { type: 'radio', value: 'selected', id: 'exceptionRelated2', name: 'exceptionRelated', defaultChecked: this.state.selectedRelatesTo === 0 }),\r\n                React.createElement(\"label\", { htmlFor: 'exceptionRelated2', onClick: selectedQuestionItem !== 0 ?\r\n                        this.changeRelatesTo.bind(this, 0) : null },\r\n                    React.createElement(\"span\", { className: 'radio-ui' }),\r\n                    React.createElement(\"span\", { className: 'label-text' }, responseStore.instance.isWholeResponse ? this._markSchemeGroupName\r\n                        : localeStore.instance.TranslateText('marking.response.raise-exception-panel.entire-response'))))));\r\n    };\r\n    /**\r\n     * Render the exception comment box.\r\n     */\r\n    Exception.prototype.renderExceptionMessage = function () {\r\n        return (React.createElement(\"div\", { className: 'exception-message-wrap' },\r\n            React.createElement(\"textarea\", { ref: 'commentTextBox', \"aria-label\": 'Exception', name: 'exception-msg', id: 'exceptionmsg', className: 'exception-message', placeholder: localeStore.instance.TranslateText('marking.response.raise-exception-panel.comment-placeholder'), onChange: this.commentChanged, value: this.state.exceptionComment, onFocus: this.onFocus })));\r\n    };\r\n    /**\r\n     * This method will call on focus of exception comment box text area\r\n     * @param e\r\n     */\r\n    Exception.prototype.onFocus = function (e) {\r\n        this.setState({\r\n            showExceptionTypeclassName: 'close'\r\n        });\r\n    };\r\n    /**\r\n     * Render the exception History.\r\n     */\r\n    Exception.prototype.renderExceptionCommentHistory = function () {\r\n        var commentDetails = this.props.exceptionDetails.exceptionComments;\r\n        var exceptionStatus = this.props.exceptionDetails.currentStatus;\r\n        var isEscalated = false;\r\n        var toRender = commentDetails.map(function (comment, index) {\r\n            if ((exceptionStatus === enums.ExceptionStatus.Open && index === 0) ||\r\n                (exceptionStatus === (enums.ExceptionStatus.Resolved || enums.ExceptionStatus.Closed) && index === 0) ||\r\n                (exceptionStatus === (enums.ExceptionStatus.Resolved || enums.ExceptionStatus.Closed) &&\r\n                    index === commentDetails.length - 1)) {\r\n                isEscalated = false;\r\n            }\r\n            else {\r\n                isEscalated = true;\r\n            }\r\n            return React.createElement(ExceptionCommentHistory, { key: 'comment-history' + index, commentedBy: comment.examinerName, isEscalated: isEscalated, updatedDate: comment.updatedDate, comments: comment.comment, exceptionStatus: comment.exceptionStatus, id: index });\r\n        });\r\n        return (React.createElement(\"div\", { className: 'exception-history-wrapper' }, toRender));\r\n    };\r\n    /**\r\n     * Navigate to the team Management ExceptionList\r\n     */\r\n    Exception.prototype.navigatetoExceptionList = function () {\r\n        teamManagementActionCreator.getTeamManagementOverviewCounts(teamManagementStore.instance.selectedExaminerRoleId, teamManagementStore.instance.selectedMarkSchemeGroupId);\r\n        teamManagementActionCreator.getUnactionedExceptions(qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId, false, true);\r\n        navigationHelper.loadTeamManagement();\r\n    };\r\n    /**\r\n     * Save the Exception to Db.\r\n     */\r\n    Exception.prototype.saveException = function () {\r\n        this._scriptHelper = new scriptHelper();\r\n        var selectedExceptionType = this.getExceptionTypeDetails(this.state.selectedExceptionTypeId);\r\n        var isEbookMarking = configurableCharacteristicsHelper.getCharacteristicValue(configurableCharacteristicsNames.eBookmarking).toLowerCase() === 'true' ? true : false;\r\n        var comments = [{\r\n                comment: this.state.exceptionComment,\r\n                uniqueId: 0,\r\n                examinerID: examinerStore.instance.getMarkerInformation.examinerId,\r\n                escalationPoint: enums.EscalationPoint.None,\r\n                authorIsGroup: false,\r\n                updatedBy: ''\r\n            }];\r\n        var raiseExceptionParams = {\r\n            candidateScriptID: this._scriptHelper.getResponseData.candidateScriptId,\r\n            exceptionType: this.state.selectedExceptionTypeId,\r\n            markSchemeGroupID: this._markSchemeGroupId,\r\n            markGroupId: this._markGroupId,\r\n            isEBookMarking: isEbookMarking,\r\n            originatorExaminerId: examinerStore.instance.getMarkerInformation.examinerId,\r\n            questionPaperPartID: qigStore.instance.selectedQIGForMarkerOperation.questionPaperPartId,\r\n            ownerEscalationPoint: selectedExceptionType.ownerEscalationPoint,\r\n            exceptionComments: comments,\r\n            currentStatus: enums.ExceptionStatus.Open,\r\n            exceptionId: 0,\r\n            markSchemeID: this.state.selectedRelatesTo === undefined ?\r\n                this._questionId : this.state.selectedRelatesTo,\r\n            originatorExaminerRoleId: this._examinerRoleId,\r\n            ownerExaminerId: selectedExceptionType.ownerExaminerId,\r\n            uniqueId: 0,\r\n            displayId: responseStore.instance.selectedDisplayId,\r\n            examinerName: examinerStore.instance.getMarkerInformation.formattedExaminerName\r\n        };\r\n        this.setState({\r\n            isSubmitButtonDisabled: true,\r\n            exceptionComment: ''\r\n        }, function () {\r\n            // Call the raise exception Action.\r\n            exceptionactionCreator.raiseExceptionAction(raiseExceptionParams, worklistStore.instance.getResponseDetails(responseStore.instance.selectedDisplayId.toString()).markGroupId, qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId);\r\n        });\r\n    };\r\n    /**\r\n     * Get the Exception type details.\r\n     */\r\n    Exception.prototype.getExceptionTypeDetails = function (exceptionTypeId) {\r\n        var exceptionTypes = exceptionStore.instance.getExceptionTypes;\r\n        var selectedExceptionType = null;\r\n        if (exceptionTypes) {\r\n            exceptionTypes.map(function (exceptionType) {\r\n                if (exceptionType.exceptionType === parseInt(exceptionTypeId)) {\r\n                    selectedExceptionType = exceptionType;\r\n                }\r\n            });\r\n        }\r\n        return selectedExceptionType;\r\n    };\r\n    /**\r\n     * Show ExceptionType Dropdown.\r\n     */\r\n    Exception.prototype.showExceptionType = function () {\r\n        this.setState({\r\n            isExceptionTypeMenuSelected: true,\r\n            showExceptionTypeclassName: this.state.showExceptionTypeclassName === 'close' ? 'open' : 'close'\r\n        });\r\n    };\r\n    /**\r\n     * Select the ExceptionType.\r\n     * @param- exceptionTypeid\r\n     * @param- isDisabled\r\n     * @param- event\r\n     */\r\n    Exception.prototype.selectExceptionType = function (exceptionTypeId, isDisabled, event) {\r\n        var exceptionComment = this.state.exceptionComment;\r\n        if (!isDisabled) {\r\n            this.setState({\r\n                selectedExceptionTypeId: exceptionTypeId,\r\n                isSubmitButtonDisabled: this.isValidException(true, exceptionComment, exceptionTypeId),\r\n                showExceptionTypeclassName: 'close'\r\n            });\r\n        }\r\n        this.props.validateException(this.isValidException(false, exceptionComment, exceptionTypeId));\r\n        event.stopPropagation();\r\n    };\r\n    /**\r\n     * Show the Exception Description.\r\n     * @param- exceptionTypeid\r\n     * @param- isOpen\r\n     * @param- event\r\n     */\r\n    Exception.prototype.showExceptionDescription = function (exceptionTypeId, isOpen, event) {\r\n        this.exceptionTypeInfoClose = isOpen !== 'open';\r\n        this.setState({\r\n            selectedExceptionDescriptionId: isOpen === 'open' ? 0 : exceptionTypeId\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n    /**\r\n     * Update exception status to Db\r\n     */\r\n    Exception.prototype.closeException = function () {\r\n        var exceptionParams = {\r\n            uniqueId: this.props.exceptionDetails.uniqueId,\r\n            exceptionType: this.props.exceptionDetails.exceptionType,\r\n            currentStatus: enums.ExceptionStatus.Closed,\r\n            exceptionComments: null,\r\n            markSchemeID: this.props.exceptionDetails.markSchemeID,\r\n            ownerEscalationPoint: this.props.exceptionDetails.ownerEscalationPoint,\r\n            ownerExaminerId: this.props.exceptionDetails.ownerExaminerId,\r\n            markGroupId: this.props.exceptionDetails.markGroupId,\r\n            candidateScriptID: this.props.exceptionDetails.candidateScriptID,\r\n            markSchemeGroupID: this.props.exceptionDetails.markSchemeGroupID,\r\n            questionPaperPartID: this.props.exceptionDetails.questionPaperPartID,\r\n            originatorExaminerId: this.props.exceptionDetails.originatorExaminerId,\r\n            isEBookMarking: this.props.exceptionDetails.iseBookMarking\r\n        };\r\n        /* Defect 46286 - Exception count is not getting updated once after closing the exception.\r\n           To fix the issue by clearing the worklist cache after closing the exception.So it required worklist type, response mode,\r\n           remark request type as the exception argument */\r\n        var exceptionActionParams = {\r\n            exception: exceptionParams,\r\n            actionType: enums.ExceptionActionType.Close,\r\n            requestedByExaminerRoleId: qigStore.instance.selectedQIGForMarkerOperation.examinerRoleId,\r\n            qigId: qigStore.instance.selectedQIGForMarkerOperation.markSchemeGroupId,\r\n            worklistType: worklistStore.instance.currentWorklistType,\r\n            responseMode: worklistStore.instance.getResponseMode,\r\n            remarkRequestType: worklistStore.instance.getRemarkRequestType,\r\n            displayId: responseStore.instance.selectedDisplayId.toString(),\r\n        };\r\n        exceptionactionCreator.updateExceptionStatus(exceptionActionParams);\r\n    };\r\n    return Exception;\r\n}(ExceptionBase));\r\nmodule.exports = Exception;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ 42)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 547:
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./src/components/message/message.tsx ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar React = __webpack_require__(/*! react */ 0);\r\nvar GenericButton = __webpack_require__(/*! ../utility/genericbutton */ 290);\r\nvar MessagePriorityDropDown = __webpack_require__(/*! ./messageprioritydropdown */ 464);\r\nvar MessageEditor = __webpack_require__(/*! ./messageeditor */ 463);\r\nvar Subject = __webpack_require__(/*! ./subject */ 466);\r\nvar messageStore = __webpack_require__(/*! ../../stores/message/messagestore */ 240);\r\nvar localeStore = __webpack_require__(/*! ../../stores/locale/localestore */ 226);\r\nvar MessageBase = __webpack_require__(/*! ./messagebase */ 462);\r\nvar enums = __webpack_require__(/*! ../utility/enums */ 225);\r\nvar examinerStore = __webpack_require__(/*! ../../stores/markerinformation/examinerstore */ 259);\r\nvar qigStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar messagingActionCreator = __webpack_require__(/*! ../../actions/messaging/messagingactioncreator */ 268);\r\nvar MessageDetails = __webpack_require__(/*! ./messagerightpanel */ 489);\r\nvar classNames = __webpack_require__(/*! classnames */ 39);\r\nvar popupHelper = __webpack_require__(/*! ../utility/popup/popuphelper */ 288);\r\nvar worklistStore = __webpack_require__(/*! ../../stores/worklist/workliststore */ 231);\r\nvar qiqStore = __webpack_require__(/*! ../../stores/qigselector/qigstore */ 230);\r\nvar messageHelper = __webpack_require__(/*! ../utility/message/messagehelper */ 283);\r\nvar operationModeHelper = __webpack_require__(/*! ../utility/userdetails/userinfo/operationmodehelper */ 289);\r\nvar markerOperationModeFactory = __webpack_require__(/*! ../utility/markeroperationmode/markeroperationmodefactory */ 232);\r\nvar configurablecharacteristicshelper = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicshelper */ 233);\r\nvar configurablecharacteristicsnames = __webpack_require__(/*! ../../utility/configurablecharacteristic/configurablecharacteristicsnames */ 234);\r\nvar teamManagementStore = __webpack_require__(/*! ../../stores/teammanagement/teammanagementstore */ 245);\r\nvar applicationStore = __webpack_require__(/*! ../../stores/applicationoffline/applicationstore */ 247);\r\nvar standardisationSetupStore = __webpack_require__(/*! ../../stores/standardisationsetup/standardisationsetupstore */ 237);\r\nvar markingStore = __webpack_require__(/*! ../../stores/marking/markingstore */ 236);\r\nvar Message = /** @class */ (function (_super) {\r\n    __extends(Message, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Message(props, state) {\r\n        var _this = _super.call(this, props, state) || this;\r\n        // message type\r\n        _this.currentMessageType = enums.MessageType.InboxCompose;\r\n        // this variable will hold the message panel visiblity status.\r\n        _this.isMessagePopupVisible = false;\r\n        _this.selectedMsgDetails = null;\r\n        _this.priorityDropdownSelectedItem = enums.MessagePriority.Standard;\r\n        _this.removeMandatoryMessagePriority = true;\r\n        _this._mandatoryMessagesFromMarkingToolCC = false;\r\n        /**\r\n         * This method is handling the letious popup events.\r\n         */\r\n        _this.onPopUpDisplayEvent = function (popUpType, popUpActionType, popUpDisplayAction, actionFromCombinedPopup, navigateTo) {\r\n            if (actionFromCombinedPopup === void 0) { actionFromCombinedPopup = false; }\r\n            if (navigateTo === void 0) { navigateTo = enums.SaveAndNavigate.none; }\r\n            switch (popUpType) {\r\n                case enums.PopUpType.DiscardMessage:\r\n                case enums.PopUpType.DiscardMessageNavigateAway:\r\n                case enums.PopUpType.DiscardOnNewMessageButtonClick:\r\n                    switch (popUpActionType) {\r\n                        case enums.PopUpActionType.Yes:\r\n                            popupHelper.handlePopUpEvents(popUpType, popUpActionType, _this.onDiscardMessageConfirmed, actionFromCombinedPopup, navigateTo);\r\n                            break;\r\n                        case enums.PopUpActionType.No:\r\n                            popupHelper.handlePopUpEvents(popUpType, popUpActionType, _this.onDiscardMessageCancelled);\r\n                            break;\r\n                    }\r\n            }\r\n        };\r\n        /**\r\n         * This method will return the supervisor details against a qig\r\n         */\r\n        _this.getSupervisorAndQIGDetails = function (qigId) {\r\n            var item = _this.qigListItems.filter(function (x) { return x.id === qigId; })[0];\r\n            if (item) {\r\n                _this.selectedQigItemId = item.id;\r\n                _this.selectedQigItemDisplayed = item.name;\r\n                _this.supervisorName = item.parentExaminerDisplayName;\r\n                _this.supervisorId = item.parentExaminerId;\r\n                _this.selectedQuestionPaperPartId = item.questionPaperPartId;\r\n            }\r\n        };\r\n        /**\r\n         * Handles the action event on To address list Received.\r\n         */\r\n        _this.teamListReceived = function () {\r\n            if (markerOperationModeFactory.operationMode.isRemoveMandatoryMessagePriorityRequired(_this.currentExaminerId)) {\r\n                var teams = messageStore.instance.teamDetails;\r\n                if (teams) {\r\n                    if (teams.team.subordinates && teams.team.subordinates.length > 0) {\r\n                        if (_this.props.messageType === enums.MessageType.ResponseReply) {\r\n                            _this.removeMandatoryMessagePriority = true;\r\n                            _this.getSubordinateList(teams.team.subordinates);\r\n                        }\r\n                    }\r\n                    if (teams && teams.team.subordinates && teams.team.subordinates.length === 0) {\r\n                        _this.removeMandatoryMessagePriority = true;\r\n                    }\r\n                }\r\n                _this.setState({\r\n                    renderedOn: Date.now()\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * This method will set the subject and message body for reply and forward\r\n         */\r\n        _this.setvariablesForReplyAndForward = function (messageType) {\r\n            _this.priorityDropdownSelectedItem = messageHelper.getPriorityDropDownSelectedItem(_this.props.selectedMessage.priorityName);\r\n            switch (messageType) {\r\n                case enums.MessageType.ResponseReply:\r\n                case enums.MessageType.ResponseForward:\r\n                    _this.messageSubject = messageHelper.getSubjectContent(messageType, _this.props.selectedMessage.subject);\r\n                    _this.messageBody = messageHelper.getMessageContent(messageType, _this.props.selectedMessage.examinerDetails.fullName, _this.props.selectedMessage.displayDate, _this.props.selectedMsgDetails.body);\r\n                    if (markerOperationModeFactory.operationMode.isTeamManagementMode) {\r\n                        var qigId = operationModeHelper.markSchemeGroupId;\r\n                        var examinerRoleId = operationModeHelper.authorisedExaminerRoleId;\r\n                        var args = {\r\n                            examinerRoleId: examinerRoleId,\r\n                            qigId: qigId\r\n                        };\r\n                        messagingActionCreator.getTeamDetails(args);\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n        /**\r\n         * This method will call on message open\r\n         */\r\n        _this.onMessagePanelOpen = function (messageType) {\r\n            if (messageType === enums.MessageType.ResponseCompose) {\r\n                _this.messageBody = messageHelper.getMessageContent(enums.MessageType.ResponseCompose);\r\n                // Reset the Navigation after opening a message\r\n                _this.navigateTo = enums.SaveAndNavigate.none;\r\n                _this.setState({ renderedOn: Date.now() });\r\n            }\r\n        };\r\n        // Set the default states\r\n        _this.state = {\r\n            renderedOn: 0\r\n        };\r\n        _this.teamListReceived = _this.teamListReceived.bind(_this);\r\n        _this._mandatoryMessagesFromMarkingToolCC = configurablecharacteristicshelper.getCharacteristicValue(configurablecharacteristicsnames.MandatoryMessagesFromMarkingTool).toLowerCase() === 'true' ? true : false;\r\n        _this.doShowMandatoryMessagePriority = _this.doShowMandatoryMessagePriority.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Render method\r\n     */\r\n    Message.prototype.render = function () {\r\n        if (this.props.messageType === enums.MessageType.ResponseDetails) {\r\n            return (React.createElement(\"div\", { className: 'response-message response-message-container' },\r\n                this.renderMessageHeader(),\r\n                React.createElement(MessageDetails, { id: 'resp-msg-det', key: 'resp-msg-det', selectedLanguage: this.props.selectedLanguage, message: this.props.selectedMessage, \r\n                    //The forward button should be hidden when the examiner has no supervisor\r\n                    isForwardButtonHidden: examinerStore.instance.parentExaminerId === 0, messageDetails: this.props.selectedMsgDetails, selectedTab: enums.MessageFolderType.None, onMessageMenuActionClickCallback: this.props.onMessageMenuActionClickCallback })));\r\n        }\r\n        var _showMandatoryMessagePriority = this.doShowMandatoryMessagePriority();\r\n        this.currentExaminerName = this.currentExaminerName === undefined ?\r\n            this.props.supervisorName : this.currentExaminerName;\r\n        if (this.props.messageType === enums.MessageType.ResponseCompose && this.messageBody === '') {\r\n            this.messageBody = messageHelper.getMessageContent(enums.MessageType.ResponseCompose);\r\n        }\r\n        var workListType = worklistStore.instance.currentWorklistType;\r\n        var markingMode = worklistStore.instance.getMarkingModeByWorkListType(workListType);\r\n        var isElectronicStandardisationTeamMember = 0;\r\n        if (markingMode === enums.MarkingMode.ES_TeamApproval &&\r\n            qiqStore.instance.selectedQIGForMarkerOperation.isElectronicStandardisationTeamMember) {\r\n            isElectronicStandardisationTeamMember = 1;\r\n        }\r\n        return (React.createElement(\"div\", { className: 'compose-new-msg response-message-container', id: 'message-container' },\r\n            this.renderMessageHeader(),\r\n            React.createElement(\"div\", { className: 'messaging-content' },\r\n                React.createElement(\"div\", { className: 'comp-msg-top' },\r\n                    React.createElement(\"div\", { className: 'clearfix' },\r\n                        React.createElement(\"div\", { className: 'comp-resp-id shift-left' },\r\n                            React.createElement(\"span\", { className: 'dim-text', id: 'associated-response-id-text' }, localeStore.instance.TranslateText('messaging.compose-message.associated-response') + ': '),\r\n                            React.createElement(\"span\", { className: 'message-resonse-id', id: 'associated-response-id' }, messageHelper.getMarkingModeText(markingMode, isElectronicStandardisationTeamMember) +\r\n                                this.props.responseId)),\r\n                        React.createElement(\"div\", { className: 'set-priority shift-right' },\r\n                            React.createElement(MessagePriorityDropDown, { id: 'select_priority', dropDownType: enums.DropDownType.Priority, className: 'dropdown-wrap align-right', selectedItem: this.getPriorityDropDownItem(this.priorityDropDownSelectedItem), isOpen: this.clickedDropDown === enums.DropDownType.Priority ? this.isDropDownOpen : undefined, items: [{\r\n                                        id: enums.MessagePriority.Standard,\r\n                                        name: this.getPriorityDropDownItem(enums.MessagePriority.Standard)\r\n                                    },\r\n                                    {\r\n                                        id: enums.MessagePriority.Important,\r\n                                        name: this.getPriorityDropDownItem(enums.MessagePriority.Important)\r\n                                    },\r\n                                    _showMandatoryMessagePriority ? {\r\n                                        id: enums.MessagePriority.Mandatory,\r\n                                        name: this.getPriorityDropDownItem(enums.MessagePriority.Mandatory)\r\n                                    } : null], onClick: this.onDropDownClick, onSelect: this.onSelect }))),\r\n                    React.createElement(\"div\", { className: 'msg-recipient-wrap' },\r\n                        React.createElement(\"div\", { className: 'rec-address-label', id: 'message-to-label' }, localeStore.instance.TranslateText('messaging.compose-message.to-button') + ': '),\r\n                        React.createElement(\"div\", { className: 'recipiants-list-wrap' },\r\n                            React.createElement(\"span\", { className: 'recipiant-name', id: 'message-recipiant-name' }, this.currentExaminerName))),\r\n                    React.createElement(\"div\", { className: 'comp-subject-wrap' },\r\n                        React.createElement(\"label\", { htmlFor: 'message-subject', id: 'subject-label', className: 'comp-subject-label' }, localeStore.instance.TranslateText('messaging.compose-message.subject') + ': '),\r\n                        React.createElement(Subject, { id: 'message-subject', key: 'key-message-subject', outerClass: 'subject-input-wrap', refName: 'subjectInput', hasFocus: this.props.messageType === enums.MessageType.ResponseCompose, className: 'subject-input', onChange: this.handleSubjectChange, maxLength: 120, isVisible: this.props.isMessagePanelVisible, value: this.messageSubject, callback: this.props.onMessageClose }))),\r\n                React.createElement(\"div\", { className: 'comp-msg-bottom', ref: 'msgEditor' },\r\n                    React.createElement(\"div\", { className: 'msg-editor' },\r\n                        React.createElement(MessageEditor, { htmlContent: this.messageBody, hasFocus: messageHelper.hasFocus(this.props.messageType), id: this.msgEditorId, key: 'key-' + this.msgEditorId, toggleSaveButtonState: this.toggleSaveButtonState, selectedLanguage: this.props.selectedLanguage }))))));\r\n    };\r\n    /**\r\n     * Method to render message header.\r\n     */\r\n    Message.prototype.renderMessageHeader = function () {\r\n        return (React.createElement(\"div\", { className: classNames('clearfix', { 'response-msg-header': this.props.messageType === enums.MessageType.ResponseDetails }, { 'compose-msg-header': this.props.messageType !== enums.MessageType.ResponseDetails }) },\r\n            React.createElement(\"h3\", { id: 'popup2Title', className: 'shift-left comp-msg-title' }, messageHelper.getMessageHeader(this.props.messageType)),\r\n            this.sendButton(),\r\n            React.createElement(\"div\", { className: classNames('minimize-message', { 'shift-left': this.props.messageType === enums.MessageType.ResponseDetails }, { 'shift-right': this.props.messageType === enums.MessageType.ResponseCompose }) },\r\n                React.createElement(\"a\", { href: 'javascript:void(0)', className: 'minimize-message-link', id: 'message-minimize', title: localeStore.instance.TranslateText('messaging.compose-message.minimise-icon-tooltip'), onClick: this.onMinimize },\r\n                    React.createElement(\"span\", { className: 'minimize-icon lite' }, \"Minimize\")),\r\n                React.createElement(\"a\", { href: 'javascript:void(0)', className: 'maximize-message-link', id: 'message-maximize', title: localeStore.instance.TranslateText('messaging.compose-message.maximise-icon-tooltip'), onClick: this.onMaximize },\r\n                    React.createElement(\"span\", { className: 'maxmize-icon lite' }, localeStore.instance.TranslateText('messaging.compose-message.maximise-icon-tooltip'))),\r\n                React.createElement(\"a\", { href: 'javascript:void(0)', className: 'close-message-link', title: localeStore.instance.TranslateText('messaging.compose-message.close-icon-tooltip'), id: 'message-close', onClick: this.onMessageClose },\r\n                    React.createElement(\"span\", { className: 'close-icon lite' }, \"Close\")))));\r\n    };\r\n    /**\r\n     * Send Button in compose Message\r\n     */\r\n    Message.prototype.sendButton = function () {\r\n        var _this = this;\r\n        if (this.props.messageType !== enums.MessageType.ResponseDetails) {\r\n            return (React.createElement(\"div\", { className: 'shift-left comp-msg-butons' },\r\n                React.createElement(GenericButton, { id: 'message_send_btn', key: 'key_message_send_btn', className: 'button primary rounded', title: localeStore.instance.TranslateText('messaging.compose-message.send-button-tooltip'), content: localeStore.instance.TranslateText('messaging.compose-message.send-button'), disabled: this.isSendButtonDisabled, onClick: function () { _this.messageSendValidationCheck(_this.props.messageType); } })));\r\n        }\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be mounted\r\n     */\r\n    Message.prototype.componentDidMount = function () {\r\n        messageStore.instance.addListener(messageStore.MessageStore.SEND_MESSAGE_SUCCESS_EVENT, this.resetAndCloseMessagePanel);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_NAVIGATE_EVENT, this.onNavigateAwayFromResponse);\r\n        messageStore.instance.addListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        window.addEventListener('click', this._boundHandleOnClick);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_DELETE_EVENT, this.updateMessageDeletedStatus);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.onMessagePanelOpen);\r\n        messageStore.instance.addListener(messageStore.MessageStore.MESSAGE_NAVIGATION_EVENT, this.onNavigateFromMessagePanel);\r\n        messageHelper.addInitMouseClickEventScriptBlock();\r\n        messageStore.instance.addListener(messageStore.MessageStore.TEAM_LIST_RECEIVED, this.teamListReceived);\r\n        teamManagementStore.instance.addListener(teamManagementStore.TeamManagementStore.APPROVAL_MANAGEMENT_ACTION_EXECUTED, this.examinerValidation);\r\n        applicationStore.instance.addListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be unmounted\r\n     */\r\n    Message.prototype.componentWillUnmount = function () {\r\n        messageStore.instance.removeListener(messageStore.MessageStore.SEND_MESSAGE_SUCCESS_EVENT, this.resetAndCloseMessagePanel);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_NAVIGATE_EVENT, this.onNavigateAwayFromResponse);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.POPUP_DISPLAY_EVENT, this.onPopUpDisplayEvent);\r\n        window.removeEventListener('click', this._boundHandleOnClick);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_DELETE_EVENT, this.updateMessageDeletedStatus);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_OPEN_EVENT, this.onMessagePanelOpen);\r\n        messageStore.instance.removeListener(messageStore.MessageStore.MESSAGE_NAVIGATION_EVENT, this.onNavigateFromMessagePanel);\r\n        if (messageStore.instance.messageViewAction !== enums.MessageViewAction.None) {\r\n            messagingActionCreator.messageAction(enums.MessageViewAction.None);\r\n        }\r\n        messageHelper.removeInitMouseClickEventScriptBlock();\r\n        messageStore.instance.removeListener(messageStore.MessageStore.TEAM_LIST_RECEIVED, this.teamListReceived);\r\n        teamManagementStore.instance.removeListener(teamManagementStore.TeamManagementStore.APPROVAL_MANAGEMENT_ACTION_EXECUTED, this.examinerValidation);\r\n        applicationStore.instance.removeListener(applicationStore.ApplicationStore.ONLINE_STATUS_UPDATED_EVENT, this.onOnlineStatusChanged);\r\n    };\r\n    /**\r\n     * componentWillReceiveProps\r\n     * @param nextProps\r\n     */\r\n    Message.prototype.componentWillReceiveProps = function (nextProps) {\r\n        // set to field values\r\n        if (markerOperationModeFactory.operationMode.sendMessageToExaminer(nextProps.messageType)) {\r\n            this.toFieldValues = new Array();\r\n            this.toFieldIds = new Array();\r\n            var _currentExaminerId = markerOperationModeFactory.operationMode.isStandardisationSetupMode ?\r\n                standardisationSetupStore.instance.getProvisionalExaminerId(markingStore.instance.selectedDisplayId) :\r\n                teamManagementStore.instance.examinerDrillDownData.examinerId;\r\n            var _currentExaminerName = markerOperationModeFactory.operationMode.isStandardisationSetupMode ?\r\n                standardisationSetupStore.instance.getFormattedExaminerName(markingStore.instance.selectedDisplayId)\r\n                : examinerStore.instance.getMarkerInformation.formattedExaminerName;\r\n            this.toFieldIds.push(_currentExaminerId);\r\n            this.toFieldValues.push(_currentExaminerName);\r\n            this.currentExaminerName = _currentExaminerName;\r\n            this.currentExaminerId = _currentExaminerId;\r\n        }\r\n        else if (nextProps.supervisorId > 0 && nextProps.supervisorName !== '') {\r\n            this.toFieldValues = new Array();\r\n            this.toFieldIds = new Array();\r\n            this.toFieldIds.push(nextProps.supervisorId);\r\n            this.toFieldValues.push(nextProps.supervisorName);\r\n            this.currentExaminerName = nextProps.supervisorName;\r\n            this.currentExaminerId = nextProps.supervisorId;\r\n        }\r\n        // set variables for reply and forward\r\n        if (this.props.messageType === enums.MessageType.ResponseDetails && (nextProps.messageType === enums.MessageType.ResponseReply ||\r\n            nextProps.messageType === enums.MessageType.ResponseForward)) {\r\n            this.setvariablesForReplyAndForward(nextProps.messageType);\r\n        }\r\n    };\r\n    /**\r\n     * This function gets invoked when the component is about to be updated\r\n     */\r\n    Message.prototype.componentDidUpdate = function () {\r\n        // enable or disable send button while changing props\r\n        this.enableDisableSendButton();\r\n    };\r\n    /**\r\n     * Close the message panel after deleting the message\r\n     */\r\n    Message.prototype.updateMessageDeletedStatus = function () {\r\n        messagingActionCreator.messageAction(enums.MessageViewAction.Close);\r\n    };\r\n    /**\r\n     * Get selected subordinated list.\r\n     */\r\n    Message.prototype.getSubordinateList = function (teamList) {\r\n        var that = this;\r\n        teamList.map(function (examinerInfo) {\r\n            if (examinerInfo.examinerId === that.props.selectedMessage.fromExaminerId) {\r\n                that.removeMandatoryMessagePriority = false;\r\n            }\r\n            if (examinerInfo.subordinates.length > 0) {\r\n                that.getSubordinateList(examinerInfo.subordinates);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * to show or hide mandatory message priority\r\n     */\r\n    Message.prototype.doShowMandatoryMessagePriority = function () {\r\n        var currentExaminerApprovalStatus = enums.ExaminerApproval.None;\r\n        if (examinerStore && examinerStore.instance.getMarkerInformation) {\r\n            currentExaminerApprovalStatus = examinerStore.instance.getMarkerInformation.currentExaminerApprovalStatus;\r\n        }\r\n        if (currentExaminerApprovalStatus === enums.ExaminerApproval.NotApproved ||\r\n            currentExaminerApprovalStatus === enums.ExaminerApproval.Suspended ||\r\n            this.currentExaminerId === examinerStore.instance.parentExaminerId) {\r\n            this.removeMandatoryMessagePriority = true;\r\n        }\r\n        else if ((markerOperationModeFactory.operationMode.isTeamManagementMode &&\r\n            this.props.messageType === enums.MessageType.ResponseCompose)) {\r\n            this.removeMandatoryMessagePriority = false;\r\n        }\r\n        else if (worklistStore.instance.isMarkingCheckMode && currentExaminerApprovalStatus === enums.ExaminerApproval.Approved &&\r\n            qigStore.instance.getSelectedQIGForTheLoggedInUser.role === enums.ExaminerRole.principalExaminer) {\r\n            // Mandatory message option should be visible from Marking check is doing from parent.\r\n            this.removeMandatoryMessagePriority = false;\r\n        }\r\n        return this._mandatoryMessagesFromMarkingToolCC && !this.removeMandatoryMessagePriority;\r\n    };\r\n    return Message;\r\n}(MessageBase));\r\nmodule.exports = Message;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

});