import MarkingTarget = require('./markingtarget');
import enums = require('../../../components/utility/enums');

interface QIGSummary {
    examinerRoleId: number;
    role: number;
    markSchemeGroupId: number;
    markSchemeGroupName: string;
    questionPaperName: string;
    examinerApprovalStatus: number;
    questionPaperPartId: number;
    assessmentCode: string;
    assessmentName: string;
    componentId: string;
    componentName: string;
    sessionId: number;
    sessionName: string;
    isestdEnabled: boolean;
    standardisationSetupComplete: boolean;
    isElectronicStandardisationTeamMember: boolean;
    hasQualityFeedbackOutstanding: boolean;
    isOpenForMarking: boolean;
    hasSimulationMode: boolean;
    hasSTMSimulationMode: boolean;
    newMessageCount: number;
    isMarkFromPaper: boolean;
    examinerQigStatus: number;
    currentMarkingTarget: MarkingTarget;
    markingTargets: Immutable.List<MarkingTarget>;
    markingMethod: number;
    standardisationSetupCompletedDate: Date;
    hasGracePeriod: boolean;
    examSessionId: number;
    qualityFeedbackOutstandingSeedTypeId: enums.SeedType;
    isMarkingEnabled: boolean;
    isTeamManagementEnabled: boolean;
    isStandardisationSetupButtonVisible: boolean;
    hasSecondStandardisationResponseClassified: boolean;
    isForAdminRemark: boolean;
    hasMarkingInstructions: boolean;
    hasAnyStuckExaminers: boolean;
    hasAnyLockedExaminers: boolean;
    hasPermissionInRelatedQIGs: boolean;
    relatedQIGCount: number;
    centreScriptAvaliabityCount: number;
    isStandardisationSetupAvaliable: boolean;
    zonedScriptAvailabilityCount: number;
    isMarkedAsProvisional: boolean;
    standardisationSetupPermissionCCValue: string;
    isAggregateQIGTargetsON : boolean;
	groupId: number;
    isstmInAnyRelatedQIGs: boolean;
    hasOpenMessageOrException: boolean;
    isStandardisationSetupLinkVisible: boolean;
    hasBrowsePermissionOnly: boolean;
    isHideInOverviewWhenNoWorkCCON: boolean;
}

export = QIGSummary;